(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1005562,      20005]
NotebookOptionsPosition[    996264,      19819]
NotebookOutlinePosition[   1002111,      19945]
CellTagsIndexPosition[   1002068,      19942]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Financial Data", "Chapter",
 CellChangeTimes->{{3.767881099493046*^9, 
  3.767881105160482*^9}},ExpressionUUID->"fc9086ca-7fae-4a8a-8e60-\
0556be041842"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<AMZN\>\"", ",", " ", "\"\<Lookup\>\""}], "]"}], "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.767902912216276*^9, 3.767902938478731*^9}, {
  3.767903067336413*^9, 3.767903070949581*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"96d2cba7-b7fd-4e91-9ac7-050a53c8c93b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", "\"\<NASDAQ:AMZN\>\"", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.767902939774362*^9, 3.767903040333246*^9, 
  3.767903072105083*^9},
 CellLabel->
  "Out[194]//FullForm=",ExpressionUUID->"b00441cd-6464-4f8a-88b5-\
fec9c1501087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", "\"\<NASDAQ:AMZN\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.767903076445776*^9, 3.7679030931742973`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"d77a4997-fee9-47ea-9c20-7f8cdd3d159d"],

Cell[BoxData[
 TemplateBox[{InterpretationBox[
    TagBox[
     InterpretationBox[
     "\"1\[ThinSpace]823.28\"", 1823.28, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 1823.28, Selectable -> False],RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],"US dollars",
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.767903110771819*^9, 3.767903643169785*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"247f037d-7c00-4443-898c-317bec00d124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a$", "=", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NASDAQ:AMZN\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{
          StyleBox[
          "\"Year: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
          "\"2009\""}],RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", "2009", "}"}], ",", "\"Year\"", ",", "\"Gregorian\"",
             ",", 
            RowBox[{"-", "7.`"}]}], "]"}]},
       "DateObject",
       Editable->False], ",", 
      RowBox[{"DateObject", "[", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7679036971257153`*^9, 3.767903714012224*^9}, {
  3.767903788039242*^9, 3.7679038619345217`*^9}, {3.767903923478788*^9, 
  3.767903924651133*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"ec524109-dd15-4eae-b0cf-a6e89681bf2a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2009\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"24 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2617", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2009\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"24 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2617", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     StructuredArray[QuantityArray, {2617}, 
      StructuredArray`StructuredData[QuantityArray, CompressedData["
1:eJxtl3l4k2X294PDZkUQjMqioQhCA46AEQW1WBcsyBrKatPSQgkFCk1ZS8oS
ltCyhh3CWgkCohYUkQIuJcoyGpAZlIiyNMMwiEFFsIoK+ss830+vy77Xm3/O
dc591u8597mfNBua23d4NZPJ1CnO9L+fx/xI96QYjS+pZVCPuaTH/2ixv5FB
y90rxCcf1HmwopvO9xk0o7RzV0PPXmrw8d5Pu4nvaMjLLF3gb0gv0Ed84ETX
v+rF8jDksZ9Byyqye/6PJtmW98Jvb+VZaPBJcat76zzQx8jH9WYfnW8z5OXb
7jX4pMhvvZX/K72V/xeGfVnoYcn9v/ZS/O/lL/KVwWc4ndh/pbjeNgbN8D3a
R3X/0Uv2pw1qCtuUR3L7Pqrry17gIz3XGNn5HrQLl+F26SXYpfeBzp2n7MLh
hOTOuXbZT8PuYl/i9aVP4q05falT9tYzUIfOTRl9Vf89KaprvkHjHTNS1I/y
vuSbIj8/psj+vRTh0ysFnPHXR35ss2XvzsLfzhThG9J5XKt+snugv/pzRLzf
3094XCNeM/TerxK/2D+lH3ka1BP9J/6n4n+b4noLyHdhX8mP9KWPfaV/s6/i
T6ae6dRzS+cV30DXpMjuReKPrIJTku0j5eN9SvV4R/dXvpn91ZcL/RV/dX/1
61B/4f5qf/qEvAb2n4LHPOhrqtPsrMQD+T+oczT4VOKw0DiP3S/wOSia+G0/
6te5+3Pqmqt+2b8Bp4H/jzwbfNL7gXM/1d2cugr7S3+SaGndAYZdIGmA+vno
AHAeKNw2qU5HPfQ7g8c9UG9/2bvA54zi2MZL39dAemaL9Nz90Lu/Em9wmkZe
LcH3Yj+dP69+lRSKN5UJn6Dwj0WCxuO3DrwJ/3eT3y7ZW3uA7yfCv6KIOdqg
/pTsZW46Mbc++vAz8/4gOP4CrhfA+Y0B8r/eoJ7oUvHhgKjJNVD9aThQ9rUM
GrvvAxT/zoHC6fsBOh84UPGCA+iX5JHW8p+4X9Q8Hbvj8uf6TnZO50DhuAd5
2iDhYBJ1f67+el+XfukHyivysuxCjsr+pwmnhCGym5MuPtugxd9tSVedu9PU
lz1pwnF1mvJ4MU31tJJdaOEQxdkxRPwLGcozUbSiT4b0N4lGxmUIv+wM4TUy
Q/6bYteB8+IM4bARP2XoTUbvFnp9MkWPZgqXVzOF86OipYdl5/1I/qKKZ7Je
kZ/Qx/A50nMko39HBn0ZInk98vUTt5T80jNVX+9M/GcqvzGZyrdepvp0gnjv
YXcKP0XQpAzp7VL8r7tlCO9Tiu9tXoUvqzgq3OMuDVHcPOmVbEM/lT7enS4c
zqUpzq506c+UXeLL2O2lz4X0+bD0rTcdijcojf6kYc8cDGROashv4recZ6YR
HztvmvCTvDzgUTxHb+mbv5deaKH0/H7l4XuQ+jKpOx96F3PwAP16nn41Fo52
zV2G723kbvqcRR+nMI+j0F8j3tadee2NPAH9asxHmDmKyF/4guSFDejzDc6n
MK+58D+i/7XyKt3IvMzUnDq3Mjde0YraQ5X3kwYtzz8k/eAx9GvqPNhzqOoI
DlV9P2nuvMNkFyjTfNpGS+7YC9+c+WzLfXlSeQbTyO9eaOchqn8kfC/qOABO
qi+jbv0q/YjtS/Ut+JDsXd/R55J0xS1Ml/0TnB9jn7wBn8a9+4w5Xq59ZW9I
P95KV30e7S2X9lSsz2l/9Rd7f+XXUiE+uEf+/fuqzpNlou6TLSC/ry4nHwf2
K7k/ScrbNr5yD6Yqjz6pivt+qvx2TVXes1PVj1SH6q/L/PeBljPvl/F7knpn
Cyf2deweci9rpuNP9u7q4Lm3yr0pt3etQmM4s/fzq9glRdZS30VwqGAvxHF/
GlfZT5V4xd5BUevDle8Ie6cJe+4x3R/3f3QeuDpE+W/lPjeDf5c99gT92C65
7xp5dWA/+Zi//9L/wezdVrp37iy9A9aFuifm46KJDw5V/h2HKt4j4q1z4Ocb
1BO8PFR4hyX3/TZU/WgyTPL7slR3dJjsfpa85Pww1fOK5KWPD1M+OcOk3yRL
eIgvDxQNU5/yhqneePz7JHcNR+7Cz4os+c/L0vkXw/5KY++q8rK2GK4644cr
v84GLbdfNc5j/5uyFGdblurrK967XOdx9YYLhwdkFxg0XPXNgO8qv74dihPu
jv4e6jtD3qXKy/YpeXqVf+LaLNXTg/xqkm+CU3xLp+LlOuXvynDhVF98xV1O
xatA/qxTeTU0aHHy7U7F/Zr8ruP/qPI0fyCaeE32ybKPfSdgf9kp/YYjhJto
UuRfiuP+WP4jm6UXjqL/JdSj87ha2MePUP1jRgjnp0RL2o5QHffgP26E8rht
hOpsN0L+1kC/EQ2nSq/0A+Xr+jv1NgG/e8nzCvjWVR7uLPXP/Zj66Z09XHF2
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
f3uCIzlPIu+a1GVi7hKoy8d71o53ZC14epmLjbwzk+lDiDm8iF4FfcjiPTkJ
jl+Bxzfw1+Bvks9x4ePaRz/Kmds07Y3ION0nexL3qp3uj9mpe2Vqx37ZhHwr
e2k45+vxtwf/2+nXbvrTGRymgksStA/93APflfyfpL7Z3FMLvA39B/DfCnm4
8juK+W5Df5vrvOQzcG3D/O0B70nIW9GXF7QHvE35rqu8b79xL5vTjz3o+dgP
y7C/yv+Dpnx/TZF9NJP7/BZ+7sO+CXZX9P1pLyLefO77+9D67AsPNJ99dYS5
mCZcQu3AqxffH9nQ7eD6Cf34DflV8DyNvDX9zODeZNGXo9R5nD3F91Zia+Vj
qtwXD4BbB/KqpM2o08V+KuE7ax3fxR+o/kACfWzBnF8FRzvfa3wPhrL4fh7O
91dX9tQF/EzgO3IreB/RPows5vv5cfbqaHDvx/78gf8hbdif9/HdvYL+Dafu
ueT5MvU/DP8H/yOmkn+CsRfivUd4X0t5r0Psj3TezSze0QTev968n+P0zpYu
M2hx8lm+3yah1x+6k/f4N+yC0ne9xvk9fKfU4XstSNzGfMfczndSlDiJ+n5x
HSSv7bzjDfF3ke/SYehbRf39ybcz+uN491Og22QfzCO/TL4r22JfMemvOBS7
RiJ/VnbmFnw3vsB3xBLqdgoX20nkNyR3fku8i9D6fH/9gl68cKnIJ99BfKeN
Ay8H37ND+J77Z4H0s6Gfu4XHF27h6YAfIz7gMmhSXIpb9u11bi5B3qRA8jsN
Wm6/iv2b+KteoHqL3cpjuVt4pUovOA1/v0H369y72q0+/GzQ2Pe95CUnkX+P
vx+Ul6ub4ruvKC/bTp2b8rGTv3L7FfzXK5Cfc/hzS9/6juJVvKd8Eieh94j8
B15QPeHzqtu1iPpnQjMLVNdZ8momPnFAAXXjJ0m8t3uB8v2aeC3l31qq/lim
TBVtNE14n5yqevZOk1676cSfrno901XnHIMmRR6crrgLPIZe8jqP4rg80i8S
bz7sUR4HOS+F38T5UY/iyk9ZRT/sM5AX4D8Xukjn1vWyD+6Dl994xzbiWMR7
Lxl5eqIVU0UfmqY6esxQvEfJo53iW2p5hGNtnYe+mSE/C2Yor3YzZP8w+q1k
H7UTT3UkxXWnnr7oFcCfIt6/kTefKTxOGnyGr4z6S6BDsfMoH0u1GarvD9Fg
F+Vr3yJ8XLdkF/6UfH4At9fk33kOeXvitpqpemvOlHz5TOV3ivPLonGFM4Vz
+kz52zSTfs4yziPVZ8uu4Wzh1nW24q2YLT8+5JsNWu6eb9Bif605Op82R3Wu
nSM8C+aong1zhEOcV/Yh6YUazJGfznMUp7F4+3vSt+6Qvf8C/p7wKs6v0i9t
7FW+8pvhPIy/jsjjvYr7L8Wz1PAKp++lF2gt3i67DN/b1FFNcZN92K0kHwvx
K5AfVF7mj7HbR77vU8e78I2UT3Cn8vQVCQdLU8mjl4Sn/Tg4H5qtPv45S3Xd
mCW9nsLf0hv8H5ml+opmCed/qr/h6/T5HPQG/Q/IT+IW7D6ZpT48Cf1qtuSD
Zsn/zzMlT5qpvNcw90Ho0BmqT/sl9h2kfVKyDX6azpPf4h521T0I7eJeZLNH
9sJPZX6TNc/2PszvYOqCWl/gvOEsxWsGPneoDsuvyte5inswSzRYoLl3TZbf
SEj1VXyL39rCxXqNPAq4V0nE7w2dDZ7H5M//hOJWWGbJ72Ll5d1DPovA+x3k
85DbhXPgxCzlVUAfVsBvkr7j9Czh/zj9cTIHlffxK+Zmk+5v9Ah6pdAs7ulS
6cUl6177fiIvxc8oXc+9TGdOf2Ouf+G+rWGe63GvOqN3Q3y421zlnTtXebcV
n9xhrnDd75X9p9K3fs69/Rl/hzmvNld5PIj9wLmq61mDlttXyb+3APlB5G8o
TngP8g3yYxGfZHsff7mcD56r+G7x5r7QHOzuhu8jPV86eT2meIElyqMkrL0Q
WUv+TdFziFY4wOVN5GXKJ1KnUH6rG7Tc3cugnsTFhfKbWah+dSiUX6vk3t/J
x4S8qeyCPcW7npdd5EXo/YpTepO+1EA+h7jvyj56S3zg40LVv7JQfTosGv4B
/Z+gtxWJVi+SfSP4FvB/E28vp46L1HUB+x34PUAdJ8WbdlDPPvja+GksGrgp
/eTbi4SvuUi4NIffWiS/s8nHI7nlIHU2UX7mo+ByFFzvlJ21n/RDHaUXzKSe
N4uU50PzlNcj85THr0XC0zNP+hcNmuH8Zp7it54v+4dEE++aL/2h82XfU9T1
1HzhI95kuiE/pXdh9+08ne9VXP8IgybZFknuFc3w9VUe0dXYt8N/o/ni35Fd
ZBn6zxWJlqi+5AXgdoV5vCGcnGuYr0LhZNqouuOaQm3SNzdkrvO5Z53APUVz
YAvQv4P0N4O+zqd/GdCh9ONn5vBz/E7ATyL9e5B53s/cMGeOu/H7G/Fq4LcM
u0epuyb1HCVOCXldxV8j5kFzllF6DfuPyaMJ9TcTtV3W/akYSx6LwO015nwY
83Rec+u4hN156r3BvI6ZJzqPueqpuQs/pbmydxUNPKd+xvmYg93Ss7bQnNk6
aZ6sFvFx1/FzQP5Dt2k+/M9A7cRNZM6zmLsNzM0O+K+VV6LixL6Dse8Pn6l5
82Vrrr0fMffvwb/CvRiJvne+6pJ+eWA796OQvH3YT6AeF/dkBXQ79ydQOefc
my2iwW06d7wu/+7NyI+Q92DkHuIVEC+HOiYRpwy+7wLFGbpAeb9jUI/5jPjA
gIWKPwraYKH8/oL+IPGRRxeqH9UWKr9X5SfaFrvOC5Vfo4XKrx1ys+TJqQaN
vTM6t48izm7pRS/h/5VFwn31ItlnQ3sYNMnWfpHsty9SfYcXKe62RfK/XjQU
t1i4/YBeO/HmufIXvS556R+K5+i/WH4di2W/ebHyu8On+Baf4jzkUxwzfFOf
8p7ok7+14k2DxPuWiLcu8wmXZYuFRyvibSXP2YuVRzPRkrPwjfBbnTh28c6X
lFc0DXk98pwrv4FriuOasVj5JBH3GDimqk6LFVxWkUdzn+quL3/mCfBdyL+X
qF11lYWqLZH8jiXiGyxR/jXhn+L8mSWKO34J+EhuLyfvc6rX20x+LcI13hGm
njOqw3obeHxP3rvA6RJ9fWax8Nmv8+gecFgqua86dV5njj4BjyfA6Srz9JH8
mecvUtwl0nefYG6eZk62YLeM/FoTvzNx1mmObG3pq4963sH+adVZUg1cT4FD
nuwivbAbiZ+HsPuS/NOZ937M/7vUc6HKPYj3/gr/DfW1wc9W8rkCXr8IL/9p
6mqoOXclK0/vQPAfx1zMY94TxEc+Z872gsOj5D0D+Qj6MYz4tqXSSzVomaWL
+NLOS+WvIefpS5XnrKXCY6Godzd0C3orORcf7/hoqfqwdqn6cwj9bZIn+hW3
4hj+71qmeoqWCd+dy+R3q0E95oc4H4bcukx17F2q+k6RRzXpWZuin7BMeT2P
38fEe9stE46D5c+Xw/lazheJdzvRS10m/J6FHwadQj7KOynSBfkK8jshf47/
Euex5fJbsFzny8Tb/cuF/zXkWSvo1wrV8bT45A4rpP/kCuH4vs6tL61U3MdX
yr5QvO2blfLbcpXsJ69SHq+vkt9S9AdW4eMdCww+9m4jbyw/zu8VN7qdeI1X
Kc4bonFhg3qCmxXH+eMq4d9mtfx2WC1/rtWKe2S1/G2CfwXaH7281cLh+Grl
XXON5C3WSP7MGuqB/ipaegK9M9JL3od8MbT5GuX7CX72rlGeknsS04nbW3q2
LOVfkqZ6HBuET0UuOJetVJw48NopHKI/rVS/bkgv4gKvHugJJ5M1FX7uKunP
AK/zBi0PpKxRvLPktZfzE+AragpLHnvvVI83nzor65+7Rv6XyF9oN7iZ/KIR
cIv3S6+FaOAOv/KsKd5dLHvLMfwLv3K3X/bhQ8LVvwd8a/mFTx1RfwJ+bMQd
Bj+JOFsN6jHXWGucO2euVV4z1gq/4WuFR++1ssvifMFaxQtAf5B+5DOdW8WX
WZqsU32D1um89jrheFx2/pt+4Zsj+7hrfuG1kvg+/ByR3/Bkg3qii9cK9/3i
zQ+vU91Pr1N+OYrrbrBe9v1EK6asV38+W688Pl2vvFJ0HhqwXvYJ6K9Yr/os
GyRPWq94w7ELGXE8wUPUZV6vel+TH+s0/J2XXbTRBtm7oTs2qM4pGxS/eINw
+WOD8h9VRT8pkq08wn03KN4Y9D+CHjBohu+QaKllo3CxGTTD2XGTcOu2SX7G
bRLu5zZJr41BY+8Gdp6NOu8h3l9HdqaGm5TffdIPHt0onE9QT7+Nyq+R7G2Z
+LmiPF2dkH9FXl9vFD7j8d9D+bjs5HMM+9n4/YJ654JDM/HJnejTGM2D6yzz
eW2d8J2t+Qjn0o+N9HGHzi1LNKe2CvQ3Q02at5Iv1e/E1zW33jvYZ5dXK78b
3Neaa/9Kk2y5/r/alVUov/LA6HXq00Hu33L5LZnql7+b2pPBnuyHi7r3Vu1v
UziNvf62aGK+9pJ9D3ntYc88IRySW1JHNri8JZz89XWPggu5VxOUp2UL+b7B
vviDui+Tz3nto8BH5JHI3nOQx0nt75B3pfL9U++r/3fex1Pa3+aGwi8yWfvW
Wwcc83iPNrD/JrEv/w1O3wmnSDn4blae4RfgW9OH3uynCeJDHnDwsP+KtR9L
v2Z/NlY/fKup9xJ7vRH75ytoNnG80Ch9e4U924n8qr6TSXFrlKepmD39Mnuv
KfWNVT7OQfJL/z2J07Gbg91S9ucW7DZJL2qprE91lOZR993MYwr5UaezhepJ
HA1Og5iPg+zpjppTZ6Hm33yP7k3cGPbhct2buH3Q89ybVezFPezlk+zLQdy/
gezdcezZ0ezrPfCXtKcdO9mrZyVPPiH7xJDk7pPs2/vZA821N4P3iiZOY4/W
26g89rIn9ml/eN3aQ6XdtIfMjaHn8Lebvfsae8uNn+ro/cK+3qk40UL2r5v8
ypS3/2n8HSf+Y+z1O8ivJnZ18ZMGHrF35P8AZz5y2w==
       "], 
       HoldForm["USDollars"], {{1}}]]}, {
     TemporalData`UniformTimeSpecification[CompressedData["
1:eJxVnUGO7TiwXHvgkXfxdyCRzExyCQY88hI8MPBHHnzvH464UpdOoicvUOq6
lRRviKmjEP/jf//f//V/zn//55//+m///PPP//zP//p//0Pin7nm2WuO63rl
uu5rLMq9N+So4MEz74RcS8d+sq7iwXUmD/bvhTyZ+Nz7ioHPvf1nQq69+NOo
Gx90ZxQ+6D534mAdyHrHtQ8OHrf/10+O5GiMGKx35MV6R57Fg2tf/NydHI15
D9Y7x8165ziHB88d+Ny5/Js+uW/WO8+1+NPz0/9KnQaOhn4163XFPDgunv0V
h2d/5eZorLNYb2iu4OC4b559/56LcnM0IhbrjZysV2ebkyH2xckQ+3Ay5B0s
P8dk+frFnAzpaUh5ODhZwfJzL5afZ3Ay1HVzMtR9cXDqN+qf/H30J2NyMlTe
nAxVFwenTrL8fQXL3/fk3Ni/0/vJSNa7M1jvrsXJsPfgZNAwczTOXaz3PN+N
P/lM2T/5TLs/+cyGP1nFes/zZ/3J5+hXhr7NmAxx3QOjEc8PP6nTwoMjkgcn
nTBkXhicuA6dMO6LTqjZTSeM56/45JwYnLiDThg/e4IsOmHcm04Y95kYnBiD
Thhj0gljLDphjFgcDf1a1quzy3rHoRPGvOiEMWXB+Ny56ISSdMKYQSeMmXTC
mJru+FxdclivvpGsd910wliDThhLn4TP1Zef5T8nH5LGGJrunAz66nNwNNAs
X8PB8mPSGOVeNMaITSeMOHTC3zfuoqQThirgaDwz9JNBJ4xMOqEknTCyiqNR
F53QV1DWqz+Yk+H5Knxybo5GJZ0wquiEUZtOGBp1ToY6m4Oj38vy96QT6uTS
CWMHnVDycHD2phPqskAnjHPRCXVObk6Gcx8Ozlk0Rl0FaYxxksYYp2iMcfaF
wdG/aIypqwTKz2vQGPP3/YRcFwYnr6Qx5mNIn9w0xrwOjTHv68bg5D3phHkv
OqEuoXTCfKzuk5tOqGsVnTDHRSfMcdMJU98qjsbjmp8MOmGOpBPmKDqhzsHg
aOgLynrnTWPUV5vGmI89f3JNTIbU94Tlz6Ix5tw0xpyHxqg/f3Jw1qAx6ttM
Y0wvMXhw0Bjz98WA3DRGLVVojBkXjVE+QWPUOC4OTgSNUZLGqDlGY/TamnND
v5eDo4nF8jUbWL5OEudG/hzokys4OFn0yXwukpD0SVkdfTK1ROLg1KRPZi36
pCR9Uqs8+mQ+V+NPHvqk/yiWvy/6ZO6RHI3nSv7JpDHmLhqjJI1Rv6c4GrqG
sN4zaIx5Jo0xnyXDJ1dxNE7RGPNsGmOeQ2OUpDH6L8Zo6JJCY9Tllsaoc0Jj
LBkhJkNdh06o9TKdsH5uBTnohDJcWl/dSesrXUJxutU80PokD8qvcdMJS1d9
Fqhzf3jwohPWCPbO9SzNPnlofTUvWp9mKJvlUvEs8FmtfTJofZoYtL561oCf
PLQ+zX1aX62b1qcVP62v1KZyNJ7l5CeT1lf6j6d7bVqfvmTsnXXJoNdpCUiv
q2eh+slgs6wvKL2uYtPrSpdnnv286HXqpSZHIye9TgsZel1l0OvsBDz7Weyd
Kw+9Tl0ava7qptdpiUSvq5rsnZ8LDCW9Tss4el3Vptepd2LvXHvQ6yTpdbUn
vU62QK/TL2bvXHvT6+ppFz55uCbUKo/Wpz+KXlcn6HWS9Dp1tPS6ehqRf6X+
N3qdVlf0uv388JODXqeGh83yfnqaTxa9TpJepys1vc5jgdHY96DXqe2m12kF
TK/bT/P0yWDvvO9N69tPQX9SApNB8mAy7HGzd9YZoRNqhUQn1NWJTihJJ9zP
yP1J+QLL17eI5c9BJ1QBdEJJ9s77OQmfLBqjlq00xq0vaPFzD3vnvSadcPsW
HX8adMLtxTg+aG064X561j8ZF51wu8PHX6WTy9GIRSfc7gB5cNIJ9al0wv00
x39Sy3rWq8U3630m7CcnjVEuwd55P332J4vGuHPTGLdWCZwMdbF39uKD9Wq+
8uw/Hfwnk82yFjJ0wv18q/7kvuiE218V/FV7sHfee9EJt4eSByedUCsmOuF+
vr5/8lx0wn1uOuE+g06o3pFOuM9i77wfJ/hk0Qnli3RCrdp5F1HNMHvno0mH
8iVpjLpU0RjPFTRGOS57Z9VHYzzPfZQ/qeUGJoPaXxqjRoa987mDxihJY/Tt
9cmDi8Z4nhs2f3LcNMaj/o/lPyb6yUljVAfL3tm+x3rHphOeceiEWhGzWT5z
0gm1MqMTStIJz3NX6ZPJu4heXLPex+k/2XiKJJ3wrMZTju+c8eCkE2p9TCeU
pBM+becn46YxamVCYzwxaYySNMYTDa+c5+r0yU1jPNHwikeCkyEbXjk5aYxH
DTDLz4ZXTja8IsneWd85GuN57u19suEVNYc0Rkn2zkfrS5avVSDL1+KMc6Ma
bTnVaMuR07F8GQHL3422aMzpk2rg2Tuf537kJzd98uxGW85ptEVNG3tnXTLp
k0fzjOWfRlvOaXhFDR+MUcu2C8YoSbwiSbzie/NoliUDxiiZMEZJ4hWvD2GM
ksQrcd03jNF3/WGMksQrYRKT+NybeEWyYIySG8YoSbyi/o54RXIe1jvWZr2D
eEWSeMV4bHE0ZPys97nB/EniFUniFUniFcm8WO/Mw3on8YoJCYxRknhF53Yc
nv1FniJJniJJniK5b9a7zsV6F3lKXEGeIkmeIrkG6424WG+Qp/ie8ObZD/KU
uPIarPdZAkMenv0kXpEkXpHMyfKzbpafxCuWm5MhiVdUzhyst8hTLA/PfpGn
xHMhhzyD9W7yFMvDs7/JUyTXYr07Juvd5CmS5CmWh6MhwXof6PFJ8hRJ8hTL
w8mgCwPLP7VY/iFekSRe0bqFeEVywPokJ6zPixwsESWJVySJVyQ3nfC+Dp3w
volXJIlXwnMOg3Pfi06oFRKd0EuzmwcTr0gSr9ic6IT305Z9knhFknhFMml9
8lRan2YRrU/tH24barVBnhK+O8l6dd1jvZM8RZI8RZI8RXLTCbWsoROqW6AT
3os8RZI8RXLRCW/TJx5MniJJniJJnhK3pyEOfmbKJweNURccGuMdxCuSRSe8
gzzFrJhOeCd5iuSkE0rSCZ81PSR5iiR5iuShE0rSCe8iT5EkT5EkT5EMOqFN
g/UWeYokeYokeYqG9aYx3s+9AUga473JU3xKkoOj3pL1bgIUSQKUuA8Biqk7
nfDWOp71HgIUSzqhVhDF0XhuYPwr9UvphGqH6ISSdMJxEaBIBp1w6HJVPJgA
JZ6Bo0QrrYX3TSccj119kgBFkgDFEq20ZNEJh85K8mACFLUlBCiWh4MzJp1Q
A0UnVEtDJxyDPEWSPEXy0Al9m5vlT/IUSfIUSfIUyaAxaslLY1TPSmMckzxF
kjwlxnO/6pMEKKZ0dMKxCFAki044fOuIB5OnxAjylHjae8hJJxyx6IQjiFck
iVckiVckD51Q61Q6oU4RndBP13EyJPGKZNAYRyaNURcrGuNI0hZJ0hbZ8U1j
HM8l9JOkLZKkLZKkLZJFYxy1aYyjSFv8a2iMY5O2SC4ao9eaLH+TtvgJORrj
2KQtMZ6nKiBpjOPcNMZxCF8kCV/M+umTkvRJ9QP0yXEIXyQJX0KLAvrkfG6p
QtIn9TP6pL9yGBwtEOmTU+vLzYMJX7RqJW3xw0o0xnkHjXHepC2WNEY1Xuid
1TleNEb5BI1xDtIWSxqjmmG20urhaIxzFI3RdnR4MGmLJGlL+G4WvgvzWdZ9
kvBFkvDFkq301AqC9S7SFknSFkv2zr+HufhT4pX4Qd1Fyd55Ps/yfPKmE9q/
ebqDeEWSeEWyaH0zyFMkyVN+E5+nOwetbz537j9JniJJnuLn2m6e7ty0Pq2A
aX2zyFPCjSVPd5GnSC5a36yg9c0iT5EkT5EkT4lnhQR50/rmHrS+uYlXJIlX
JIteNzd5iiR5iiyUPMWOSq+bTzPxSfIUP11Hr5uHPMX3Lul1U+tW1Ksf0OvW
RZ4iSZ4iueh16wp63brIUyTJU7wSY++8ngfKIOl1y80VDyZeCX9dMTjLi28e
XPQ631G+eTDxiu+bsHdeXujg4Kd6SFrfGsQrkodet+ZFr5Ok161JniJJnuLn
NOl1S38S653kKZLkKZLkKSruptf5CX7Wu8hTLOl1a5GnhBXrfdHrnyRPsaT1
rSBPkZx0wvWO9J8kT7GkE2odzt7ZTx+y/LzohCvJU4wh6YQryVO8qqMx+gEs
lv/M7k8Sr1iyd/ajMKy3yFPCj5VwMhR5imTRCf3YAest8pRYmzzFT9byLqJZ
MuvdTKBIkqeE6SknwyZPCa+9WO9hAkWSPCVMqjgZDnlKGJmw/MNAiiR5SpgK
cDIc8pSIi4GU8E1klO8bsjj7uoSyWfaUvPirmECRJEB5ZyQkAUr4LkzwYCZQ
JAlQwvcdMBnU0rN3dgOMet2mst5BgOLHrumEMQhQws0Gyx8MpEgSoITX04uf
S4AS8TxpC0kn9Ld58GAClIhJgBK+xLL8yUCKHxWnMcZqPEX2zd45FgMpljTG
WI2nxGo8JVbjKREMpITPN8uPxlMiGk95nkOFZALFkk6oqUAntLdxNJIJFMlJ
J5SkE7rN5mTIxlPkIXRC/YxOqL+RThjVeIq+n+ydtWCkE0YxkBL+8nIyVOMp
UY2nxGYgRZKBFEcBaIySNMbYDa/EZiDF40pjjN3wSuyGVyTZO8dhIMW8hMbo
Kwwnw2l4RZK9s/p7GmMcBlI8LWiMeTW8IsneOS/mUySZT5FseCWvhld8rwOD
kzfzKZLMp0gO+mTejbbk3WiLLij0ybyZT5FstMXRLMwNX34xODmYT5FkPkWy
0RZ1HmyWdemmMeZgICU8NJgMORte0ZFslk3dWe9zN/qTDa/kbHglZ8MrqpXG
mIv5FMmGVzR9aYy5Gl7JxXyKJPMp/urTGHM1vJLR8EoG8ymSjadkNJ6S0XhK
BgMpztDQ+jIbQPEtGJafTKBY0gkzG0+RohPKrHnbMIsJFEs6oSYkndDPR/Ls
V+Mp+lRaX1YDKFkNoHiVx/I3IyeSjJxY0vpUAa0vdwMoXjCy3sPIiSWtL08D
KHJY9s5qnWl9eZhAkSxanyStL0/jKTqUXldXAyiS9Lq6GkDRepFep0sKva6u
BlAk6XV1N4BSNyMnkoycSDaAIuOj19kHMRqaKfQ6VUOv85MvmAw1GkCRZO9c
g5ETSUZOJItepylJr5Nk76w1H73O/QHLn42n1Gw8xTfQWe9kxkSyARS5Fb1O
nQeb5VrMmPhJJnpdrQZQajWAUqsBFDcxrDeYMZFsAKWiARRdQtg7VzBjIsmM
iWQDKBUNoFQ0gFK6ILH8ZOTEWR1an59s4mTIBlAqGTmRZOQknqf6PlkNoFQ1
gFLFyIkkIyfh/o+ToRpA0WWAvbNWV3RCtzQsXxc2zo3deErtxlPquXPwyQZQ
5Bp0wtoNoNjoWK+aVNZ7GkCp0wBKnQZQ6jCBYkknrNMAij6DTihnZ++8LyZQ
JJlAsaQTyunphPtqAMWNNcrXn0hjlKQxPt98yAZQdE5ojPtmIMWSxrjvRkz2
YAJFkgmUX78zeXAjJns0YqL2gE6otTadcM9GTCTphHs2YrInAynh38t6ZyMm
knTCPRsx2YuBFEda6YR7NWKyVyMmezVishcDKZIMpEg2YiIPpTHu1YjJDgZS
YgcDKZINoOxoAGVHAyg7GEixoDHubABlZwMoOxtA2clAiiQDKZINoPjuBudG
NoCy35DYn2zEZFcjJrsaMdnFQIokAym/dpeToRpA2bsBlL0ZSJFkIEVy0Qn3
bjxl78ZT9mYgJfZmIMXtIJ1wn8ZT9mk8ZR8GUiQZSIn9Pon7Jxte2afhlXMx
kCLJQIpT1zTGczW8cq6GV87FQIokAymSDa9oOUljPHfDK+dmIMWSxnjuhlfO
3fDKuRteOTcDKZY0xjMaXrHjYG6c0fDKGcynWNIYz4u0/2SjLWc02nIm8ymS
zKdY0ifPbLTlzEZbzmQ+RZL5FEv6pJp/+uRZjbacxXyKJPMplvTJsxpeOYuB
FN+ToDGeaHjlRMMrJxpeOcF8iiTzKZINr5xoeOVEwysnmU9x9J/GeLLhlZMN
r5xseOUk8ylGADRG9TR0wlMNr5xiIEWSgZTwt4anuxpPOcUEit9PQCc8u/GU
sxtPObvxlLOZQJFkAkWy8ZSzG085u/GUcxg58V0lWt85DaCc0wDKOYycSDJy
IkmA4h/A+iQJUCQZOZFk5ESSAEWSAEX/IECRZAIlr5sJlHw/9pPkKZLkKQ5K
w+skCVAkCVB8jw3Ncl6DkRNJRk78wgl4nSQBih+VnhyNwcjJC6IgCVB0mSdA
kSRAkWTkRJKRE0kCFEkClHxP0Z9cjJxYbpa/CFAkCVAkGUjJ92xDHpa/yFP8
IGZyMizylDSKYfnByIkkeUq+0+qT5CmSjJxIMnJieTg3kjxFkjzF97EHy09G
TiwP50aSp/hBrsF6ixmTfOc+5OZkKAIU/4mT9RYjJ2lsxclQBCiSBCg6X4yc
+K0ng/VuAhTLw8mwCVAkGTlxcmlwMhwCFEkCFMvNwTmMnKRRG8s/fKOXJHlK
vrbxr7wvvsJLkgBFkgDFEs1yvpbzSUZO/KoOOuF9EaBoXU6A4idb6IQ693TC
+yZAeZk0JAGKV/x0wvtm5ESdFAGKJAGKJAGKJBMokkygpBHm5MEEKG7Zbg7O
ZALFrwmgMb5+/EkCFElGTtInjPVOEhNJEhOvJwZHYzFyIsnIiR9wpRPei8RE
ksQkjUBY72LkxO/FoxPeQWLiV/5MjkYwgZLmvZwMQWIiSWKSz33ATyYTKH6Z
EJ3wThITmxed0GCZg5NMoFjSCbUephP6PhEnQxGgSDKBYkknvIsAJd/L7ycJ
UCSZQFF5F43RtxU4NzYBiu/lBQdnM3JiSSeU49AJ701iIodh5ORnOKz3kJhI
8o1ekgQokoycOCJFJzTP52Q4fKOX+nnyFElGTtzt0wnHRZ5iSSccF3mKJBMo
OW4mUCTJUyxpjL42Y3DGzQSKJBMoknyjlyTxSr7Lqz85mEDxC65ojGMQr/za
EEwGP+zAwRlMoEgygSJJvJJjEq9YHg7OZAJFkgkUY0ka47sk/CTxSjryyPIX
AymSfMGXJGmLn/a+ODiLgRSjNfrkWKQtfjcYfXIs0pYcwUCKJAMp+S5jP0na
IknaIslAiiQDKZKkLWa2g6ORTKBIMoHiR0tpjCOJV9LPZHM0koEU2SIDKZLE
KzZNGuMo4hVJBlIkGUiRJG1J35/iZCjSFr/Ai8Y4NgMpkqQt6SduOBpPuwBJ
JxybeCXHIU9JP63DAg8jJ5LkKfk2Ip8kT9ElkpETSzqhvkZ0wnmRp0iSpzh8
ReuTpPXpikLrmxcBSuoE0frUHtH63m7pkwQokgQoksyYSDJjYknr06mm9flJ
CI7GYOTE78mj9Tl2fPNg8hRJ8pR8piAkAYolvU7rKTbL8kx6nR+/Yr2TAMWS
Xvd2ln9yMWPid/vR6+YiQEm/55VnfxGg5NukfpIZk/ylw3FwEKDkL0OGzw1m
TPL3XBgPJkDJtxuGZO/sFpDlJzMm+bsU8GDyFEnyFElmTCSZMfHNdq4JHSvn
ZCiGSiQZKsm3Zf8kAYokAYokQyWSDJXYYel1cxOg+HEVNsuaRfQ6d92sdxOg
SBKgSBKg+E1h9Lp5mDGRJEBxDpPWNw8Byu8pN5Z/mDGRJECRJEDJ927HJ5kx
8emkE66LAEX/JECRJEDJ98bJJ5kxyXXzjV6S5Cl+8RB753UzVOLnbeiE7y2Z
TxKg5BrMmFjSCbWgoBOuQYAiSYAiyciJJZ3QTjd5MAGKOkcCFElGTvxkE53w
vY30SQIUSQIUSSZQ0gey/EWAYmBPY/Rb5jk4iwkUv0CUxuiXknMyLAKU9Eix
3mDkJP3GZ579IDHxmzrZLPuNwKw3GDlJv2yXkyFITPK95fZJRk58P5lOuJLE
xJJO6AdgORrJBEr69ZScDEVikl60czIUiUn6jYQsv5hA8ZNrdML3NiEke2e/
7o3lbyZQfg+8cjJsEhNL9s5+8RbL30yg+AWxNMZ1CFByHQKU9FuNWP5hAiXf
W5ufJEBJv3yHg3OYQEm/9gXl+zFkzI24CFD8WB9757j4Ri+/1JZOGBeJSfod
ExgNvygB9cbNBEr6pQMXDyZA8ety2Ts7lD54MBMo6bw3JkMM8pR8bwN/kgkU
58dojDHIU9LXSEwGP5SNyfDeUf6TkwmUdI4RkyEm8Uo6IsjBmUygpKNrLH8S
r+R76/qTDa84ccTyFxMo6TAPJ8NqeMU5GQ7OYgLFksboHAXnRjS8EtHwih+s
Z/nBQEq+t9s/2WiLHwfn4CQDKeknj1l+NtoS2WiLn7Xl4CQDKX7RMn3ST2py
bmSjLX4IkoNTDKRkFAMplvRJP2HG0SgmUCSZQEk/gcTJsBteedHEJxlIST9W
wnp3wyuSNEY/SMHROAykSDKQYlugMUrSGE2pORqHgZQ0PWX5p+GVF6f8K43E
UG9eTKD4hft0Qq3E6YQGDIs/ZeTEr8qm9enKTevLu/EU3+o9PJiRk3whzycb
T/E9R5Tvu1043b4nlfxpAyhuB1j+YMYkPbuDBzeAkqMBFLfWHI3JjMkbRYNs
ACVnAyg5G0Dxwp31TkZO/C2h9Wm5Set7gdgnmTHJXA2g5GoAxRdvjkYwY5K+
bLDeaAAlowEUOyNHI5gxkWTGJP3N4dmPBlA8RzkayYxJZjJjki6JkyEbQPGP
ORmSGRNLep3di5OhGkDJagAlixkTS3rdc38KsvGU3AyVWNLcnAri2d8NoGiB
yGY5N0Mlv7nNencDKLkbQNFgsFnOw1CJX1ZIr5Ok1+VpAMVeztE4DJWkk0yY
DJL0uroaQHkh7Sf5Ci9JZkx8xuh1krxPqFUde+eX936SGRO/rJ/WJ8n7hHU3
gOL01cWDmTFx9IFO+IJlSPbONZgx8SyjE9bgK7x8g5VOKMneuQYzJupYmTHx
HgI0Ri3FaIw1G0+pyYxJvvT7kw2g6OLMu4i1GDlJOw7rXQ2g1GoApVYDKLUY
OfHdHDphrQZQKhpAqWgAxUiP9QYjJ94Zi8ZY0QCKlxucDMEESjpdx/KzAZTK
BlDeBwc+yciJZCMmmr10Quf2OBrFyIkkIyeSjZj4zibPfjViUsXIiSQjJ5KN
mLxPN3yyEROtxeiEtZlAST9JzMmwGzHRx7J3Vt9JY9R3m8aoVR6NUdcXGmOd
RkxUAY3Rt1FY/mnEpE4jJnUaMdkXEyiWNEanJy8e3ADKvhpA0ZE0Rq9MDw9u
AGXfDaDoGsLeWV9IGuO++UYvSxqjrIzG6OUjBmcPJlAs6YR7NGLyPr3ySSZQ
JJlA8ZWNTujFByaDs6QcjckEiiQTKJKNp+zZeMqejafoW0Qn1AylE/q3YjK8
T9x8svEUv2CS5S8mUCT5Ci/Jhlck2TvvYALFaToa446GV3Y0vLKj4ZUdTKA4
1kZjfJ8S+mTDK5LsnXcygSLJBIrv+tIYdza8srPhlZ0MpKS7JZZffKOXFzI0
Rg8UB6cYSJFkIMXPSdAndzXaorU1e2f9+fTJvRlIkWy0xTdYOTd2oy17M5Di
LW7ok3s32uJ8M0fjMIEiyQSKZMMr+zS8Iu9is+yoNOs9DKRoldfwyvsU2Ccb
XpFL0BjPxUCKF4w0xnM1vCJ7Zu+sSUZjPDcDKV630Bi1YKIxnrvRFjk9nfB9
VO2TDa9onNgs66tO69MVlNZ3RuMpXray/MHIiSWd0O98xek+s/EUrabZOz8Q
mpLWp3UMrc/dP073WcyYpMPuLHA1gHJWAyjvc3yfZMZEkhkTS1rfWQ2gnGgA
5X0k8JOMnEjyJV2WtL4TjaecYOTEyzRanxYftL732cNPNp5ykhkTyQZQTjaA
crIBFH1t6HW6GtHrfNOFZ78aQDnVAMopZkyc6KXXvQ9I/sndAIoke+ezmTFJ
b3fMencDKGc3gCLJ3vlsZkzSN4pY/mk85ZzGU85pPEXfBHrdOcyYSDaeomUc
re8c8pTfey6+8ssvYPjKlyRPcagA1idJniLJjIkvvrA+952wPvWd5Cn1Pqb6
SYZKJAlQJAlQvNcIeufyWyIuHDwYKpEkQKn3edhPEqBI8hVeksyYuFeG9UkS
oEgSoOhyy4yJJDMmv4vx5MEEKJIEKJLMmEgyY1LvM7x/chGgSBKgSK6L5S9m
TMov2OBkWOQpkuQpdQUzJt6urXj2gwDF9xWCoxGMnFge1hsEKJIEKN6rLzga
ychJ+S0grDcJUCQJUOp93vmTjJxIMnJieTgZigCl/LoRToZiAsW3um6WXwQo
5UfwORmKAKVUzWD5m8Sk3oeyP0liIsnIie/QDNa7SUwsD8/+JjEpueRkvYeR
E2/Hd3MyHBITSRITSSZQ/OYDOGG9D5J/ksTEEr2zLzdwQkkmUMpvebl4MImJ
JXpnv1CDTuj76yhf1dEJ75vExBK9s1ExnfC+mUCRJECRJED5GSoG5257ynvb
XRrjPQhQJAlQ6m47zksygeI3SNIY70mAUnfbcd5x/ZuDMxk5cddJJ5S10wnv
tuO8rvqMnEgycvJbE3AytB3nJQlQ6m57ykvyFV6+iUgnvNuO83W3Hed9x4lO
eAcTKGV+wsnQdpyXJE/xo5Y0xjuYQKk33PBJ4hVJ4hV7Co1R04rGqAs5jfFu
O877TvXi4LQ95S1pjLqi0hjvtuP87+1XHJy2p7wljVHdA43xbjvO61OJVyQZ
SLGkMWodTmO82wb0dbcN6L0z583yDwMplvTJu21AX3fbgL7utsW8361Dn5Sk
T95tA3pJ0pYabYt5SQZSLOmTo+04L8kEiu9k0xjHRbxiSWMcbcd5SSZQJPkK
L+9iSmMcbcd5r7XQO0sykOI3xNAY38ANJI1xtA3oDaFpjLI6GuMYpC1uD2iM
o21A7z6LTuitKm7+lHjF8nA0JiMnkuQpNdoW85aH5bdN5P1cNZ1wLPIUSfKU
Gm2Lee8HS+sbQYAiSYAiSYBSb5Lpk8yYeLsFWt9oW8xLEqDUaJvISzJjIkmA
UqNtMS9JgOJHPGl9Ixk5MU6h9Y22xbwkAYrtidY3ipGTMljm2W9bzEuSp/jf
9Lo31/VJAhS/SGtyNNqu8U4t0uv8Djae/banvB8RmxyNtmt8mX6z3kOAIkmA
YvS0OBpt13hLet04BCg1257yNdue8jXbrvGW9Lp58RVekuQpNdue8t6jmF4n
Sa+bN3mKFwy0vtl2jZdkqMSSXjfbnvKSBCg1267xkgyVWNLrZttTXpIAxc9T
0evmYKjEkl43257yjliwWZ5t13hJhkq8nzO9brY95SUJULwZMK1vLmZMJAlQ
LGl9s+0pX7PtGl9+5oDlLwKUmm1P+ZptT/mabdd4P95NJ/y9l5oHE6BYsnee
bdf4msGMSf1C6ji47Slvyd7ZD4Kx3iRAqdk2ka/ZNpGv2baJ977ZdMJZBCg1
2ybyNdsm8jXbNvGSjJxIEqDUbJvIywcJUGyLdMK5GTnxu9DohLPtKS9JgCLJ
BIokEyjGzjTG2faUN0lk7zzbrvGOR9IYZ9tE3k+bsVlebZv4340/1PvmXz9J
YuJRZrO8LkZOJBk58TWRTrjanvJ+Mxx7Z32r6IR+LOjwYBITSRITI3r2zqtt
Ii/JBErp+0onXG2L+Vpti3lJJlAsaYxrkJhIkpjUajvOe/N2GqMkjXFNApTf
C3AxGVbbcb5W21PeksYoy6ExrrbjvM8Pe+fV9pSXZALFksa42o7zblrYO6/g
K7ws6YQrSEy8pwub5dX2lPd9MDqhnwLjZGg7zksSoGjhwgSKXyJIJ3wz2ZB0
wtV2nJdkAsVLIjrhSvIUSzrhajvOSzKBUn5yjeUXX+Hl50RojKvtOF+r7Slf
azOB4mg0jXG1Hect2Tuvtqd8eQdrlr+JV35IgJOh7Thf3oeY5R8mUPxsC41x
tQ3oa7UN6N/X00MykFLePxVzI9oG9JLEKxVti3lfBbhijItv9KpoG9D7kTj2
ztG2mPcNR/qkdw3E3Ii2Ab3PLnvnaFvMe3s2+qQfVCweTLxS0faUL++zxXoH
8UpF23Feknilou0pX97EiPW2Leb9ykw2y9E2kS8/PskCJ3mKH1aiE0bbYt77
OdEJnwUEZOMp3gaDZ7/tOO/HoOiE3tuAp7ttMV/Rtpj/3dthvdEASrQ95d0O
8T5htF3jLWl9fkk3z2/bU96bx/A+YbRd4y1pfZENoETbU16yAZQohkos6XV+
gSy+7NH2lK9ou8aXXzDKeqsRk2h7yks2YhJt13i/P5Ve976OApJeF21P+Yq2
a3z5RiDrPXxJlyW9Ltqe8uWndFnvacQk2ibyfkSO3XG2beIrL4ZKyu94Wjy4
EZNsm8j/3mWfPJihEslGTLJtIu+UJt3Mr0Ep/rQhkmy7xluyO862L3z5lROs
dzREkm3XeE8UdsfZ9oUvx/tZ72jE5H2/yCcbMcm2TXzlZIrET3nR3LJtIi/Z
iEm2beLLkVeWPxsxybaJfGXbRL6ybRNfzhOy/NWISbZN5H37gubm28+sNxoi
ybZrvF8PzO44277w5WAM642GSLLtGi/ZEEm2feErkymScsyAk6HtGu9Gi91x
tn3hy+9c52TIhkiy7Rpf2XaNr2z7wvuln7S+LL6ky4+a0vry3TX+/wMqn+XB

      "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     TemporalRegularity -> True}}, True, 11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.767903865892002*^9, 3.767903928309292*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"d8d04f44-638d-4e97-9be9-9a5f10fd4c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "a$", "]"}]], "Input",
 CellChangeTimes->{{3.767903934627528*^9, 3.767903939722258*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"7be6ddb3-cfca-43ba-b985-9b13ad68f8bd"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
H+tnEv4e0ekf94e/Dzmm/6PfB3Bf7+L3gfngb1lNEuYrBH/bgx0p76B/CtgV
MA/vjR3g/37v4r6+SY4+hb9XtUtDzgl/g8Hq7436rYon4r1xHayLuAj/v4Md
3lNRHxPSgmPxnjNuBhsS8J6yXAW7wgehvlMU43y4iqaDHq8rqI+NZL+fqO9L
6TjejfpITsf18Z7U+6fn+HLoDzHg/5Sjnj+mp1/oZ7qCGRi/hPdmkwzUex1+
j8hAPfh7lfZ9BjU/6iFfRn6P94W5IdhmLoJ6GJqR/lZHf16ZkXrBJq9MZPw9
11qfnGJGPQzKxPUjUA/LMtF/vK90p8D//V7B+61uZvpTFvdHf7AptCT0WxkP
duO99iIz9QYg//2y8Hvmf3EW5jMIeiPBtrD+OG9ZPVhvzeHfArDB4zn+PnmY
8fCx0PcEbIrajnrNnBX7CbyIevXNSv/x92bbgazUXwP1+hCsiR+K92XGbFy/
I96XerDB9yP+Htw9G8eXh1/pslNfPpz/itmZP/79ukt25gP7s8/IznzPQb41
OainO/JdLge/x3vR1lHF/0LvtBz0ewr83aW4LN4LZTx5ni/i92eAJ/2Owu/P
yZ6cPxa/n7d7Uk8v/P50enK+IPz+bKtl/fD35ySwJakdfn+Gk/1G4/fnNS3z
sQy/P7+Bbf6P8XvTlpP5GI/fm1dycr5O+L35RfF+/N70zsX9/xS2bMjF9aKF
7Rdzsd52Qe8nxpPy4O89hXNz/9nw955muTkfvneez839FsTfTz7m5vnKgr+f
FPCin0nQ39iL+/HD30+Gk81n8Xv+nRf92gk/8+Zhv8sP/YY81PcS78shjMf3
g/4VeTi/D/zMnZfnA/7Y/PLS3/rQPzAv54f/mmXkePx+159UvAP+1snH/Y2C
v0H5qL8P9Ifm4/mpDP3HGA9Lwe/95/lS10Pf/Px+MOphETmsIfQfzc9+UxL6
XflZf/j7qWl+AZ5nK+rhUAHmZwD0Pi7A8xcHvZkKcvx36K1akP0qEfVgL8j9
vYSfDxTnRD1kKMT5vkFv5UKcT4e/p3UrxP1NhJ/3CtHfrqiHtIVZv6Px97QK
hVlfgaiHzoXpd2/8/c9SmH7cnCx+/uP4lEHCFp8i5NvBor9DEdbHHWHX1CKs
z0Bh7U4VHy5sK+1N/WZhp9Gb/aiDsGayN9evIqzf5q36v7DphhpfSPS42xTl
+OzCuolF2Q/dMt64pSjX3ydsiWU8OL2Mt38tyvzaJG4Yp6Mfy4XNm3Ssrx7Q
f1nH/EyF/s9kr5/Q712MfFzYcaEYz+NqYbe7GM/DV2FdoeLst7ugt2lx3m9x
8PNccY7/AD8/FKe+j9CbvwTruYXsx9yoBPf3DnqHlWD97IefSSW434nwM09J
rgd91gYl6R++dwxmPMQTfi8vST1P4GeuUuRg1EO9Uqy/w9A/oBTr5ST0Ly3F
fjhe5jOcUN9XEnbWLs36aCKsCSrN/T4V1i8pzf0uFjZFkcNmCFufKe6DeuhT
hvl6DH8XluH3xVDPRxj364x6eFpG5Rt+zitLPQZh28Gy9KMV9D4qS38fIv+Z
fDhfaeit4kM/ooQd+32Y70lTxM/7igtMFb3py7G+4yRurFSO+YmUuKVrOc6n
nyZ+xpdT+xc2pCnP/FqEzeXLM5+zhW2dyrMfFBd2Ti/P/S60iJ9/y7OfrxO2
lq3A/ZiFHe0rcP55wu4pjHtdENbtqEA/zgrbS1Xk91HCrnYVGd8krA1m3OuS
sGFrRe4XeszXK7J+Ogpr2lTi+iZh/YRKHD8Z+jdXov6R0H9V8WLoT+H3PuuF
jWMrsz6OCVs2Vlb5gv5LlenPDuhP5ng/b+gvomc9vIa/6/TsNymSP2eM4lKS
P41bz3y0ni76C1bh/qpCf5Mq9EMPf6MZ984Ef99XYT1mlu+N+aqyn78RtjSs
Sj0Lhe1Dq9IvvbDZy5frV5D5bPV9OX8ZYecgX+oNgN/LfdV88DNnNdZnK/hZ
txr1t4fe/mRv5ENnVfG78Pt4Ne7vGfysVZ3jS8wQP/tVV/cn6mFxdd6vDtRD
ZHXuJwL6ExT3RT2YanA9i+zXtIDsnUbYergG8/dX2PGEHN0U+jPXpD9bUQ9z
a7Jf/EE9HKjJfnQV+h/WpD8fUQ8Za7HedkG/vhbv+yfwN6IWx1eR/Wru1+J+
ywjr09VmfjMKmyrW5vjlwtYutenfXWHd3dr8/q2wUVOH+ZkrbClXh/XcS9je
sQ71bRJ2TaujzudM8fcPv09IP0v8LVOX6+UXdgbUZb01F9ZMqcv9rRDWb69L
PaHCjpL1OH6LsLttPd5PC4R1k+qxf2WaLfrD6/H7qcKWa/w+Za2wtrUf63Oy
sGG8H/OzQdhs82M9eISI/it+XD9W4s4vinMJm8bUp576wtYN9bmfgsKOi4wH
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
jpB9IuBnNQvjbvjZy0J96NfWeRb2B/Qzx0EL10uG/keKcZ/YQ2bQD/Qn136y
RzH0twcq/hb9OP1M7mcE/Ns3k34shr74may3XdCXZhbPWz/oKz+L9fEU/u2e
xe9fI9+3Z3E9xC1/Z3H/35H/srPZX4ejn7VXPF/Y9mu2ur9x/kuFsF/XRf8y
hvB+aI7+FUwOb4Tz/z2E+w/F+S8+h/3gEM5/mznUUxL9a8Ic6q2N/rVZxb1x
/nVzOd9nnP+Wc9V9h/M/di7zlRb9a+Nc+tVA2HlJcQD6l/887tcP/WvUPNZD
EPSvm8d+twH6Y+axnndDv1vFH6J/jZjP/oH9uNbM5/wloP/cfK7fCf33vYr3
ETbnW8D6HSSsdyygX+eETYkLuP5JYavXQsY3476ov5D1MBh+nlrI+UPg5+uF
zBfmt+dcxHzthN66i3je5kLvgEUqf/DzBTlhLPzMsZj5MQtrapM1K6C/n2LM
b1q8mH6F4z7LukT1c9xnNZbQv63QbyJH74D+BUtY33ug//AS9u8t8NM3lOMv
ws+eofS7G/TPDeV4C/QfCOX+JkP/I3LCMPjb3cp8jIe/s63cjwP6I1S8/ULR
f58c1VfYmG4p/T4s7JqxlP3/kbB2L+PhnReJ/ruM+w0RNmuWkXMJ28oto95v
8r1+1zLO31XipjjGE6oKW/8s4/lII+wos5z+bZPvLc7lrJfKErf/JPvVF3aV
XEH/Cghr262gf3ronbSC472End843r+HsKb4Sva3QGF965XUi/2Zxq/kfg5B
r20l9bwW1hVdRf2bF4ufLVax3lcLW8as4vqDhO0bFLcWdl1cxX5SRdjcbDXX
3ylsM69m/i4IO9eu5n53CGtiVlP/emH9R3KsxxLxc/ga1ttHibtXr+F8eonr
ohn3mgP978hJn6E/bxjr5a+wdmUY89NJvjecCaPeQGHz2zCuv0XYlnst/csa
Kvr91nL/3sLWV2u5n1LCDu067sdL2F1nHeNFhXX919HvccL25+uob62wK/t6
1n9XYW2t9dyvVdjQl3GfZcLmRetZL8tErybrBtZHGWF99Q3c33ZhU+8N9HOW
sHX+BvpRDH4fIkc8FjZW3ch4AVnPEriRetND/5yN3E8A9NsZH9AS+h9uZD56
Ctu6beJ4T/g5axP9nAP9EZt4XpOh/94m3s/ToT+tjf4YhN0WG/d7Dfm/Y2M9
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
92GMsHNEAvV5QX9YAvO7C/rPJbAepgo7Gj7jek+F3UOf0e8Coke3iuwVLGx0
KN4tbEl8xnxOEtYOfs7924QNy5+zXv4Km089p/9DhG2vn6ea35nzBfc3SNhk
fcF6aC9sPf6C+xsu7HjxgvOfE3bneEk+Af21X/I8x8DfSHKU90bxN4Hj/X2F
tdle8fzW2iT6a7xivbUQNpteUc9oYX2W16z3J8Im39ecr7ywtedr3pdhMr9j
ropbhI0Z3/D71sIW/Rvqzybf27u/YX7yC7tmv6F/+YS1+98w/5fke1vFt6xn
J/zs8pb56Shxzcy39K+AsH6vivcRNt0le7yDnx0TWZ+1Ja6bnsjxD6B/VyL9
egj9cYmsnzHQ/yeR+lvDzylJnC8Afm5Poj/XoN+ZxPVnCTt/JlHvHdGjKfWO
/sxBPYS/Y7wY6uEa4/61of/bO64/HP2t+Huu/xj9ubXiZPSLK+9Zv7PQL1Le
M98j0S+KfuD+NuI8tvjAet2N8zjmA/23CuuTGfdNETYV/sj5twhbmynWoN+Z
P3I/99Cf136kP3ukn1oKuFmPWXHfNSZHvMX7c7ib/n3Hfb3GTT0Z0Z+jU7PT
8In6RuL+G/op1Xr6lZ/Yr+Cf6cwn3u9Dof/tJ56ns7j/BiWzHpbL98ZlydQ3
BfpPJlPfb+h/lcz6bYP7WvuZ87/E+zj0M/sV3t+2Y+T4nngPPf/MfBzEe7PW
F+qfiPf80S/sf3gfuF1fqAesy5rC+qiJeqiewvopjfuldwrHDxLWPmHcfED2
b8j8lfWYE/db4FfuZxH8nfOV+RqL90OGb/R/q7C1Mjllr7Cj2zfu9y/eF7O+
8fu3wrqIb/TnKfyr8J18Dvnv/J1++CH/MxgPCMR7c4/iOLw373xn/YXIe1nT
8Qf9/Se/10w7f3B/v2S89dYP9tO7eB///sH+nR/v38k/eR4mCNtv/KT+bPh9
8eMn94/fS9qSvzjfBvz+2fKL9YH3ljP2F/U+Q31++8V8vEd9FvvN9Vzwt9Vv
5n8L/Lv8m/tpAv++qHg55Nv7D/Xg/WVp/ofzjcX7bDTjsRa8xwr95foWmc/W
9C/3b4PekX95Hh5C79q/rKeCeI/l/8f9rka+G/2jP69Rn8MYjyqA87T6H/P5
AHrPKh6E89JA8w77CcF7bIjiJLzPV4ANHpvxHjsNdgXXhv43jCfg96R+YJp3
OA/4PWlamobfr0G9nlBx7NfxEmwL6w6/PdO+g19Fhe1RYFfACOh9BjYN6Aq9
2dO9+7/n31CT7DcNfh5Jx/Vmw09XOq63FPn3SC+sC8R5MlVLz/U2QW8vsCXJ
G34+5vgI5NOYKQP0RI1C/qtkoP7cyH8PsMG3A/xLn5H+IZ+2Shm5n5I4710z
Uv9QvMdnZaS/XfHe3Qe2mdEvHeUzcT+10O87ZeJ8c3FfWcAWrzx4P+7OxHwM
x/vxtoovx33VITPjx9Cfpip+KmzekZn7W4X76mZm+nEE78dfmel3HPp9cBbm
pyvet1vJSV3wfryehfONxvvxexbubyjevyU8EPc+Imzf7MH4a7xvr3owf/uF
tV89mL/HuG91WTHe34n7tmVW+huL9+3lrMxHHN63n8Ean8J4PxbJxu9L4L3g
n437yYv3rJvsNxXv2YLZ6aenvD/sTbLTj0iJu0YoPob3bhhYFxKM90u+HKyn
Fni/NMzB+Qri/TVM8RP5Xr8qB/Udgl4HWBO/S8a763uy/jC/brAn10+P99dy
T873DfpPedKP/XjvvmY8aS7e4wO01BcMP61ajncI245rWY/18H58Qfa/jveX
Z06uXw1+Ls7J+s6K91dkTurJiPdXQk6ulwPv8Wy5qKcn6rlGLtbHf79H/h8a
x7RL
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.4330140000000005`*^9, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.4330140000000005`*^9, 3.7676448*^9}, {0, 2039.510009765625}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.767903940663753*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"50b7623c-88b2-43ef-93ff-42642a8a6545"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a$", "=", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NASDAQ:AMZN\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2019", ",", "3"}], "}"}], "]"}], ",", 
      RowBox[{"DateObject", "[", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767903988777843*^9, 3.7679040263753147`*^9}, {
  3.767904142226552*^9, 3.767904156973431*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"f7d6f86e-8dcd-4e90-ac50-673e144fe5ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Mar 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"24 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Mar 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"24 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[1671.72998046875, "USDollars"], 
      Quantity[1696.1700439453125`, "USDollars"], 
      Quantity[1692.4300537109375`, "USDollars"], 
      Quantity[1668.949951171875, "USDollars"], 
      Quantity[1620.800048828125, "USDollars"], 
      Quantity[1670.6199951171875`, "USDollars"], 
      Quantity[1673.0999755859375`, "USDollars"], 
      Quantity[1690.81005859375, "USDollars"], 
      Quantity[1686.219970703125, "USDollars"], 
      Quantity[1712.3599853515625`, "USDollars"], 
      Quantity[1742.1500244140625`, "USDollars"], 
      Quantity[1761.8499755859375`, "USDollars"], 
      Quantity[1797.27001953125, "USDollars"], 
      Quantity[1819.260009765625, "USDollars"], 
      Quantity[1764.77001953125, "USDollars"], 
      Quantity[1774.260009765625, "USDollars"], 
      Quantity[1783.760009765625, "USDollars"], 
      Quantity[1765.699951171875, "USDollars"], 
      Quantity[1773.4200439453125`, "USDollars"], 
      Quantity[1780.75, "USDollars"], 
      Quantity[1814.18994140625, "USDollars"], 
      Quantity[1813.97998046875, "USDollars"], 
      Quantity[1820.699951171875, "USDollars"], 
      Quantity[1818.8599853515625`, "USDollars"], 
      Quantity[1837.280029296875, "USDollars"], 
      Quantity[1849.8599853515625`, "USDollars"], 
      Quantity[1835.8399658203125`, "USDollars"], 
      Quantity[1847.3299560546875`, "USDollars"], 
      Quantity[1844.0699462890625`, "USDollars"], 
      Quantity[1843.06005859375, "USDollars"], 
      Quantity[1844.8699951171875`, "USDollars"], 
      Quantity[1863.0400390625, "USDollars"], 
      Quantity[1864.8199462890625`, "USDollars"], 
      Quantity[1861.68994140625, "USDollars"], 
      Quantity[1887.31005859375, "USDollars"], 
      Quantity[1923.77001953125, "USDollars"], 
      Quantity[1901.75, "USDollars"], 
      Quantity[1902.25, "USDollars"], 
      Quantity[1950.6300048828125`, "USDollars"], 
      Quantity[1938.4300537109375`, "USDollars"], 
      Quantity[1926.52001953125, "USDollars"], 
      Quantity[1911.52001953125, "USDollars"], 
      Quantity[1900.8199462890625`, "USDollars"], 
      Quantity[1962.4599609375, "USDollars"], 
      Quantity[1950.550048828125, "USDollars"], 
      Quantity[1921., "USDollars"], 
      Quantity[1917.77001953125, "USDollars"], 
      Quantity[1899.8699951171875`, "USDollars"], 
      Quantity[1889.97998046875, "USDollars"], 
      Quantity[1822.6800537109375`, "USDollars"], 
      Quantity[1840.1199951171875`, "USDollars"], 
      Quantity[1871.1500244140625`, "USDollars"], 
      Quantity[1907.5699462890625`, "USDollars"], 
      Quantity[1869., "USDollars"], 
      Quantity[1858.969970703125, "USDollars"], 
      Quantity[1857.52001953125, "USDollars"], 
      Quantity[1859.6800537109375`, "USDollars"], 
      Quantity[1815.47998046875, "USDollars"], 
      Quantity[1823.280029296875, "USDollars"]}}, {
     TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNkj1OBTEMBl9BxS24QfzviBM8iYojUCBRUTzuL5KVINOsdrTeOGN/Lx/f
75+vt9vt8bQeb1+Pn/vzerHKYV06xj+mpwPLtIEtk8VzRB4UDcFXsV1y0HUd
fDBkOHEmGknvgw/O6+c/1KGNYhUJ9FUdgr7q69rAcPpqmrF4fwP24DRsJH3t
antQrVls6uhrLhyOZVHfKqi/DjIWT53o65ffQS3quyX13fctDoY5+vqeI3Am
fWMEtx9i3H6ochrhTd+Iom9kMAxRzjBEG6exFkbflKLv2hnDsCbLMCx/TiNz
0jerGYbsZBhyBsNwbQiok/plTf26YnUwgmHYe1h9fwHnjo48
      "]]}, 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     TemporalRegularity -> True}}, True, 11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.767904029561*^9, {3.7679041495944138`*^9, 3.767904159638509*^9}},
 CellLabel->
  "Out[203]=",ExpressionUUID->"a6c1a501-a8ab-42f6-9b27-1bbe64d9b94d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "a$", "]"}]], "Input",
 CellChangeTimes->{{3.76790424944514*^9, 3.7679042562990522`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"1735185f-49f8-4cac-afd2-9b11fb557c26"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw10l9IU3EUB/Afsdxfd+/sH4ySX9hLBDJRJCjjCsKop5WIgyxGkBD+Wz0O
BhdCfAoGgrCyuEEgCuUgxAyEq2+SyA0Dn6wJgQ/r4YJggi9u3/Pd4HL5cM49
v/M7O9efTT16fk4pdaf+NN71X+lp4F9//W3X2t9a9bfeF+svNpwJnodz317C
dpfY3b4AVx6Lre7BcsP5QAtcLSQRdzrFudEbsJcV231jsHottg6ycOqz2Mlv
wO6toLh8+13D/lCQ9WZgbYvti5fm0e+S2IpMwPavZnwW+eZgiPE12Co2/QfO
L4R4vznY+RniPFZg71Ss1C6cK4Sl/mYW55U+0bVh2N0Js94r2D8J835jsO6I
SLx9Ba58jDB+CFd/iPXIMmwei6sP92FLRyU/7cH5B1HOdxtWW1H+H7tw6kis
bl59j/6vxfh9B1xKx3ify3DGp/uKsJ1s5TyND+h3oJXzWEW8Otn0GmyWxXq6
gHznSpz7dB/2+uOsl4TVeNO/8X1qLs7+vkq/rljtLSLfv2dw/6S+fmHw/ACc
mTVY77/0v25wHstw5ZDx2gxsjZrsryDzLJnMd2Hnu8l9vIt87y+d3oGVkeD5
PTLPNwnudxR2VxPspwX2DxI8Lw7rWBv7eSL73NvG/SjOW2ebhAL6
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.7602360000000005`*^9, 1601.8189425998266`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.7602360000000005`*^9, 3.7676448*^9}, {1601.8189425998266`, 
   1962.4599609375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.767904256768059*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"b1331fe0-404f-4cbf-9033-a1d5e067108c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p$", "=", 
  RowBox[{"Predict", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{"Rule", ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AbsoluteTime", "@*", "First"}], "/@", 
         RowBox[{"a$", "[", "\"\<DatePath\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"QuantityMagnitude", "/@", 
         RowBox[{"a$", "[", "\"\<Values\>\"", "]"}]}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.767904081928961*^9, 3.767904085371401*^9}, {
  3.767904270816698*^9, 3.7679042909894133`*^9}, {3.767904365650812*^9, 
  3.767904395124465*^9}, {3.767905406798328*^9, 3.767905422513668*^9}, {
  3.767905519410923*^9, 3.767905555996752*^9}, {3.7679060327216883`*^9, 
  3.767906042364883*^9}, {3.76790607655893*^9, 3.767906094361507*^9}, {
  3.767906864284042*^9, 3.767906869611884*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"c3502bf7-b200-4623-a3dd-ba5c07961f5f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["59", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 59, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 1537627216228573037]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 59, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {3.764127294915254*^9}, "Method" -> "Naive", 
                   "VectorLength" -> 1, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {3.764127294915254*^9}, 
                   "StandardDeviation" -> {2.1247750085277264`*^6}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 1]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{1.}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {3.764127294915254*^9}, 
                    "StandardDeviation" -> {2.1247750085277264`*^6}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 1, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.009074, "MaxTrainingMemory" -> 61792, 
                  "DataMemory" -> 592, "FunctionMemory" -> 21744, 
                  "LanguageVersion" -> {12., 0}, "Date" -> 
                  DateObject[{2019, 5, 26, 18, 0, 42.477531`8.38073424321093},
                     "Instant", "Gregorian", -7.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 1, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {12., 0}, "ID" -> 
             4026204838636604962]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {3.764127294915254*^9}, 
             "StandardDeviation" -> {2.12477501045546*^6}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 555916400263098432]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 5248799157335144036]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {1824.0008482852224`}, 
             "StandardDeviation" -> {83.35853289958784}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 8777308268783301055]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 8286750410439386943]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (1824.0008482852224` + 
       83.35853289958784 #& ), 
      "ProcessorFunction" -> (-21.881393359962086` + 
       0.011996372359438975` #& ), "Name" -> "value", 
      "Quantiles" -> {-2.437672454023026, 1.6610070719342298`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     AssumeDeterministic -> False, "EstimationMethod" -> "MaximumPosterior", 
      "NominalCovarianceType" -> "HammingDistance", "NumericalCovarianceType" -> 
      "SquaredExponential", "OptimizationMethod" -> Automatic, 
      "TrainedGPModel" -> 
      Association[
       "CovarianceFunction" -> 
        Association[Method -> "SquaredExponential" + "WN", "HyperParameters" -> {
            Association[
            "NumericalLengthScale" -> 0.5708655225146649, "SignalVariance" -> 
             0.6838791349849934, "NoiseVariance" -> 0.05935223681721657], 
            Association[
            "NumericalLengthScale" -> 0.5708655225146649, "SignalVariance" -> 
             0.6838791349849934, "NoiseVariance" -> 0.05935223681721657]}], 
        "MeanFunction" -> Association[], "Purpose" -> 
        Association["task" -> "FunctionOptimization"], 
        "TrainingData" -> {{{1.6646349262051123`}, {-0.7467698148801245}, {
          0.7551934344122799}, {0.9889665143317194}, {-1.0154732468075272`}, {
          1.2624199419113278`}, {-0.9911527344537363}, {-0.926051823050093}, \
{-0.20752038836862655`}, {-0.7842468093003317}}, {
          0.4280210337757932, -1.8102630582649213`, 0.9387059607807043, 
          0.9215505039703006, -1.5335059278681475`, 
          0.7915102376262405, -1.5783722433403753`, -2.437672454023026, \
-0.6067861631014866, -1.8400138274121824`}}, "Nominal-Numerical" -> 
        Association[
         "NumericalVector" -> {{1.6646349262051123`}, {-0.7467698148801245}, {
           0.7551934344122799}, {
           0.9889665143317194}, {-1.0154732468075272`}, {
           1.2624199419113278`}, {-0.9911527344537363}, {-0.926051823050093}, \
{-0.20752038836862655`}, {-0.7842468093003317}}]], 
      "CholeskyTraining" -> CompressedData["
1:eJxTTMoPSmViYGDggmLPGb5rn/W8ss/lvcovdl3G3ujYB8UTK87at+4IrDTS
v2V/Mqbt1B73N3ZZ8+RuCU95Yi++c9OzGMePds+bL4Qqq/y12xT753mYQb79
voUBFv/PidozQMFd2eSVIHO9+ievNiqfZX9lTs5CweoG+4+yKQZGc57bt3Td
lg3Rj7L35nOfyy74wp53RuO1MOmX9maXDXazPnpgX77knva2wFdw82DAIUVN
ir36pf1hbqncrJKn9ucdl9YJxU7cbxvB5R/Mf9OeW/LApeqrE/ZPsfUqm6TV
u9/x3N5FU/RP2Ks96Cn+sbNgP7p5MPCtfWH1E6mL9g91zC83+8yyXxzxIcJK
5Yr98utP8g5kzLSfF/HUce6Jqfa1k9Q8/7Cf3l/U8Jgh1agCw33o4Iaujli2
6Q37ogU7OW48r9wfIC741XzCVfvpL3Uiey0u2L/ZbN61/dnV/TO3Riy+JrKe
oHkwEPp1kuBe3cP2qRrl71x2Be2vPfjiafWvpP1brlj+lHLdYj8n/vRFLx0/
nP7FBTKfLeHIydluvyPe4tnEfwvtXc90KhpqbNofLGQ4KUK/i2j3oYOY2StL
tn3YYu8hftBb6fH2/fnzJ+qaOk4j2zwY+GixMne/2B37SaWTVz4vLqPYPBh4
rDwnLtNimz0A14TY+A==
       "], "HyperparameterSample" -> {}, 
      "GPModelSample" -> {}, "CholeskySample" -> {}, 
      "FeatureType" -> {"Numerical"}, "InputFeatures" -> {}, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-0.4182306516511332}, 
             "StandardDeviation" -> {1.1936039116507247`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 6317336524973707552]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "GaussianProcess", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       AssumeDeterministic -> 
        Association["Value" -> False, "Options" -> Association[]], 
        "CovarianceType" -> 
        Association[
         "Value" -> Association[
           "Numerical" -> "SquaredExponential", "Nominal" -> 
            "HammingDistance"], "Options" -> Association[]], 
        "EstimationMethod" -> 
        Association[
         "Value" -> "MaximumPosterior", "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> Automatic, "Options" -> Association[]], 
        "SearchMethod" -> 
        Association[
         "Value" -> "SimulatedAnnealing", "Options" -> Association[]], 
        "InputFeatures" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[204737], "TrainingFunction" -> Predict, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 4.4231509782771, "PreprocessingTime" -> 
      0.094093`5.4251023090119395, "LossName" -> "StandardDeviation", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[11.297542493004727`, 2.6486190434920327`], 
         "StandardDeviation" -> Around[37.44364152024819, 7.349919386031192], 
         "EvaluationTime" -> 0.000051262988398154675`, "TestSize" -> 49, 
         "ModelMemory" -> 20536, "ModelUtility" -> -4.354498870049922, 
         "TrainingSize" -> 10, "TrainingTime" -> 0.15848931924611134`, 
         "TrainingMemory" -> 174144, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[11.297542493004727`, 1.8728564864330435`]}, 
         "StandardDeviationHistory" -> {
           Around[37.44364152024819, 5.1971778390371215`]}, 
         "Configuration" -> {
          "GaussianProcess", AssumeDeterministic -> False, 
           "CovarianceType" -> {
            None, "Numerical" -> "SquaredExponential", "Nominal" -> 
             "HammingDistance"}, "EstimationMethod" -> "MaximumPosterior", 
           "OptimizationMethod" -> Automatic, "SearchMethod" -> 
           "SimulatedAnnealing", "InputFeatures" -> {}}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
          "TrainingTime", "TrainingMemory", "ExperimentCount", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}]}], 
        Association["ID" -> 116926360025547]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GaussianProcess", "Options" -> 
           Association[
            AssumeDeterministic -> Association["Value" -> False], 
             "CovarianceType" -> 
             Association[
              "Value" -> None, "Options" -> 
               Association[
                "Numerical" -> Association["Value" -> "SquaredExponential"], 
                 "Nominal" -> Association["Value" -> "HammingDistance"]]], 
             "EstimationMethod" -> Association["Value" -> "MaximumPosterior"],
              "OptimizationMethod" -> Association["Value" -> Automatic], 
             "SearchMethod" -> Association["Value" -> "SimulatedAnnealing"], 
             "InputFeatures" -> Association["Value" -> {}]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[11.297542493004727`, 2.6486190434920327`], 
              "StandardDeviation" -> 
              Around[37.44364152024819, 7.349919386031192], "EvaluationTime" -> 
              0.000051262988398154675`, "TestSize" -> 49, "ModelMemory" -> 
              20536, "ModelUtility" -> -4.354498870049922, "TrainingSize" -> 
              10, "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
              174144, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[11.297542493004727`, 1.8728564864330435`]}, 
              "StandardDeviationHistory" -> {
                Around[37.44364152024819, 5.1971778390371215`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[10.191965821935785`, 3.6133150798763047`], 
              "StandardDeviation" -> 
              Around[49.87956715956534, 9.970919449681698], "EvaluationTime" -> 
              0.0001662718595807399, "TestSize" -> 24, "ModelMemory" -> 
              40888., "ModelUtility" -> -4.6419698736904085`, "TrainingSize" -> 
              47, "TrainingTime" -> 0.13899287949740757`, "TrainingMemory" -> 
              291605.3333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[6.914017599942233, 1.6265775237238846`], 
                Around[13.469914043929338`, 4.274514753176687]}, 
              "StandardDeviationHistory" -> {
                Around[51.48263263256595, 16.185764703042025`], 
                Around[48.27650168656472, 12.395650113750682`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001662718595807399, "ModelMemory" -> 
             40888., "StandardDeviation" -> 
             Around[49.87956715956534, 9.970919449681698], "TrainingMemory" -> 
             291605.3333333333, "TrainingTime" -> 0.2404951181495818], 
           "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value", "Options"}, {TypeSystem`AnyType, 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {
                 TypeSystem`Atom[String]}], 2]}], 6]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 116922065058251]], "MaxTrainingSize" -> 59, 
      "PreprocessorEvaluationTime" -> 
      3.09863281249998182703686566696888`4.*^-6, "PreprocessorMemory" -> 
      39264, "InputDimension" -> 1, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.767882443238167`16.328672333639233*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.07042178049656057, 
          "ElapsedTimes" -> 0.152938, "ExperimentCounts" -> 1], 
         Association[
         "TrainingSizes" -> 47, "TimeBudgets" -> 0.3521089024828028, 
          "ElapsedTimes" -> 0.403357, "ExperimentCounts" -> 2]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[116930654992843]], "ID" -> 
         116934949960139]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3767558400}, 
           "ID" -> 2388477106615774462]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 0.800977, 
      "MaxTrainingMemory" -> 681688, "DataMemory" -> 5704, "FunctionMemory" -> 
      126760, "LanguageVersion" -> {12., 0}, "Date" -> 
      DateObject[{2019, 5, 26, 18, 0, 43.248613`8.388547161461185}, "Instant",
         "Gregorian", -7.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7679042924313593`*^9, {3.7679043793013487`*^9, 3.7679043979829483`*^9}, 
   3.767905560778757*^9, 3.767906044851454*^9, 3.767906080979664*^9, 
   3.767906872025239*^9, 3.7679076432729597`*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"003288e9-5a91-46ad-af55-bb2f408721cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "p$", "]"}]], "Input",
 CellChangeTimes->{{3.767905708443931*^9, 3.767905713092948*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"2aa0257c-465e-40a9-ad0f-dada9a03a298"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "\<\"Numerical\"\>"},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"37.443641520248192478`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "7.3499193860311917703`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "22.743802748185807161`3.",
                   "\", \"", "52.143480292310577795`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 22.743802748185807161`3., 
                  ", ", 52.143480292310577795`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"GaussianProcess\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 6, "Length" -> 6, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 6, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1338105332], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "HandleQ" -> 
                    True, "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1338105332]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "AssumeDeterministic", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["CovarianceType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 615621383][{
                    
                    Key["CovarianceType"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["EstimationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["MaximumPosterior", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["SearchMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["InputFeatures", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    GeneralUtilities`Slice[
                    Key["InputFeatures"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], {}}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 615621383][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    615621383]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    615621383][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 AssumeDeterministic -> False, 
                  "CovarianceType" -> {
                   "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                  "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                  "SearchMethod" -> "SimulatedAnnealing", 
                  "InputFeatures" -> {}], 
                 TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                 
                 Association["ID" -> 261417649797581]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "2.8`",RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "58.4`",
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"11.2975424930047267935`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "2.6486190434920326986`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "6.0003044060206613963`3.",
                   "\", \"", "16.5947805799887930789`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 6.0003044060206613963`3., 
                  ", ", 16.5947805799887930789`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"129.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"59","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"800.`","\"ms\"","milliseconds","\"Milliseconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.622836909706811}, {
                    3.8501476017100584`, 3.9096114431391675`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    3.622836909706811}}, {{3.8501476017100584`, 
                    3.9096114431391675`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.40431658303218}, {
                    2.302585092994046, 3.8020643993202765`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.8501476017100584`, 3.6865930349958207`}, {
                    3.8501476017100584`, 4.091849562451248}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 3.606904991182791}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {3.606904991182791, 3.9096114431391675`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 11.297542493004727`}, {
                    3.8501476017100584`, 10.191965821935785`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    11.297542493004727`}}, {{3.8501476017100584`, 
                    10.191965821935785`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 8.648923449512694}, {
                    2.302585092994046, 13.94616153649676}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.8501476017100584`, 6.57865074205948}, {
                    3.8501476017100584`, 13.80528090181209}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 10.130544895765288`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {10.130544895765288`, 11.297542493004727`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 11.297542493004727`}, {
                    3.8501476017100584`, 10.191965821935785`}, {
                    3.8501476017100584`, 10.191965821935785`}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 11.297542493004727`}}, {{
                    3.8501476017100584`, 10.191965821935785`}}, {{
                    3.8501476017100584`, 10.191965821935785`}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 10.130544895765288`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {10.130544895765288`, 11.297542493004727`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.622836909706811}, {
                    3.8501476017100584`, 3.9096114431391675`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    3.622836909706811}}, {{3.8501476017100584`, 
                    3.9096114431391675`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.40431658303218}, {
                    2.302585092994046, 3.8020643993202765`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.8501476017100584`, 3.6865930349958207`}, {
                    3.8501476017100584`, 4.091849562451248}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 3.606904991182791}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {3.606904991182791, 3.9096114431391675`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 11.297542493004727`}, {
                    3.8501476017100584`, 10.191965821935785`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    11.297542493004727`}}, {{3.8501476017100584`, 
                    10.191965821935785`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 8.648923449512694}, {
                    2.302585092994046, 13.94616153649676}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.8501476017100584`, 6.57865074205948}, {
                    3.8501476017100584`, 13.80528090181209}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 10.130544895765288`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {10.130544895765288`, 11.297542493004727`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 11.297542493004727`}, {
                    3.8501476017100584`, 10.191965821935785`}, {
                    3.8501476017100584`, 10.191965821935785`}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 11.297542493004727`}}, {{
                    3.8501476017100584`, 10.191965821935785`}}, {{
                    3.8501476017100584`, 10.191965821935785`}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 261421944764877]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.2663615756285016`, 10.130544895765288`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2663615756285016`, 
                    Log[59]}, {10.130544895765288`, 11.297542493004727`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{363., {134., 139.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.767905714860097*^9, 3.76790610239229*^9, 
  3.76790687646638*^9, 3.767907645513199*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"24ddf9ba-6105-4539-8b95-b95ffb7d759a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"List", ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"AbsoluteTime", "@*", "First"}], "/@", 
          RowBox[{"a$", "[", "\"\<DatePath\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"QuantityMagnitude", "/@", 
          RowBox[{"a$", "[", "\"\<Values\>\"", "]"}]}]}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Data\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p$", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p$", "[", "t", "]"}], "+", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"p$", "[", 
          RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"p$", "[", "t", "]"}], "-", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"p$", "[", 
          RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[IndentingNewLine]", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", 
          RowBox[{"a$", "[", "\"\<DatePath\>\"", "]"}], "]"}], "]"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"First", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"a$", "[", "\"\<DatePath\>\"", "]"}], "]"}], "]"}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"{", "3", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Exclusions", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Prediction\>\"", ",", "\"\<Confidence Interval\>\""}], 
       "}"}]}]}], "]"}]}], "   ", "]"}]], "Input",
 CellChangeTimes->{{3.767904441204645*^9, 3.7679044546990137`*^9}, {
   3.7679045104990253`*^9, 3.7679045974656687`*^9}, {3.7679047511261597`*^9, 
   3.767904760727639*^9}, {3.767905139228244*^9, 3.767905154388824*^9}, {
   3.767907073646825*^9, 3.767907102701202*^9}, {3.767907136810047*^9, 
   3.767907142342157*^9}, {3.7679073093287897`*^9, 3.76790736844519*^9}, {
   3.767907439207821*^9, 3.767907467119878*^9}, {3.767907503611034*^9, 
   3.767907503814013*^9}, {3.767907538277628*^9, 3.767907546879314*^9}, 
   3.7679077325330677`*^9, {3.7679077764340754`*^9, 3.767907782295104*^9}, {
   3.767907851546321*^9, 3.767907876336648*^9}, {3.767907906814947*^9, 
   3.767907947077793*^9}, {3.767908051941862*^9, 3.767908060448311*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"a6df93cf-9ed8-4eee-a398-bcb5837e7668"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw10l9IU3EUB/Afsdxfd+/sH4ySX9hLBDJRJCjjCsKop5WIgyxGkBD+Wz0O
BhdCfAoGgrCyuEEgCuUgxAyEq2+SyA0Dn6wJgQ/r4YJggi9u3/Pd4HL5cM49
v/M7O9efTT16fk4pdaf+NN71X+lp4F9//W3X2t9a9bfeF+svNpwJnodz317C
dpfY3b4AVx6Lre7BcsP5QAtcLSQRdzrFudEbsJcV231jsHottg6ycOqz2Mlv
wO6toLh8+13D/lCQ9WZgbYvti5fm0e+S2IpMwPavZnwW+eZgiPE12Co2/QfO
L4R4vznY+RniPFZg71Ss1C6cK4Sl/mYW55U+0bVh2N0Js94r2D8J835jsO6I
SLx9Ba58jDB+CFd/iPXIMmwei6sP92FLRyU/7cH5B1HOdxtWW1H+H7tw6kis
bl59j/6vxfh9B1xKx3ify3DGp/uKsJ1s5TyND+h3oJXzWEW8Otn0GmyWxXq6
gHznSpz7dB/2+uOsl4TVeNO/8X1qLs7+vkq/rljtLSLfv2dw/6S+fmHw/ACc
mTVY77/0v25wHstw5ZDx2gxsjZrsryDzLJnMd2Hnu8l9vIt87y+d3oGVkeD5
PTLPNwnudxR2VxPspwX2DxI8Lw7rWBv7eSL73NvG/SjOW2ebhAL6
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {
      GraphicsComplexBox[CompressedData["
1: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
lXTwm/pc8D2XAX4/Eu6VL+1iof8B1W2Ieg==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           GrayLevel[0.5], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt0UOQGAEQQNHd2LY3tm2bGzvZJNfYtm3btm3btm0nryo5vPrT3TWHqQkK
aRPcOlRAQEAgn3lOPkM8QlORDLywz6/xqUcYKpGRprx0L6AJqE9YKpOJZrxy
L6gJaUA4qpCZ5rx2L6SJCE9VsvDGvrAmJgJvze8o4jkJEalGVt7bF9WkROKD
uZgmIzIfzZ/+f+cXitslJwrVycZX+xKagqjUIDvf7EtqEA2JRjA5COG7eylN
SSOiU5OctOCHe2lNRWNiUItctOSnexlNTRNiUpvc/HIrq2mIxW9zOU1LbP4E
/PuB5UlHHOqQh0AqkJ641CUvrQjFUK8+YzvXmc4DVnKSIWzjGtNYwQkGM4iB
TGU5xxnAVq4yhWUcoz9P2cIVJnOfpRylH0/YzGUmcY8lHKEvj9nEJSZyl8Uc
pg8bucgE7rCIQ/RmAxcYz0IO0ov1nGccCzhAT9ZxjrHMZz89GMM89tGdbnSl
C50ZzVz20olRzGEPHVnLWUZym9nspgOPWMMZRnCLWeyiPQ9ZzWmGc5OZ7KQd
qzjFMG4wgx205S93HH5p
             "]]}]}, {}, {}}, {{}, {}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           LineBox[{1, 70, 42, 26, 86, 58, 2, 71, 43, 98, 27, 87, 59, 105, 3, 
            72, 44, 99, 28, 88, 60, 106, 4, 73, 45, 100, 29, 89, 61, 107, 5, 
            74, 46, 30, 90, 62, 6, 75, 47, 31, 7, 8, 9, 10, 11, 12, 13, 76, 
            48, 32, 14, 77, 49, 33, 91, 63, 15, 78, 50, 34, 92, 64, 16, 79, 
            51, 101, 35, 93, 65, 108, 17, 80, 52, 102, 36, 94, 66, 109, 18, 
            81, 53, 103, 37, 95, 67, 110, 19, 82, 54, 104, 38, 96, 68, 20, 83,
             55, 39, 21, 84, 56, 40, 22, 23, 24, 85, 57, 41, 97, 69, 111, 
            25}]}, Annotation[#, "Charting`Private`Tag$4067318#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           
           LineBox[{112, 187, 155, 219, 137, 205, 173, 113, 188, 156, 220, 
            138, 206, 174, 228, 114, 189, 157, 221, 139, 207, 175, 229, 115, 
            190, 158, 222, 140, 208, 176, 116, 191, 159, 141, 117, 192, 160, 
            142, 118, 119, 120, 121, 122, 193, 161, 143, 123, 194, 162, 144, 
            209, 177, 124, 195, 163, 145, 210, 178, 125, 196, 164, 146, 211, 
            179, 126, 197, 165, 223, 147, 212, 180, 127, 198, 166, 224, 148, 
            213, 181, 230, 128, 199, 167, 225, 149, 214, 182, 231, 129, 200, 
            168, 226, 150, 215, 183, 232, 130, 201, 169, 151, 216, 184, 131, 
            202, 170, 152, 132, 133, 134, 203, 171, 153, 217, 185, 135, 204, 
            172, 227, 154, 218, 186, 233, 136}]}, 
          Annotation[#, "Charting`Private`Tag$4067318#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJwNyVVWGwAUQMEEp8WlaIHg7l7cXYK7/9INsGLcpRSZjzn3Sejwb/g0GAgE
zjinw/KLSKao4sK9U7NYJ4ppqtnj0r9Ls9kgmhlq2OfKv1tz2CSGWWo54Nr/
j+YSyxx13Lj3aB5x3Nrv6DXnE8889dy79+lvfvBg79cCfvJof+KZFwbcCklg
gQZe3Qe1iEQWaeTNfUhDbJFEmCYO+ec/rMVsk8wSzRzx7j+iJeyQwjItHPPf
f1RL2SWVFVr58BvTMtL4tI9rOel82QM6QQUZrNJGkEkqyWSNdk6I4Bvc5iu4

            "]]}, 
          Annotation[#, "Charting`Private`Tag$4067318#3"]& ]}}], {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7602360000000005`*^9, 1601.8189425998266`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7602360000000005`*^9, 3.7676448*^9}, {
      1601.8189425998266`, 1962.4599609375}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Data\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Prediction\"", "\"Confidence Interval\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.76790795040031*^9, 3.767908064826386*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"b17c2eee-c9f2-4d72-bf06-46e705f30b3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "predictPrices", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"predictPrices", "[", 
    RowBox[{
    "instrumentSymbol_String", ",", "\[IndentingNewLine]", 
     "closingPriceDateStart_", ",", "\[IndentingNewLine]", 
     "closingPriceDateEnd_", ",", "\[IndentingNewLine]", "predictionEnd_", 
     ",", "\[IndentingNewLine]", "method_String"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"FinancialData", "[", "\[IndentingNewLine]", 
         RowBox[{"instrumentSymbol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"closingPriceDateStart", ",", "closingPriceDateEnd"}], 
           "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"absEnd", "=", 
        RowBox[{"AbsoluteTime", "@", "predictionEnd"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"absTimes", "=", 
          RowBox[{
           RowBox[{"AbsoluteTime", "@*", "First"}], "/@", 
           RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"absPrices", "=", 
          RowBox[{"QuantityMagnitude", "/@", 
           RowBox[{"data", "[", "\"\<Values\>\"", "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"points", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"predictor", "=", 
            RowBox[{"Predict", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Method", "\[Rule]", "method"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Information", "[", "predictor", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Show", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"predictor", "[", "t", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"predictor", "[", "t", "]"}], "+", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"predictor", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"predictor", "[", "t", "]"}], "-", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"predictor", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "\[IndentingNewLine]", 
                   RowBox[{"AbsoluteTime", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}], "]"}], 
                    "]"}], "]"}], ",", "\[IndentingNewLine]", "absEnd"}], 
                  "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Filling", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"2", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Exclusions", "\[Rule]", "False"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Prediction\>\"", ",", "\"\<Confidence Interval\>\""}],
                    "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ListPlot", "[", 
                RowBox[{"points", ",", "\[IndentingNewLine]", 
                 RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", "\"\<Data\>\"", "}"}]}]}], "]"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"predictor", "[", 
              RowBox[{"absEnd", ",", "\"\<Distribution\>\""}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Information", "[", "predictor", "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<AMZN\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", "\"\<NeuralNetwork\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.767909090521641*^9, 3.7679092814366503`*^9}, {
   3.7679093755686827`*^9, 3.767909524861071*^9}, {3.767909561200883*^9, 
   3.767909707138989*^9}, {3.767909741424943*^9, 3.767909898663289*^9}, {
   3.767909935571477*^9, 3.7679101288875847`*^9}, {3.767910172374905*^9, 
   3.7679101783813953`*^9}, {3.767910256837027*^9, 3.7679102579692163`*^9}, 
   3.767910576569868*^9, {3.7679107225807056`*^9, 3.767910760431864*^9}, {
   3.7679111886666822`*^9, 3.767911263271343*^9}, {3.767911330644758*^9, 
   3.767911349394684*^9}, {3.767911392293357*^9, 3.7679113966514893`*^9}, {
   3.7679114294743757`*^9, 3.767911453463373*^9}, {3.767911542981186*^9, 
   3.76791156252633*^9}, {3.767911687762051*^9, 3.767911693593628*^9}, {
   3.767911878536607*^9, 3.7679118811587257`*^9}, {3.767912084101158*^9, 
   3.767912110407009*^9}, {3.767912748808548*^9, 3.767912771801449*^9}, {
   3.767912830935419*^9, 3.7679128327852173`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"3024edc8-7629-4974-b948-0d5d6146b4a1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1: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
65jIvycNmg5mrmUi/6Y2Xo6Y+In9+5d8+dTFmIn82zm7uvLSNPZvXflIVBb8
/cb2r3ZrUtIGkQzkX+UnqmPO7hnIv4oSl/U2F2H/fjgx6yvwAfu3dFvKjeRo
7N9zVc6vrQwp5N+/P0d9nOE+YfvXw5wzcB08b7Z/jY7n7XVbQSH/xreQ7cLy
FPIvj8OB2ctqFPJvg4BG0BDc/2z/Rh/v3soFnzds/x72Svaec6SQf/2sKMVr
cN7Z/i1qTRQXgPPB9u9+HoElf8wp5N/v24uf505j/9qa1IXK6TGRfz817Iqq
msP+FWv0lL4owkT+baqafcB6iP27JF0X+MRj/3LzNronXMf+faF4zKHPLgP5
NzVomtaUyED+XcL5wk1tMwv5l0wxeOVciv1bqCidcOYghfxbLh3KUaxCIf/G
v8sfWwP3Pdu/P779eKEBz5/tX/Nh9cxbShTy7x7H21fatSjkX4e6x0Zr4P5i
+zeqKtwiAu5rtn/36LvOD8DzZfv3wG6ePZ3w/Nn+VW+z+RNuTSH/Do67NvgT
FPLv7tX0AbIO+zcpjH/NhDYT+dfyjpv+u0VM5F+PGLWbnzmZyL/e0keeKHgw
kX/v7ZfnVYOfz/Yvd15vX/2WDOTfIrszVgN7M5B/w2ZrjsufZCH/FngOuWfD
fcr2r3QHz5GF5RTy78rERxun4b5m+zcpZ8a3Bz5f2f4V1an5QOlSyL96hn22
jywo5F+bRreyp04U8u+4+I4nZ+Brtn9/i816qMN9wvbvmJlql4YwE/n3lsCT
YX9NJvLvl0yb/D/fsH+F3/9uWQr3Bdu/4dcz9M18SeTfV6Ve5q1uGci/92ya
ogWFWci/Rj6b40uhv9j+VbRtTxmB88L2b9iuOwqD8DXbv3KNOWl68D6x/Ws9
9TBpKdx/bP/u3vbkyiK4/9j+vRL4MJN3L4X8axzVRfTB+WL7N39a297oMO6/
x+K4pG8p4/7bl9shbLcJ99/TevZ8lxZj/z5way1jELj/fghrvSn4iIn8y9J/
XbKKC/u3Id40ZGQR9q/sMdvSlQG4//Key3Cff04h/8qb/xl8w4/9WzlnWXIN
/n5n+1fez6uQ1xH332rZs5u81XD/Fc3bqi4pi/uvdFJK9lZ53H/Lqj6a6mrh
/ps6a/OIQx/335Nn6bBRI9x/l0lF7nS1w/2XWGJSd/Aw7r+pQYd+Jvvh/lvj
6KO1xxv338CBEN/bzrj/jkuzQkJ24P5bEFtRfeN9OvJvyDjXvZ8muP/q8w5y
F/Jj/66t3PBdWRz33zil3awf6QzkX6mdPPL2p3H/DTtuusoE7ke2fyO9ifhB
R9x/dfr3+04Y4/6rcaiLt9ID999nydec5Z+QyL/vRY48dgvC/XdlYnsV0wD3
X9eLLbLZ8rj/1m/OdCyQwf03njTL9lbB/ZesXT44r4v7rzFpORUGcP+dNzU4
p2qG+++ql8m8tCvuv53aXeor/HD/lU8b+Obii/uvzd/4M+nuuP8yHwj9U2qD
++9uUjwsoDAd+ffd+U9dWfq4/+bEB4l6yuL+m9AQyakkjP0rK+WpGOaK++87
wwc3uZRx/x2V2PRLxRz33/gttP1zXdx/v69sjlzuj/vvsi2z+wcyKORfD0lH
z8APJPJvjXyxhfdFEvnXxU3Vw3sX7r837zr0TCri/hsgMyCWLYP771PX8Joh
Rdx/tbb5WqttxP031qCl3HU77r8KO33HLU1w/z07OvmgxAn3344xH9U8X9x/
q6O1HzUfwf23OHWZz6gn7r/CfOrKIQ64/644ZCJZLoL7r1qnAWPEGPdfd2eX
1t882L8XNDOXOCnh/tv1U8F9y1rcf6MXjaf41pHIv/MV+fNpTRTyr8K/5TPX
j+L+a1dvodkvjP274ZXXbaCN++9J81u7r5STyL/f4zh1Hb1x/43O2libq4P7
b8X1O7Nicrj/hvFbXJKWxf1X0XH0S9pm3H8LNm2KtjbE/TdSSndFsgXuv+m8
D1LlPHH/XW0T7FHuh/uv++iaHo/DuP+K8KjsinbF/Td5X3aRowXuv4nrQ/il
49ORf9+2DY3u2oj772DjPi8zddx/fxgoxiYLYP+6SR0f4rHF/VcjoKRO7y8T
+VdG59TFHetx/00zkU99thb33ySLpgnuU7j/xjMVtr++TyH/WszEnSibJ5F/
VzSsv617lUT+fas3Mzlvhfuv25nA49wquP+2P75+pksG99+8z/r2Agq4/04b
a/VUauP+6/N8dn7TNtx/5RJazkYY4/47+dnNsNAB99+uCXn/TB/cf5/2aqlt
88P9V9RUTrrMC/ffhpjMZTf34/67v9FodPffdOTf6laryMemuP/aGLyOO7gY
+/e0wS8FLWncfxU3XXxk0stA/j0h3mW6lEki/x6OtfX9J49C/t2Wx30w1BP3
3x9z0bPPlXH/PRHl7zOwA/ffBbGBt9wPSeRfkbzyK/LHcP8VzxJZbL8F99/p
w9snW+Vw/3U+nTw2JIP7b7FTy02LTbj/lr4wSD9O4P5bp+9q3mqO+++E3nK7
9e64/5bWfVs464f7b1MX0+aUD+6/Kabvuda74f67xf17y0or3H/vMiI9jbrS
kX+//M6QTzbE/bdc7Yfh5aW4/7bzNBemi+H+25nJMdB9CvffVcPVQgOWuP8e
Xu/9wtMc91/RQVGHswdx/x07tTeoMxL33yUTfr47TXD/jd5Jnshbh/tvqJDL
1jQZ3H+/yMWdCDLA/TegwuKLsSnuv2STt9OxA7j/Vhn8qA4+gvuvKWOkX/4I
7r+uV+OODHrg/mvc/rBvaA3uvwIJ7uMrAe6/djLvi2/yYP+e9EnprPkH99/x
VRuNPoXg/muo/dvy6Encf1f174u/twb337z3Ty47auH+G9/vwoiRxf13rNNQ
NVwW999Yg02sUS/cfyuP7Eut8cP99269e3qBN+6/377Z3yo+gPtvPqfbjlD4
fPwfKjbAqQ==
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt1He4D1QYwPGfvUOUZJdCKhShkEhWmSmUQlQqsyRbVEbKSFFkz6xslYad
raGy9yh77/F5H/3xud9znnP93HvO+9x8TVvXaZU0kUgkobEvTVjMYE7Qic18
Q1Lf2FSX8Bkn6cwWppLM+Su6lCGcogtbmUZy5810GZ9zmq5sYzopnDfX5XzB
GbqxnRmkdP6qrmAoZ+nODmbyGisZRg928i2v8ytfco732cUsUvnMFrqKrzhP
T3YzmzdYzXAu0Is9zCG1f/umrmEEH7CXubzFWr7mQ/Yxj5asYyQX+Yj9zCeN
z2ul6xnFJXpzgAWkdd5aNzCay/ThIAtJ57yNbmQMfWnLb4ylH4f4jnb8zjiu
8DH/8j1v8wfjuUp//uMH3uFPJnCNTzjMItL7/9vrJiZynU85wo9kcP6u/sUk
EvYD9Cg/cYt9B/2bySSxH6jH+JmM9u/pP0xhEMf5hUzOOsY7/j/HmXg83tH+
IgVjBvTl+BzKxQzY14531QIxO/pS/ByUjfmxrxUzoffqCm0Uvwdl2GFfM2ZK
79Hl+mLcA4+x3b6GntX8ukzT6aNss35Gz+jdulTTamm2Wj+tp/UuXaJptBRb
rE+Rz3qxbuYkeeMe9AVNTcm4J/vqekLzxB1qQ03FI3HP9tXiDjV3vIE20JSU
iHeyrxr3r7niDTWFFo83tj5Kznh7Ta4Px2xYHyFHzIvW12Q8FDNlXyXmRe+M
WYsR0GIxi9aVY840e8yoPh8zQNGYYfunYkb1Dl2YuPlHqwgbLQ+RzXqBXudB
6w1aSQ/q7Tpfn4u51Qd0vT6pB/Q2naf1Yub1fl2nFXW/ZtW5+qxe0cK6Vivo
Ps2ic7SuXtb7dI0+oXv1Vp2tdfSSFtLVWl73aGadpTcAMcrF6Q==
                 
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 97, 50, 144, 26, 121, 74, 162, 2, 98, 51, 145, 27, 
                122, 75, 163, 3, 99, 52, 146, 28, 123, 76, 164, 4, 100, 53, 
                147, 29, 124, 77, 165, 5, 101, 54, 148, 30, 125, 78, 166, 6, 
                102, 55, 149, 31, 126, 79, 7, 103, 56, 32, 127, 80, 8, 104, 
                57, 150, 33, 128, 81, 167, 9, 105, 58, 151, 34, 129, 82, 10, 
                106, 59, 152, 35, 130, 83, 168, 11, 107, 60, 36, 131, 84, 12, 
                108, 61, 37, 132, 85, 13, 109, 62, 153, 38, 133, 86, 169, 14, 
                110, 63, 154, 39, 134, 87, 170, 15, 111, 64, 155, 40, 135, 88,
                 171, 16, 112, 65, 41, 17, 113, 66, 42, 136, 89, 18, 114, 67, 
                156, 43, 137, 90, 19, 115, 68, 157, 44, 138, 91, 20, 116, 69, 
                158, 45, 139, 92, 172, 21, 117, 70, 159, 46, 140, 93, 173, 22,
                 118, 71, 160, 47, 141, 94, 174, 23, 119, 72, 161, 48, 142, 
                95, 175, 24, 120, 73, 49, 143, 96, 176, 25}]}, 
              Annotation[#, "Charting`Private`Tag$4991044#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwVz2dbDgAYhuE3GVGRrBYa9opStJQoUURG2Y5+AH8NLStkl61SKVEZESVE
qDh9uI7zuT8+CZVnyk4HBQKBszqn2UYv89jElfzNMp5nJPu4lfe5in+4n1Wc
wzfM5wOu5hgPsJpz+Zbb+JBrOM6DrOE8vuN2PuJaTvAQazmf71nAx1zHv6zT
Anc/nyj5/1O6gCh+YCGfcj2DVK6LdjQ/cgefcQMn6ZI7hgMsYjNTGKwKXbZj
+YktSnVP1hV3HD+zVRvdU1TvXshB7uRzpnGqDuuqvYhD3MU2pnOajuiavZhf
WMx2bmKIjuq6Hc9hdqhBCfZXvtBm93TdcCfyG0vYyQzO0E13Er9zN7uYyVDd
ci/hCPfwJbMYpmO6bS/lD5aym9kM13HdsZfxJ/fyFXM4Uyd0117OUe7ja27h
LJ3UPXsFf7FHue4InVKj/Q+gnled
                "]]}, 
              Annotation[#, "Charting`Private`Tag$4991044#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwV0Wc7V3EAx+Hzl4gib8Fb6h1EOyGltPdAJKWd9pARWlQkDbNoS2lHqbSU
Uej24L4+53d9r/M7D058Qsq05FAQBOVM93CDfL6znGecJSwsCBK0np38YAWd
FDPBnqg32cVPVvKcEsLtM/QWBfxiFS8oZaJ9pt5mN/2sposyIuyz9A57+M0a
XnKO2TSwl7W8opw5NLKPP6zjNRVEunOuNrGfAdbzhkrm0cwBBtnAW84zybvz
tYWDbOQdF0iilUNs4j0XWcBdChliMx+4RJT7xn/EPQ4zzBa6uUy0PUXbOMJf
ttJDFZPtqdrOUTJZyH2OkcVHqknjAcf5RzafuMIiHnKCEbbRy1UW84iTjJLD
Z64xxffT9TGnGCOXL9QQY1+iTzhN4Lxdv1JLrPNSfcoZQs552sd1pjpnaAdF
7OAbdcTZlul/Q2Vw/Q==
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$4991044#3"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJw10mtIU2EYB/Cjzm1uczszu1nZEf1SQSySLpB1DGNdiGYSjW6MIrtoOiX6
MDAOlPgpmhje0jqKEAXpIMRZFMe+SWILA6GyjlIYzGBQZGVm2/95jiDjx/Oe
9/2/z/MWnK09ej5dEIRzyf/Ub/Iv8vpPvDT5KzU62uXkr/6brOXXtaUsFi3A
gdvdqKu9ZNl2rSPl2BhZL5+BhXmy1P8N9hT8pfXTOhw4RFZKeuHEKFmYLIOl
H0Z9Y2fKvvxFznMEVvYv8n5X4Ug918cUOLjmH5+vYD91H1nJVSlvLTkQfU95
O8mqNw/fh1ct8X3bUNf2LnF/ZnH/RDXXo6uxXmojK/F3lHfE8EV8r+8R5ug+
jbB42XAclu+QZVsPHHxB1kM7Kf9Xrk/HcL7nQhosCB/gQHMaf9+O9eFnRp3u
q30hqx0nqN+u9Dnq13o4EiXr5TWUd4YcqPRT3uwMyvvyMOXdzi65Tv0czODz
blI/9Qw+r5nmbzPB0qk+mn+xic+7T3nPkJV4PvVzitf30zx9lkzKE62j+W/J
5PzLaP4nyfLWCuqfycz9o3mqm818nyI45jdz/ipYuGHm/vphz2OyGhyBtU0W
vs+Ou+jfMQvv1wRLClnJXd6FvI8sPI8rsPLWqLdgvVhh5fowLDcY/gQHH1j5
fq2w+sbK/RiEYwtW7vcEHAhl8Xz8OC/cx44fh7XxLN6vHk78yuL7VcFSoY3q
+YNwpMfG9VlYf2Xj+Q3A4k8bz28KliU7rffG4OBBO/d3DBZG7TyPCdjznSxs
WNuN/Osc/H0hHPY6+D4rYF+CXdIAK3nZ3E/XPeQty+Z+DKGu1xgehsUOstQY
wnp1pZPf0wE4Vurk/fJgodrwR3zvaXVyvieUVyMLkw+xPrHbxe+P9pcuufh8
E+xrcfF+85T/uYv7MQBHZrkeb4LlSpHzhaifYZHXa7D6VOT3uAvrY5/Z3nFY
cLn5/GLq5y03v287rA25OY8ZTky7+TwnLDlyOM9pes/bcvh9NHTJ/wEWaMjN

              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 1562.0657585104145`}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 1562.0657585104145`}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {1562.0657585104145`, 
           1945.1080732186522`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{"\"Prediction\"", "\"Confidence Interval\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1776.1615841742423`", ",", "30.042956192034957`"}], "]"}]},
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], "\<\"Numerical\"\>"},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"44.0139003342077828052`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "6.9054739813080141531`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "30.2029523715917562754`3.", "\", \"", 
                    "57.8248482968238093349`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    30.2029523715917562754`3., ", ", 
                    57.8248482968238093349`3., "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"NeuralNetwork\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 2, "Length" -> 2, "InitialType" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[2003285955], "Type" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[2003285955]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkDepth", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "MaxTrainingRounds", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1000"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 261177578][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    261177578]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    261177578][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87072042356682]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "3.15`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "16.5`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"5.1803852418939166924`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1435803811436896782`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "4.8932244796065376136`3.", "\", \"", 
                    "5.4675460041812957712`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    4.8932244796065376136`3., ", ", 5.4675460041812957712`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"294.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{"99","\"examples\"","examples","\"Examples\""},
                   
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"28.8`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7845055007136326`}, {
                    4.3694478524670215`, 3.8846521586714493`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.7845055007136326`}}, {{4.3694478524670215`, 
                    3.8846521586714493`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.613844069239405}, {
                    2.70805020110221, 3.9302434860158297`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.3191217720880295`}, {
                    4.3694478524670215`, 4.243683181612171}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.778941797493754}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.778941797493754, 3.8846521586714493`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.078674921479966}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.180385241893917}}, {{4.3694478524670215`, 
                    5.078674921479966}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 5.036804860750227}, {
                    2.70805020110221, 5.323965623037607}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 4.688276695176493}, {
                    4.3694478524670215`, 5.469073147783438}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 5.073024348123636}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {5.073024348123636, 5.180385241893917}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.4180171185681765`}, {
                    4.3694478524670215`, 5.610099374420031}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.004314161613271}, {
                    4.3694478524670215`, 5.004314161613271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.175295127528558}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.752722720484859}, {
                    2.70805020110221, 5.752722720484859}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.714574608749021}, {
                    4.3694478524670215`, 5.202346819380324}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.2769973075008405`}, {
                    4.3694478524670215`, 5.078674921479966}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.19172202534841}, {
                    4.3694478524670215`, 5.19172202534841}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.810560621488098}, {
                    2.70805020110221, 5.810560621488098}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.411454943964182}, {
                    4.3694478524670215`, 5.411454943964182}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.48503549439977}, {
                    4.3694478524670215`, 5.602015867661219}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.4180171185681765`}}, {{
                    4.3694478524670215`, 5.610099374420031}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.004314161613271}}, {{
                    4.3694478524670215`, 5.004314161613271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.180385241893917}}, {{
                    4.3694478524670215`, 5.175295127528558}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.752722720484859}}, {{2.70805020110221,
                     5.752722720484859}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.714574608749021}}, {{
                    4.3694478524670215`, 5.202346819380324}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["NetworkDepth" -> 4, MaxTrainingRounds -> 
                    300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.2769973075008405`}}, {{
                    4.3694478524670215`, 5.078674921479966}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.19172202534841}}, {{
                    4.3694478524670215`, 5.19172202534841}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.810560621488098}}, {{2.70805020110221,
                     5.810560621488098}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.411454943964182}}, {{
                    4.3694478524670215`, 5.411454943964182}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.48503549439977}}, {{
                    4.3694478524670215`, 5.602015867661219}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.959522691620226}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.959522691620226, 5.810560621488098}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7845055007136326`}, {
                    4.3694478524670215`, 3.8846521586714493`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.7845055007136326`}}, {{4.3694478524670215`, 
                    3.8846521586714493`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.613844069239405}, {
                    2.70805020110221, 3.9302434860158297`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.3191217720880295`}, {
                    4.3694478524670215`, 4.243683181612171}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.778941797493754}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.778941797493754, 3.8846521586714493`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.078674921479966}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.180385241893917}}, {{4.3694478524670215`, 
                    5.078674921479966}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 5.036804860750227}, {
                    2.70805020110221, 5.323965623037607}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 4.688276695176493}, {
                    4.3694478524670215`, 5.469073147783438}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 5.073024348123636}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {5.073024348123636, 5.180385241893917}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.4180171185681765`}, {
                    4.3694478524670215`, 5.610099374420031}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.004314161613271}, {
                    4.3694478524670215`, 5.004314161613271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.175295127528558}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.752722720484859}, {
                    2.70805020110221, 5.752722720484859}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.714574608749021}, {
                    4.3694478524670215`, 5.202346819380324}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.2769973075008405`}, {
                    4.3694478524670215`, 5.078674921479966}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.19172202534841}, {
                    4.3694478524670215`, 5.19172202534841}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Line[{{2.70805020110221, 5.810560621488098}, {
                    2.70805020110221, 5.810560621488098}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.411454943964182}, {
                    4.3694478524670215`, 5.411454943964182}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.48503549439977}, {
                    4.3694478524670215`, 5.602015867661219}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.4180171185681765`}}, {{
                    4.3694478524670215`, 5.610099374420031}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.004314161613271}}, {{
                    4.3694478524670215`, 5.004314161613271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.180385241893917}}, {{
                    4.3694478524670215`, 5.175295127528558}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.752722720484859}}, {{2.70805020110221,
                     5.752722720484859}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.714574608749021}}, {{
                    4.3694478524670215`, 5.202346819380324}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.2769973075008405`}}, {{
                    4.3694478524670215`, 5.078674921479966}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.19172202534841}}, {{
                    4.3694478524670215`, 5.19172202534841}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.810560621488098}}, {{2.70805020110221,
                     5.810560621488098}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.411454943964182}}, {{
                    4.3694478524670215`, 5.411454943964182}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.48503549439977}}, {{
                    4.3694478524670215`, 5.602015867661219}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87076337323978]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87080632291274]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87084927258570]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87089222225866]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87093517193162]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87097812160458]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87102107127754]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87106402095050]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87110697062346]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 87114992029642]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.959522691620226}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.959522691620226, 5.810560621488098}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{363., {137., 143.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              "DejaVu Sans", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.7679114386773643`*^9, 3.767911463317325*^9}, 
   3.767911573401659*^9, 3.7679117039102697`*^9, 3.767911902621284*^9, 
   3.767912148261228*^9, 3.76791281591383*^9, 3.767912870752748*^9, 
   3.7679132747389174`*^9},
 CellLabel->
  "Out[378]=",ExpressionUUID->"1d19459a-4306-45d8-bdcc-152695e67284"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "predictPrices", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"predictPrices", "[", 
    RowBox[{
    "instrumentSymbol_String", ",", "\[IndentingNewLine]", 
     "closingPriceDateStart_", ",", "\[IndentingNewLine]", 
     "closingPriceDateEnd_", ",", "\[IndentingNewLine]", "predictionEnd_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"FinancialData", "[", 
         RowBox[{"instrumentSymbol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"closingPriceDateStart", ",", "closingPriceDateEnd"}], 
           "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"absEnd", "=", 
        RowBox[{"AbsoluteTime", "@", "predictionEnd"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"absTimes", "=", 
          RowBox[{
           RowBox[{"AbsoluteTime", "@*", "First"}], "/@", 
           RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"absPrices", "=", 
          RowBox[{"QuantityMagnitude", "/@", 
           RowBox[{"data", "[", "\"\<Values\>\"", "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"points", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"rules", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"{", 
               RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"nnp", "=", 
              RowBox[{"Predict", "[", 
               RowBox[{"rules", ",", 
                RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"gpp", "=", 
              RowBox[{"Predict", "[", 
               RowBox[{"rules", ",", 
                RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}], ",", 
                RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
               "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "   ", 
             RowBox[{
              RowBox[{"Show", "[", "   ", 
               RowBox[{
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"nnp", "[", "t", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"nnp", "[", "t", "]"}], "+", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"nnp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"nnp", "[", "t", "]"}], "-", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"nnp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"gpp", "[", "t", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"gpp", "[", "t", "]"}], "+", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"gpp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"gpp", "[", "t", "]"}], "-", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"gpp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"AbsoluteTime", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}], "]"}], 
                    "]"}], "]"}], ",", "absEnd"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "Blue", ",", "Gray", ",", "Gray", ",", "Green", ",", 
                    "Pink", ",", "Pink"}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Filling", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}], ",", 
                    RowBox[{"5", "\[Rule]", 
                    RowBox[{"{", "6", "}"}]}]}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Exclusions", "\[Rule]", "False"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], 
                  ",", 
                  RowBox[{"PlotLegends", "\[Rule]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<Neural Network\>\"", ",", 
                    "\"\<NN Confidence Interval\>\"", ",", " ", "\"\<\>\"", 
                    ",", " ", "\[IndentingNewLine]", 
                    "\"\<Gaussian Process\>\"", ",", " ", 
                    "\"\<GP Confidence Interval\>\"", ",", "\"\<\>\""}], 
                    "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ListPlot", "[", 
                 RowBox[{"points", ",", 
                  RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
                  RowBox[{"PlotLegends", "\[Rule]", 
                   RowBox[{"{", "\"\<Data\>\"", "}"}]}]}], "]"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Information", "[", "nnp", "]"}], ",", 
              RowBox[{"Information", "[", "gpp", "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<AMZN\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.767909090521641*^9, 3.7679092814366503`*^9}, {
   3.7679093755686827`*^9, 3.767909524861071*^9}, {3.767909561200883*^9, 
   3.767909707138989*^9}, {3.767909741424943*^9, 3.767909898663289*^9}, {
   3.767909935571477*^9, 3.7679101288875847`*^9}, {3.767910172374905*^9, 
   3.7679101783813953`*^9}, {3.767910256837027*^9, 3.7679102579692163`*^9}, 
   3.767910576569868*^9, {3.7679107225807056`*^9, 3.767910760431864*^9}, {
   3.7679111886666822`*^9, 3.767911263271343*^9}, {3.767911330644758*^9, 
   3.767911349394684*^9}, {3.767911392293357*^9, 3.7679113966514893`*^9}, {
   3.7679114294743757`*^9, 3.767911453463373*^9}, {3.767911542981186*^9, 
   3.76791156252633*^9}, {3.767911687762051*^9, 3.767911693593628*^9}, {
   3.767911878536607*^9, 3.7679118811587257`*^9}, {3.767912084101158*^9, 
   3.767912110407009*^9}, {3.767912748808548*^9, 3.767912771801449*^9}, {
   3.767912830935419*^9, 3.7679128327852173`*^9}, {3.767913314822633*^9, 
   3.767913388295273*^9}, {3.7679134370020733`*^9, 3.76791354877419*^9}, {
   3.767913601392254*^9, 3.767913732309525*^9}, {3.767913775633802*^9, 
   3.767913818465026*^9}, {3.7679139638310337`*^9, 3.767914015296036*^9}, {
   3.7679140457787952`*^9, 3.767914060838937*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"2161f685-ad96-4a3d-a672-3af5a1c1a71f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1: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
2E/3MoM0nephPy28aiwxCvUT6bNigXkRZm2wr17W05I8Vw/SZ3m+r77NnUmf
9ZkOHGEFg8+uHBoN6FwM+2SJ1IJHJongM8Nk64yVgeCzwY3yDb7q4DOGzW0L
tm7w2StBF9PgfPCZn1BtklIP+KyPk/GutxJ8plpX5vDrM/hM5S5v8FQv+Ezx
aspZoRbI37y2Dt1vrID98wmabsv297B/FmN7HN2A/n3SZ2OFA6566POTPuPY
5qQ4Vw/SZ9OTp4bmzqTP9vIJM8XWgs+OhtytSXgBPhNpuF7LGQY+C9zgUV+R
AT6z/swuN20BPmONsAftW5ZI+Uy8KGdbpA7ka3n1SOcfCEwOoy3pQv2RaPzl
ZQJ6HpJ+e2lOK+d4CflbVpyChONL2D+v3LLeu6ER9s+eXedDJlF/kH7zu58e
cXDuefWf33YSxnX/7st/fkufufJvvpB+M1DhfnpnE/jNiOdLmekP2C8HDvvV
XAoEvz2aErqaYgh+qxCUazWKAL8ZFJcMvJQAv80InsjkVQW/Oa5JXlu9Dfy2
88+R4NQ6yNfqpV+vyRyF/XJl+LRNkDD4LVE+2P3AEwbltxs7MnjpH+iU304I
H/9Y+ohO+e1sbFqh8RM65bdIn1AFehmd8tvJBTGlnehM+m1WwdCnB51Jv5nH
yEfMnUm/Lf1r9u9M+q3d0PzfmfQb/97/nUm/kWfSb+SZ9Bt5Jv3Ww3J2FgoH
v+FuLLpwNfhNarL6Yu5h8Ft9WcfxHkPw28PuzLWXt4Lf8hMMZelvIF9zcHXQ
NGaC3/JHXHZyVoLfQmkax5xPgN+idh2yC4wCv3XsmbxrfRr2yy4J5knz5BiU
38bZVkSMZtMpvwXWyrnfz6dTfnNXkHn6rJRO+U2KsbD+A/r8pN/ur8pfNFcP
0m/ECrewuTPpN92Dxv/qRfrtrf7/6kf6jfe/epJ+I+tL+o08k357sfRm36IZ
2CdntW/UkxyEffLU+puXw06A3879XPFZXx/8li8r4jTZAPkaz9fZNcoB4Ldf
ySrjEo7gN77aHpWWUPBb0myqXmI6+K3VZlFX8xPwG6/6+dH417BPvvRc26zW
lUH5TfVZwnf9EjrltxyZ7AL8MZ3ym3jT0Hgdep3022DodHU5+vyk34Q+/rHp
RmfSb7HfzEPm6kP6zWhI71+9SL9ZRwRfWdoO+dq3wNv5ErfAb2rVeqaS5uC3
ldEJj5WOgN946up1CzPAb/kpm2VzFoDfZFQGvsj2wf734Z+kuNYOyNe+/gkd
c1MAv0k/lEt4bwl+y8DnW3oKQ75mlr2312qSTvktY1lysF4WnfKbba3K0n3o
9ynpt69Cq2T2os9L+u2w2OZn7ehM+u3akRPWc/Ug/ZY2WB4+dyb95qT4v/lA
+i2nKYs/JRH8ljx6V7h3Ava32GhZc+xZ8Nt+l43GBbvBb3cvSzaHPAC/sZRt
lAVMwG9LTofyshuC30T2VyqU2YPf5is+ZUg/Bb/dT3qQUd4A+Zpc7Q03lXHY
36ZdX1WBX2NQfmsKNvfIqKJTfjOwyfIRyaFTfmNzu5sqi/qL9BtLsrAkC31+
0m9BwVoFXehM+i3Bsytgrj6k35gWUxt+F4Hf1uqLJBE54DetLXF7ZA6C35ab
jMqkmoHfjtvR9vKcAr85hilkvmbBfrXj1sLUhnLwGzNtVjq1EfK1WWbS8k+G
4Df6PvHca17gtx13U8fkdWC/ut8x73UiP4Pym/DVh4u/oH4i/eb1VrJKsJBO
+W3+1uZTi9HnJf22anfM2hZ0Jv1mPmG2a64epN/kw3T+9RP19wFvBNQ/NQC/
lfbyOf1qgXxtWvbceX5n8NslOe+MhbvBbyInBR3/coDffN9mx529B34rsN7X
33MR/FZv6Nf49R74zeSqSWdwJPjt9PoLVXmp4DWe0Aa2c3oMymv8Tcvye/Po
lNfOLDrxRB6dSa/1xUwutULzn/Ra6WT9ghr0eUmv3T7Y/WpuHpFeOzl/+Mpc
PUivHRbau5sxDPvPmcVXx/Gr4LXyh6nu143AaxwRXiLqp8FrndZfjCwlwGv7
4jomj3yEPO2tx4iBnQB4bTI1d2f8NvCZ7uE/hcI9dMpnKsOe5g/R90/6TGtT
TbBjMZ3yWaEvruiD/vykz6Kq18p9mnse/eezJRlvTvy7D//5TJxv/r/58X/r
xfKV
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt1He4D1QYwPGfvUOUZJdCKhShkEhWmSmUQlQqsyRbVEbKSFFkz6xslYad
raGy9yh77/F5H/3xud9znnP93HvO+9x8TVvXaZU0kUgkobEvTVjMYE7Qic18
Q1Lf2FSX8Bkn6cwWppLM+Su6lCGcogtbmUZy5810GZ9zmq5sYzopnDfX5XzB
GbqxnRmkdP6qrmAoZ+nODmbyGisZRg928i2v8ytfco732cUsUvnMFrqKrzhP
T3YzmzdYzXAu0Is9zCG1f/umrmEEH7CXubzFWr7mQ/Yxj5asYyQX+Yj9zCeN
z2ul6xnFJXpzgAWkdd5aNzCay/ThIAtJ57yNbmQMfWnLb4ylH4f4jnb8zjiu
8DH/8j1v8wfjuUp//uMH3uFPJnCNTzjMItL7/9vrJiZynU85wo9kcP6u/sUk
EvYD9Cg/cYt9B/2bySSxH6jH+JmM9u/pP0xhEMf5hUzOOsY7/j/HmXg83tH+
IgVjBvTl+BzKxQzY14531QIxO/pS/ByUjfmxrxUzoffqCm0Uvwdl2GFfM2ZK
79Hl+mLcA4+x3b6GntX8ukzT6aNss35Gz+jdulTTamm2Wj+tp/UuXaJptBRb
rE+Rz3qxbuYkeeMe9AVNTcm4J/vqekLzxB1qQ03FI3HP9tXiDjV3vIE20JSU
iHeyrxr3r7niDTWFFo83tj5Kznh7Ta4Px2xYHyFHzIvW12Q8FDNlXyXmRe+M
WYsR0GIxi9aVY840e8yoPh8zQNGYYfunYkb1Dl2YuPlHqwgbLQ+RzXqBXudB
6w1aSQ/q7Tpfn4u51Qd0vT6pB/Q2naf1Yub1fl2nFXW/ZtW5+qxe0cK6Vivo
Ps2ic7SuXtb7dI0+oXv1Vp2tdfSSFtLVWl73aGadpTcAMcrF6Q==
                 
                 "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0.5, 0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwV02egT2UAx/H/NcqsZI+Slb1LQkVF9srerp3QkEIhNMjK3nu0cCeKe13r
2nvPBi1llJEifJ4Xn/M95+3z/E6h6AHN+6eJRCJRVPF4JW0kMo932UQXVjOW
Q9RlPu+xma7E8BmHqccCBrOFaGIZxxHqs5AhbKUbcYznKA1YxFC20Z14JtCQ
xbxPKj1IYCLHaMQSPmA7PUlkEo1ZyjB20Is1fM5xmrCM4eykN2uZzAmaspwR
7KIP65jCSZqxgg95jW+ZSnO+YCS76ct3TOMUr/Ilo9jD66xnOqdpwVeMZi/9
2MAMztCSr/mIffQniZmcpRXf8DH7GUAyszhHa1byCQd4g43M5nvasIpPOcib
pDCHH2jLGN5iLu14m/YMpAPv0JFODKIzW4zuFJvZxElSOMFGjpMchhnuVi+R
RB3f97Ro2ItW0T/10XAuWlvvahE9ok/rH5otnKu+rP9rYT2sT+lFfSTci76k
d7SQHtLK+rs+HO5UX9Tb+kQ4D62kv+lDYQ9aS//TguE8taL+qlnDnrSm/quP
h/vQCvqLZgl71Bf0lj4W7lPL68+aWRP1ef1HC4Q9aDm9oJk0QZ/Tm5o/7EnL
6nnNqPFaQ29ovrBHLaM/aQaN0+vkDRvX0vqjPqixWl2vaR7dqaXCBvQBjdG/
ye19h5YM+9H0ulqr6V+aS7dribA/TRf2pc/qVc2pqVo87FfThn1qVb2iOXSb
Phn2r2nCvvUZvazZdasWC/+PRoX/Q+8DCtmuYw==
                 
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 97, 50, 144, 26, 121, 74, 162, 2, 98, 51, 145, 27, 
                122, 75, 163, 3, 99, 52, 146, 28, 123, 76, 164, 4, 100, 53, 
                147, 29, 124, 77, 165, 5, 101, 54, 148, 30, 125, 78, 166, 6, 
                102, 55, 149, 31, 126, 79, 7, 103, 56, 32, 127, 80, 8, 104, 
                57, 150, 33, 128, 81, 167, 9, 105, 58, 151, 34, 129, 82, 10, 
                106, 59, 152, 35, 130, 83, 168, 11, 107, 60, 36, 131, 84, 12, 
                108, 61, 37, 132, 85, 13, 109, 62, 153, 38, 133, 86, 169, 14, 
                110, 63, 154, 39, 134, 87, 170, 15, 111, 64, 155, 40, 135, 88,
                 171, 16, 112, 65, 41, 17, 113, 66, 42, 136, 89, 18, 114, 67, 
                156, 43, 137, 90, 19, 115, 68, 157, 44, 138, 91, 20, 116, 69, 
                158, 45, 139, 92, 172, 21, 117, 70, 159, 46, 140, 93, 173, 22,
                 118, 71, 160, 47, 141, 94, 174, 23, 119, 72, 161, 48, 142, 
                95, 175, 24, 120, 73, 49, 143, 96, 176, 25}]}, 
              Annotation[#, "Charting`Private`Tag$5283977#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwVz2dbDgAYhuE3GVGRrBYa9opStJQoUURG2Y5+AH8NLStkl61SKVEZESVE
qDh9uI7zuT8+CZVnyk4HBQKBszqn2UYv89jElfzNMp5nJPu4lfe5in+4n1Wc
wzfM5wOu5hgPsJpz+Zbb+JBrOM6DrOE8vuN2PuJaTvAQazmf71nAx1zHv6zT
Anc/nyj5/1O6gCh+YCGfcj2DVK6LdjQ/cgefcQMn6ZI7hgMsYjNTGKwKXbZj
+YktSnVP1hV3HD+zVRvdU1TvXshB7uRzpnGqDuuqvYhD3MU2pnOajuiavZhf
WMx2bmKIjuq6Hc9hdqhBCfZXvtBm93TdcCfyG0vYyQzO0E13Er9zN7uYyVDd
ci/hCPfwJbMYpmO6bS/lD5aym9kM13HdsZfxJ/fyFXM4Uyd0117OUe7ja27h
LJ3UPXsFf7FHue4InVKj/Q+gnled
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5283977#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwV0Wc7V3EAx+Hzl4gib8Fb6h1EOyGltPdAJKWd9pARWlQkDbNoS2lHqbSU
Uej24L4+53d9r/M7D058Qsq05FAQBOVM93CDfL6znGecJSwsCBK0np38YAWd
FDPBnqg32cVPVvKcEsLtM/QWBfxiFS8oZaJ9pt5mN/2sposyIuyz9A57+M0a
XnKO2TSwl7W8opw5NLKPP6zjNRVEunOuNrGfAdbzhkrm0cwBBtnAW84zybvz
tYWDbOQdF0iilUNs4j0XWcBdChliMx+4RJT7xn/EPQ4zzBa6uUy0PUXbOMJf
ttJDFZPtqdrOUTJZyH2OkcVHqknjAcf5RzafuMIiHnKCEbbRy1UW84iTjJLD
Z64xxffT9TGnGCOXL9QQY1+iTzhN4Lxdv1JLrPNSfcoZQs552sd1pjpnaAdF
7OAbdcTZlul/Q2Vw/Q==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5283977#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 1, 0]], 
               LineBox[CompressedData["
1:eJwNw4c2UAEAANBXf1BSRCKrlKhQiBAp2athhjRkZYuKIpUiDbKKFn2le8+5
MW291T37giBY9cD+IHhgvu9NcsxaNzzoQwuc97Tj1rlpiI+86gfP+Mx6f3jI
xxb60WQnvOVPQ+2yyAXPOultD/vEay6a4nPvuOURuy32k6m+8K5h9njdJc/5
0ga3DbfXG372vFM2+suj9lniFy84bZMR9nvTr6b5ymYjfWqp30z3tS3+9pgD
lrlshjO2+scoBy13xYvOes+/HnfICr97yTe2+c9oh6101UznbHfHGEescs0s
39rhricctdp1s33nff8ba42X7TTOHOPNNcErJnrSPE+5B3KeO8E=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5283977#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNx/c61gEAhuEfXyorDZmJr4RURkVpUegAHIIDyAl1BmU1ZCSFFlKpiApZ
JdJAidb9x3Pd7xuurau5FBEEwWVdiQyCiFAQvOEB9nIXl3iCVxnJt8zhfSby
C0+yniG+Yy4fcDe/sowN3MRx5vEhk/iNp9jIKE7wIB8xmd/ZpM32JPP5mClc
5mk2cwvf8xD7mMoVXtNWe4qH2c80rvIMrzOa0zzCAabzB8/yBmM4wwI+4R7+
5DneZCxnWchBZnCN5WxhHOdYxKfcy1+s4C3G8wOL+YyZXOd5tnIbP/IonzOL
G7zANiZwnsc4xDB/s5Lt3M5PPM4X3Mc/rGIHd3CBJXzJ/fzLat7mTi6ylK+Y
zX+8yE5+1rAC/w5H1KXXuqtR3VO3xtSj/7/aVD0=
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5283977#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNw4dWSAEAANDn9CW+JqVoI7RoKUWlIg2ZbUpFg9JEySijZZOs9hL6lO49
5+5Ny4/J2xMEQYehIUHQbYnvTXHMWpfc5z1L/WCqT61z2TDve96PpvnMelcM
t8cLfvKEz21w1f32WuZnT/rCRiN84EW/mO64Ta4ZaZ/lfjXDCW96wH4rnDPT
l95y3YMOWOk3s3xlsxtGOWiV82b72hY3jXbIS57yjbeNcdhqv5vjpK1uGetD
L/vDXKds849xPvKKPz3ttO1uG+9jr/rLPGe8418THPGav8131rv+85CjXnfB
M761w/8e9ok3XPSs7+x0xyPWWGCXiRZ61CKPec7jJllssruH3FzX
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$5283977#6"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJw10mtIU2EYB/Cjzm1uczszu1nZEf1SQSySLpB1DGNdiGYSjW6MIrtoOiX6
MDAOlPgpmhje0jqKEAXpIMRZFMe+SWILA6GyjlIYzGBQZGVm2/95jiDjx/Oe
9/2/z/MWnK09ej5dEIRzyf/Ub/Iv8vpPvDT5KzU62uXkr/6brOXXtaUsFi3A
gdvdqKu9ZNl2rSPl2BhZL5+BhXmy1P8N9hT8pfXTOhw4RFZKeuHEKFmYLIOl
H0Z9Y2fKvvxFznMEVvYv8n5X4Ug918cUOLjmH5+vYD91H1nJVSlvLTkQfU95
O8mqNw/fh1ct8X3bUNf2LnF/ZnH/RDXXo6uxXmojK/F3lHfE8EV8r+8R5ug+
jbB42XAclu+QZVsPHHxB1kM7Kf9Xrk/HcL7nQhosCB/gQHMaf9+O9eFnRp3u
q30hqx0nqN+u9Dnq13o4EiXr5TWUd4YcqPRT3uwMyvvyMOXdzi65Tv0czODz
blI/9Qw+r5nmbzPB0qk+mn+xic+7T3nPkJV4PvVzitf30zx9lkzKE62j+W/J
5PzLaP4nyfLWCuqfycz9o3mqm818nyI45jdz/ipYuGHm/vphz2OyGhyBtU0W
vs+Ou+jfMQvv1wRLClnJXd6FvI8sPI8rsPLWqLdgvVhh5fowLDcY/gQHH1j5
fq2w+sbK/RiEYwtW7vcEHAhl8Xz8OC/cx44fh7XxLN6vHk78yuL7VcFSoY3q
+YNwpMfG9VlYf2Xj+Q3A4k8bz28KliU7rffG4OBBO/d3DBZG7TyPCdjznSxs
WNuN/Osc/H0hHPY6+D4rYF+CXdIAK3nZ3E/XPeQty+Z+DKGu1xgehsUOstQY
wnp1pZPf0wE4Vurk/fJgodrwR3zvaXVyvieUVyMLkw+xPrHbxe+P9pcuufh8
E+xrcfF+85T/uYv7MQBHZrkeb4LlSpHzhaifYZHXa7D6VOT3uAvrY5/Z3nFY
cLn5/GLq5y03v287rA25OY8ZTky7+TwnLDlyOM9pes/bcvh9NHTJ/wEWaMjN

              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 1548.9118653564533`}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 1548.9118653564533`}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {1548.9118653564533`, 
           1945.1080732186522`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{
              "\"Neural Network\"", "\"NN Confidence Interval\"", "\"\"", 
               "\"Gaussian Process\"", "\"GP Confidence Interval\"", "\"\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], "\<\"Numerical\"\>"},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"44.0139003342077828052`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "6.9054739813080141531`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "30.2029523715917562754`3.", "\", \"", 
                    "57.8248482968238093349`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    30.2029523715917562754`3., ", ", 
                    57.8248482968238093349`3., "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"NeuralNetwork\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 2, "Length" -> 2, "InitialType" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[548211077], "Type" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[548211077]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkDepth", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "MaxTrainingRounds", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1000"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1663561282][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1663561282]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1663561282][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117458935976716]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "3.23`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "12.2`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"5.1803852418939166924`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1435803811436896782`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "4.8932244796065376136`3.", "\", \"", 
                    "5.4675460041812957712`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    4.8932244796065376136`3., ", ", 5.4675460041812957712`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"300.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{"99","\"examples\"","examples","\"Examples\""},
                   
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"31.8`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7845055007136326`}, {
                    4.3694478524670215`, 3.8629365060702443`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.7845055007136326`}}, {{4.3694478524670215`, 
                    3.8629365060702443`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.613844069239405}, {
                    2.70805020110221, 3.9302434860158297`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.2718641992026116`}, {
                    4.3694478524670215`, 4.231922125676664}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.780148222638265}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.780148222638265, 3.8629365060702443`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.004314161613271}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.180385241893917}}, {{4.3694478524670215`, 
                    5.004314161613271}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 5.036804860750227}, {
                    2.70805020110221, 5.323965623037607}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 4.728910277679497}, {
                    4.3694478524670215`, 5.279718045547045}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.994532434931013}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.994532434931013, 5.180385241893917}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.4180171185681765`}, {
                    4.3694478524670215`, 5.610099374420031}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.700767984899669}, {
                    4.3694478524670215`, 5.004314161613271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.175295127528558}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.752722720484859}, {
                    2.70805020110221, 5.752722720484859}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.714574608749021}, {
                    4.3694478524670215`, 5.202346819380324}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.2769973075008405`}, {
                    4.3694478524670215`, 5.078674921479966}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.609136480262543}, {
                    4.3694478524670215`, 5.19172202534841}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.810560621488098}, {
                    2.70805020110221, 5.810560621488098}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.411454943964182}, {
                    4.3694478524670215`, 5.411454943964182}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.48503549439977}, {
                    4.3694478524670215`, 5.602015867661219}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.4180171185681765`}}, {{
                    4.3694478524670215`, 5.610099374420031}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.700767984899669}}, {{
                    4.3694478524670215`, 5.004314161613271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.180385241893917}}, {{
                    4.3694478524670215`, 5.175295127528558}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.752722720484859}}, {{2.70805020110221,
                     5.752722720484859}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.714574608749021}}, {{
                    4.3694478524670215`, 5.202346819380324}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.2769973075008405`}}, {{
                    4.3694478524670215`, 5.078674921479966}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.609136480262543}}, {{
                    4.3694478524670215`, 5.19172202534841}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.810560621488098}}, {{2.70805020110221,
                     5.810560621488098}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.411454943964182}}, {{
                    4.3694478524670215`, 5.411454943964182}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.48503549439977}}, {{
                    4.3694478524670215`, 5.602015867661219}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.959522691620226}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.959522691620226, 5.810560621488098}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7845055007136326`}, {
                    4.3694478524670215`, 3.8629365060702443`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.7845055007136326`}}, {{4.3694478524670215`, 
                    3.8629365060702443`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.613844069239405}, {
                    2.70805020110221, 3.9302434860158297`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.2718641992026116`}, {
                    4.3694478524670215`, 4.231922125676664}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.780148222638265}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.780148222638265, 3.8629365060702443`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.004314161613271}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.180385241893917}}, {{4.3694478524670215`, 
                    5.004314161613271}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 5.036804860750227}, {
                    2.70805020110221, 5.323965623037607}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 4.728910277679497}, {
                    4.3694478524670215`, 5.279718045547045}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.994532434931013}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.994532434931013, 5.180385241893917}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.4180171185681765`}, {
                    4.3694478524670215`, 5.610099374420031}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.700767984899669}, {
                    4.3694478524670215`, 5.004314161613271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.180385241893917}, {
                    4.3694478524670215`, 5.175295127528558}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.752722720484859}, {
                    2.70805020110221, 5.752722720484859}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.714574608749021}, {
                    4.3694478524670215`, 5.202346819380324}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.2769973075008405`}, {
                    4.3694478524670215`, 5.078674921479966}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.609136480262543}, {
                    4.3694478524670215`, 5.19172202534841}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.810560621488098}, {
                    2.70805020110221, 5.810560621488098}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 5.411454943964182}, {
                    4.3694478524670215`, 5.411454943964182}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.48503549439977}, {
                    4.3694478524670215`, 5.602015867661219}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.4180171185681765`}}, {{
                    4.3694478524670215`, 5.610099374420031}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.700767984899669}}, {{
                    4.3694478524670215`, 5.004314161613271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.180385241893917}}, {{
                    4.3694478524670215`, 5.175295127528558}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.752722720484859}}, {{2.70805020110221,
                     5.752722720484859}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.714574608749021}}, {{
                    4.3694478524670215`, 5.202346819380324}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.2769973075008405`}}, {{
                    4.3694478524670215`, 5.078674921479966}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.609136480262543}}, {{
                    4.3694478524670215`, 5.19172202534841}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.810560621488098}}, {{2.70805020110221,
                     5.810560621488098}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 5.411454943964182}}, {{
                    4.3694478524670215`, 5.411454943964182}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.48503549439977}}, {{
                    4.3694478524670215`, 5.602015867661219}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117463230944012]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117467525911308]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117471820878604]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117476115845900]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117480410813196]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117484705780492]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117489000747788]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117493295715084]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117497590682380]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 117501885649676]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 4.959522691620226}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {4.959522691620226, 5.810560621488098}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{363., {137., 143.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              "DejaVu Sans", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]},
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], "\<\"Numerical\"\>"},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"48.0545983492691561878`3.",StyleBox[
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "21.1525038773341833576`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "5.7495905946007894727`3.", "\", \"", 
                    "90.3596061039375229029`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    5.7495905946007894727`3., ", ", 90.3596061039375229029`3.,
                     "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"GaussianProcess\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 6, "Length" -> 6, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 6, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1298134167], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "HandleQ" -> 
                    True, "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1298134167]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "AssumeDeterministic", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["CovarianceType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1565150686][{
                    Key["CovarianceType"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["EstimationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["MaximumPosterior", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["SearchMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["InputFeatures", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    GeneralUtilities`Slice[
                    Key["InputFeatures"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], {}}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1565150686][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1565150686]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1565150686][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56242767106829]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "6.25`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "13.4`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"10.6413417298831607383`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "3.3479102947208700947`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "3.9455211404414205489`3.", "\", \"", 
                    "17.3371623193249000394`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    3.9455211404414205489`3., ", ", 17.3371623193249000394`3.,
                     "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"187.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{"99","\"examples\"","examples","\"Examples\""},
                   
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"2.02`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 4.050818423796305}, {
                    4.3694478524670215`, 3.8723378300938016`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    4.050818423796305}}, {{4.3694478524670215`, 
                    3.8723378300938016`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.9359051932788}, {
                    2.70805020110221, 4.153877150792685}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.292204144986973}, {
                    4.3694478524670215`, 4.237103490689602}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.862422241554774}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.862422241554774, 4.050818423796305}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 15.90537443164207}, {
                    4.3694478524670215`, 10.64134172988316}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    15.90537443164207}}, {{4.3694478524670215`, 
                    10.64134172988316}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 12.826060309545035`}, {
                    2.70805020110221, 18.984688553739105`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 7.29343143516229}, {
                    4.3694478524670215`, 13.989252024604031`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 10.348895468674336`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {10.348895468674336`, 15.90537443164207}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 15.90537443164207}, {
                    4.3694478524670215`, 10.64134172988316}, {
                    4.3694478524670215`, 10.64134172988316}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 15.90537443164207}}, {{
                    4.3694478524670215`, 10.64134172988316}}, {{
                    4.3694478524670215`, 10.64134172988316}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 10.348895468674336`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {10.348895468674336`, 15.90537443164207}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 4.050818423796305}, {
                    4.3694478524670215`, 3.8723378300938016`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    4.050818423796305}}, {{4.3694478524670215`, 
                    3.8723378300938016`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{2.70805020110221, 3.9359051932788}, {
                    2.70805020110221, 4.153877150792685}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.292204144986973}, {
                    4.3694478524670215`, 4.237103490689602}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.862422241554774}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.862422241554774, 4.050818423796305}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 15.90537443164207}, {
                    4.3694478524670215`, 10.64134172988316}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    15.90537443164207}}, {{4.3694478524670215`, 
                    10.64134172988316}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 12.826060309545035`}, {
                    2.70805020110221, 18.984688553739105`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 7.29343143516229}, {
                    4.3694478524670215`, 13.989252024604031`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 10.348895468674336`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {10.348895468674336`, 15.90537443164207}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 15.90537443164207}, {
                    4.3694478524670215`, 10.64134172988316}, {
                    4.3694478524670215`, 10.64134172988316}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 15.90537443164207}}, {{
                    4.3694478524670215`, 10.64134172988316}}, {{
                    4.3694478524670215`, 10.64134172988316}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 56247062074125]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 10.348895468674336`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {10.348895468674336`, 15.90537443164207}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{363., {137., 143.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              "DejaVu Sans", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.767913426394915*^9, 3.7679137594048157`*^9, 
  3.767913855992608*^9, 3.7679141095942183`*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"21b630df-5c29-4db6-8397-603797b7a642"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<NVIDIA\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767914139707337*^9, 3.767914168633376*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"4be81d7e-0cff-4b70-a123-4e7ee037bc46"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1: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
jYH5yf0mcF9HORXzsyChbWyjK+RPPYe3VuN6zpifzHy/d5kHHTA/397dY5nD
Y4f5uSRDxHB4hQ3m5/u1rY3nj1thfro3KvZFVBhhfjpvGuY0LXfD/GwoWWTt
fc4N83OXRjLPFkPIn92bLzQqLYD8mXuXFWo+TsP81JpaqTP5nYH5eSv2lSm/
POTPl/oZr1YcZ2J+RtifGN8tAPkzvsOzKHe7Nean9dYp9ZciRpifZzfseiAs
DPlTO7nvqOpvN8zPfcIcNxKmqZifIeM9ZrV/qJifOydqyhntDMzPOsoSpdW8
kD9Pcm0pfDnMxPx8ej5XsIET+Hnz6J2IO8shf6bdOO9rHwr5szexy0ckkYr5
ydF1Q06JHfjJn8EpMvaOjvlZoF3iMeIJ+VM2q/hK1GrIn1ZrncUL10L+PBAl
urPADPLn51bPWNlOQ8xPz+emjPw64KeKb5DcAgHIn7UZuXx6jpA/m6R45i0L
gPz5/eKVDy10yJ8aeutnlHyBny2ilyU3SUP+XJnWOhsUCfz0E3ipOXMI8uc9
0fyl8mHAzwszifdV46iYn4FtRVvLCB8l+Vm6vFjQeh8d8zPpjkFCZSAd8zO+
rz7rPlGT/Aw+VFg5V5P8LD9S/Lcm+Vn3b03yk6xJfpI1yU+yJvlJ1iQ/yZrk
J1mT/CRrkp9WA29NXv8Aftar54ZwfID8Wb1Q1dK1GPh5QXddK9c54OeS7AMP
6qQhf/o4dquOqkP+lJn4syy3A/iJmiU6kCLkTzFtttVHBSF/dlEb56tFQ/70
DK0Xev0PDfPzn+u0GvUddMzP+A06w4EH6ZifHajucTvRH8nPiFnZ/5/3v/xc
Hvz//qmtt7cMroDzEIm+pO0kDzXJV7Im+aqhdUaZTw/yqXmer5XjSsinaexL
/KPdIJ82bgiSnn8B8qnnwitukWmQT98Ibkys6QO+umWWzYylQT79LSNyRc8c
+HriQco2rz7g68cqab3iIeAr58k3KyKeUDFfQ5Nt3sUR8yH5WtV579aLA3TM
V+cBPbHbRH8kX7nni1+c65fk59YiCacvBZA/E92VVgmmQv7Ms789TRWA/Hll
XtnXtMPAz3QOYzfOJ8DPwoh1h8zygZ8l7e7TbxuAn/4aFRYtY8DPHJ7SzRa6
dHS+hW21BPE+S/qfOsTvoSKxt2ZFKSKEv+Qw6/SSaCj1C9/UN+J+vNyrKL/X
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
vBxSeTo3T9InLIU3/J3n/wBB17Yw
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt0dN3F3Acx+Hflt2ya23ZdqsWt7iMq/6Ausq27Vrbsm3btm3bfM6pi+e8
zuf7vvyGdu4a0yU4EAgE8ZRnlHJkJJpgahFOS57bS2smGpOI2hSgFS/sZTQz
ialDQVrz0lZWs9CEJERSiDa8spfTrDQlKXUpTFte28trNpqRjHoUoR1v7BU0
O81JTn2K0p639oqagxakoAHF6MA7eyXNSQwpaUhxOvLeXllzkYoP7iqam9R8
dFfVPKThk7ua5iUtn93VNR/p+OKuoaGkpxEl+Oq9puYnhG/u7/zgJ7/4zZ/A
v4+LIIwMRFGSTgQx7v+/bucycazhBGMZw2hGMZIRDGcYc1nNcYayjUvEsopj
DGEOKznKYGazgiMMYhbLOcxAZrKMQwxgBks5SH+esJWLTOc2SzhAPx6zhQtM
4xaL2U9fHrGZ80zlJovYRx8esolzTOEGC9lLbx6wkbNM5joL2EMv7rOBM0zi
GvPZTU/usZ7TTGQeu+jBXdZxiglcJYGddOcOaznJeK4Qzw668RcH1Hiv
                 
                 "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0.5, 0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwV0lWUVgUYhtEZeuiQzqFRWhoJ6Y6hpBSHkB4aEZBQ6e7uUkJROgyQTpFu
JuiUbvd/sc+z3vXdnXNCwyPCuscKCgoKJsSjg/ELUzjKEP5gMZf4ivVM5RhD
+ZMlXKYjvzKN4wzjL5ZyhU78xnT+YTi7WMZVOrOBGZzgO3aznGt0YSMz+Zfv
+ZsVdGUTszjJD+xhJZF0YzOzOcUI9rKKKAIvYgtzOM1I9vEj0USwlbmcYRT7
+YkYerCNeZxlNAdYzXV6sp35nGMMB1nDDXqxgwWcZyyHWMtNerOThVxgHIdZ
xy368DuLuMh4jvAzt+nLBPoxkf5M4msG8A0DGcRgJvMtr/wXSfSlvuA5z3jK
ExK7PdZE+p8m1EfaXj+iJiE0IxNleOjeTj+kBgloSkZK88C9reajOvFpQgZK
cd89XPNSjXg0Jj0luef+peahKnFJRwnuurXR3FQhDo1IS3HuuH+huahMbMJI
Q7HAu3T/XHNSiVg0JDUfB76Fe2vNwacE04APKBr4lu7ZtSJB1CcVRQL/gVsr
DaUC7+16mpLCgf/IbqnZKM87u66moBAxdgvNSjne2nU0OQWJtptrFj7hjV1b
k1GAKPszzUxZXtu1NCn5ibT/B24si0o=
                 
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 71, 43, 99, 26, 88, 60, 107, 2, 72, 44, 100, 27, 
                89, 61, 108, 3, 73, 45, 28, 90, 62, 109, 4, 74, 46, 101, 29, 
                91, 63, 110, 5, 75, 47, 102, 30, 92, 64, 111, 6, 76, 48, 103, 
                31, 93, 65, 112, 7, 77, 49, 104, 32, 94, 66, 113, 8, 78, 50, 
                105, 33, 95, 67, 114, 9, 79, 51, 106, 34, 96, 68, 115, 10, 80,
                 52, 35, 11, 81, 53, 36, 12, 82, 54, 37, 13, 83, 55, 38, 14, 
                84, 56, 39, 15, 85, 57, 40, 97, 69, 16, 86, 58, 41, 17, 18, 
                19, 20, 21, 22, 23, 24, 87, 59, 42, 98, 70, 116, 25}]}, 
              Annotation[#, "Charting`Private`Tag$5394009#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               
               LineBox[{117, 187, 159, 215, 142, 204, 176, 223, 118, 188, 160,
                 216, 143, 205, 177, 224, 119, 189, 161, 144, 206, 178, 225, 
                120, 190, 162, 217, 145, 207, 179, 226, 121, 191, 163, 218, 
                146, 208, 180, 227, 122, 192, 164, 219, 147, 209, 181, 228, 
                123, 193, 165, 220, 148, 210, 182, 229, 124, 194, 166, 221, 
                149, 211, 183, 230, 125, 195, 167, 222, 150, 212, 184, 231, 
                126, 196, 168, 151, 127, 197, 169, 152, 128, 198, 170, 153, 
                129, 199, 171, 154, 130, 200, 172, 155, 131, 201, 173, 156, 
                213, 185, 132, 202, 174, 157, 133, 134, 135, 136, 137, 138, 
                139, 140, 203, 175, 158, 214, 186, 232, 141}]}, 
              Annotation[#, "Charting`Private`Tag$5394009#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwNycN2RAEURcHXsW13bFsdmx1jlA9IJvnp2GYNau117wmfnEVPQ0EQnHNB
hyOXZWKYoJYtLu2dmscKsUxSxzZX9i7NJ44p6tnh2tatBawSzzQN7HJj79FC
1khghkb2uLX3ahHrJDJLE/vc2fu0mA2SmKOZA+7t/VrCJsnM08IhD/YBLSVK
Cgu0csSjfVDLSOXJPaTlpPHsHtYK0nlxj2glGby6R7WKTN7cYxomi0XaePcf
12qy+XB/8sU3P/zyR2CPUEMOS7RzTIh/lIwpJw==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5394009#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 1, 0]], 
               LineBox[CompressedData["
1:eJwV0UVWFQAAQNHPUtgSc6SUkpKQFOkUaemU7u5QQSWVlBAUdsJlcM958xcc
mRySFBQIBEoJFcNU8p23LNHKBS8YoYofZLJMG5eEMUo1P8lihXb+EM4YH9gj
m1U6uCKCcWrYJ4c1Orkmkgk+ckAu63QRxSS1HJLHBt3c8JIp6jjiHZv0cMsr
pqnnmHy26OUv0czQwC/es00fd8QwSyO/KeAL/dwTyxxNnFDIVz7zjzjmaeaU
Ir4xwH/iWeATZxSzwyAPvGaRFs4pYZchHkmglETKeJ5eTjIpvCGVNNKpIIMn
i7RVWQ==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5394009#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNyec71QEYx+HfObLKLJHdSSWyQ/YIIVGOUck85S3/hL80FNl7j/vFfX2e
5/pGYsvRpVAQBCv8cVSEgyCNT1z5W7WQ76z6KzWdIa79bVrED9b8VZrBZ278
7VrMFOv+as1kmFt/hz7nJ3/9NfqYEe78nRphmn/+Wn3CFwK6eMGGrU6z+EqI
bkqYYdP+Tp8ySpgPvGSW//Z6zSZKHD28Yo4te4PmMMYDennNPNv2Rn1GPH2U
ssCO7b3mMk4CH3lDjF17k+YxQSL9lPGLPXuz5jNJEgOU85t9e4sW8I1kBnnL
Igf2h3qoj/RIU/RYTzjljHMuSLVd6j1bsjNw
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5394009#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNw+c6lgEAANC37sQtdQn9yN6RXeQjWSWyRzIyCtmbClFK2XvPq3DO85yw
x/GP4h4EQRDyycMg6LfCPz531g8eGu6A7/zrC+ds9cgIv1rpmrnO+9FjIx20
yn/m+c02T4xyyPf+96XfbffUaIetdt18f9hhjCPWuGHIBTs9M9ZRa920wEU/
eW6cY9a5ZaFLdnlhvOPWu+0rf9rtpQlO2OCORS7b45WJTtrorq9dsddrk5yy
yT2L/eVnb0x22mb3LfG3X7z1qTO2eGCpq/Z5Z4plplruM9+YZroZZppltm/N
8R770lqL
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$5394009#6"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJw11G9IE3EYB/BT56bTbadJhpacJFQUsTCKXlSnVFpBnEUQ9G/O1BTNVW9i
ERyE0ZvahVIqBFcrKiFYL6KhKFevkobNsHxVnJEV6Iv1R9O02fZ9nhPk+PD8
7nff33PPrdzfcbgxUxCEhtR/+pr6i7z9O12VuspOR72cupoLZOnE8um0xYpF
WC2yo67fJxuxGTgeI/tCQVj4Y/kd7C1f4v3W+dP2HVzieh+cGFni/Udh6TdZ
mBiElbJ/lG+S1qu1bOcfOHKBrL6625B2oDQJm+Ee1PW9ZL3mCRzvSPJ+A1gv
9CX5PLYzaWurlun+Ohn5jWqyXHnRh7xtXA9uQl26QxaEeVh5ucznLcbzzN3C
DOV7CIutZF/TMCx3k1N3UP5hsh5op/zfLXfC3uYMvv8Q9fNWBtenYG2QLGxY
jf2MKbIxq8AJT+YMnb8fjkTJZrAbNj+T9d4xWHRlUT18CZa3k9Wir3D8ueUP
1E+TLFeGYa/TRs8va4d9W8lmXS2snbLxeW7C0kdeP9sDK45sfr4Gq1uyOV8G
5T/O9eA4zh+w2dkVeJ/6ZnZYgePHyMLEikbkvUpWp5+h7n1qeQfqxkYH5yuD
E0fZ0TlYUslGLAYr/Q7uR7IJeccd/H69sHgkh88XxXr5Sg7nKUU98IgtiLA+
Znk9HF/M4XznYV8wl/d7DWsPcnm9CRuj7ImuZuSfz+X+X4eltU4+3yc4co+s
1yzA5hsnr38Mi3NOfr9ZZ5FfyuP1P1APHMjj9QYsjOTx/ith7y929BrsW5PP
97fAWg27dz+sJMiyMwSrJS6e9/eUd4/lKcp7zsXzdpLy9rp43qupn8Vuen6o
lfpZ5eZ+6bDQ5raeB3tvu615p34bbj4f9Texy8P9uAxLLWSpM0zz0OXhfEOw
OuTh/fbBkW/snSU0D00i92uUfg80kftTRfM8wPXQT/r+voi8nx11wVPA80Df
i3ajgM8378c8vCjg+amn34PJAn6enb6//ELO04r1yrZCnu8Kv/wfUt+7MA==

              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 51.321218306753586`}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 51.321218306753586`}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {51.321218306753586`, 
           193.11276925433202`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{
              "\"Neural Network\"", "\"NN Confidence Interval\"", "\"\"", 
               "\"Gaussian Process\"", "\"GP Confidence Interval\"", "\"\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], "\<\"Numerical\"\>"},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"6.3477265950910979342`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "1.1242185480935327213`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "4.0992894989040324916`3.", "\", \"", 
                    "8.596163691278164265`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    4.0992894989040324916`3., ", ", 8.596163691278164265`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"NeuralNetwork\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 2, "Length" -> 2, "InitialType" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[33800423], "Type" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[33800423]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkDepth", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "MaxTrainingRounds", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["300"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 707221624][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    707221624]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    707221624][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217845206586223]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "3.14`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "11.6`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"3.3368453647583171673`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2725901269107555702`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "2.7916651109368060268`3.", "\", \"", 
                    "3.8820256185798283077`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    2.7916651109368060268`3., ", ", 3.8820256185798283077`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"317.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{"99","\"examples\"","examples","\"Examples\""},
                   
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"23.1`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 1.8480967322802981`}, {
                    4.3694478524670215`, 2.085408271816294}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    1.8480967322802981`}}, {{4.3694478524670215`, 
                    2.085408271816294}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 1.6531692158317264`}, {
                    2.70805020110221, 2.011155359248712}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 1.66658270017958}, {
                    4.3694478524670215`, 2.379704228581264}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 1.8349127578616318`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {1.8349127578616318`, 2.085408271816294}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.336845364758317}, {
                    4.3694478524670215`, 3.9681932913800644`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.336845364758317}}, {{4.3694478524670215`, 
                    3.9681932913800644`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.0642552378475614`}, {
                    2.70805020110221, 3.609435491669073}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.055053949326264}, {
                    4.3694478524670215`, 4.881332633433865}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.301770479945998}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.301770479945998, 3.9681932913800644`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7876043110780344`}, {
                    2.70805020110221, 3.7876043110780344`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.771724577603209}, {
                    4.3694478524670215`, 3.771724577603209}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.255218610675146}, {
                    2.70805020110221, 3.255218610675146}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 4.3496567338927825`}, {
                    2.70805020110221, 4.3496567338927825`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.336845364758317}, {
                    4.3694478524670215`, 3.695954519920682}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.9681932913800644`}, {
                    4.3694478524670215`, 3.9681932913800644`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.6475874950476146`}, {
                    4.3694478524670215`, 3.6475874950476146`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Line[{{2.70805020110221, 3.5347400510192557`}, {
                    2.70805020110221, 3.5347400510192557`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.275389730181309}, {
                    4.3694478524670215`, 4.311893464616271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.8464977872798247`}, {
                    4.3694478524670215`, 3.449626134606462}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.7876043110780344`}}, {{
                    2.70805020110221, 3.7876043110780344`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.771724577603209}}, {{
                    4.3694478524670215`, 3.771724577603209}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.255218610675146}}, {{2.70805020110221,
                     3.255218610675146}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 4.3496567338927825`}}, {{
                    2.70805020110221, 4.3496567338927825`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.336845364758317}}, {{
                    4.3694478524670215`, 3.695954519920682}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.9681932913800644`}}, {{
                    4.3694478524670215`, 3.9681932913800644`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.6475874950476146`}}, {{
                    4.3694478524670215`, 3.6475874950476146`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.5347400510192557`}}, {{
                    2.70805020110221, 3.5347400510192557`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.275389730181309}}, {{
                    4.3694478524670215`, 4.311893464616271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.8464977872798247`}}, {{
                    4.3694478524670215`, 3.449626134606462}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.194416492718611}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.194416492718611, 4.3496567338927825`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip["Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 1.8480967322802981`}, {
                    4.3694478524670215`, 2.085408271816294}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    1.8480967322802981`}}, {{4.3694478524670215`, 
                    2.085408271816294}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 1.6531692158317264`}, {
                    2.70805020110221, 2.011155359248712}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 1.66658270017958}, {
                    4.3694478524670215`, 2.379704228581264}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 1.8349127578616318`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {1.8349127578616318`, 2.085408271816294}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.336845364758317}, {
                    4.3694478524670215`, 3.9681932913800644`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    3.336845364758317}}, {{4.3694478524670215`, 
                    3.9681932913800644`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 3.0642552378475614`}, {
                    2.70805020110221, 3.609435491669073}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 3.055053949326264}, {
                    4.3694478524670215`, 4.881332633433865}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.301770479945998}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.301770479945998, 3.9681932913800644`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.7876043110780344`}, {
                    2.70805020110221, 3.7876043110780344`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.771724577603209}, {
                    4.3694478524670215`, 3.771724577603209}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.255218610675146}, {
                    2.70805020110221, 3.255218610675146}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 4.3496567338927825`}, {
                    2.70805020110221, 4.3496567338927825`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.336845364758317}, {
                    4.3694478524670215`, 3.695954519920682}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.9681932913800644`}, {
                    4.3694478524670215`, 3.9681932913800644`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.3694478524670215`, 3.6475874950476146`}, {
                    4.3694478524670215`, 3.6475874950476146`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.5347400510192557`}, {
                    2.70805020110221, 3.5347400510192557`}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.275389730181309}, {
                    4.3694478524670215`, 4.311893464616271}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 3.8464977872798247`}, {
                    4.3694478524670215`, 3.449626134606462}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.7876043110780344`}}, {{
                    2.70805020110221, 3.7876043110780344`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.771724577603209}}, {{
                    4.3694478524670215`, 3.771724577603209}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.255218610675146}}, {{2.70805020110221,
                     3.255218610675146}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 4.3496567338927825`}}, {{
                    2.70805020110221, 4.3496567338927825`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.336845364758317}}, {{
                    4.3694478524670215`, 3.695954519920682}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.9681932913800644`}}, {{
                    4.3694478524670215`, 3.9681932913800644`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.3694478524670215`, 3.6475874950476146`}}, {{
                    4.3694478524670215`, 3.6475874950476146`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.5347400510192557`}}, {{
                    2.70805020110221, 3.5347400510192557`}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.275389730181309}}, {{
                    4.3694478524670215`, 4.311893464616271}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 3.8464977872798247`}}, {{
                    4.3694478524670215`, 3.449626134606462}}}]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217849501553519]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217853796520815]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217858091488111]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217862386455407]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217866681422703]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217870976389999]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217875271357295]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 4, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217879566324591]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217883861291887]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["NeuralNetwork", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 2, MaxTrainingRounds -> 300], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 217888156259183]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 3.194416492718611}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {3.194416492718611, 4.3496567338927825`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{363., {136., 142.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              "DejaVu Sans", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]},
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], "\<\"Numerical\"\>"},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"8.0691521183845242859`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "1.4721653218621704173`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "5.1248214746601838954`3.", "\", \"", 
                    "11.0134827621088646765`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    5.1248214746601838954`3., ", ", 11.0134827621088646765`3.,
                     "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"GaussianProcess\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 6, "Length" -> 6, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 6, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[939347632], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "HandleQ" -> 
                    True, "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[939347632]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "AssumeDeterministic", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["CovarianceType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1916297388][{
                    Key["CovarianceType"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["EstimationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["MaximumPosterior", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["SearchMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["InputFeatures", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    GeneralUtilities`Slice[
                    Key["InputFeatures"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], {}}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1916297388][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1916297388]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1916297388][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173130302067567]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "6.15`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "12.8`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"19.5943606303430328808`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "12.0035495640401226325`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "4.4127384977372123842`3."}], "\", \"", 
                    "43.601459758423274593`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", \
-4.4127384977372123842`3., ", ", 43.601459758423274593`3., "]"}], 
                    "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"185.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{"99","\"examples\"","examples","\"Examples\""},
                   
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"4.2`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 2.3372162396121454`}, {
                    4.3694478524670215`, 2.088048410886528}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    2.3372162396121454`}}, {{4.3694478524670215`, 
                    2.088048410886528}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 2.22698167217751}, {
                    2.70805020110221, 2.4364966852656718`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 1.886612998802071}, {
                    4.3694478524670215`, 2.2556315723876743`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 2.074205753735105}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {2.074205753735105, 2.3372162396121454`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.632814538038453}, {
                    4.3694478524670215`, 19.594360630343033`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.632814538038453}}, {{4.3694478524670215`, 
                    19.594360630343033`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{2.70805020110221, 4.789107954313743}, {
                    2.70805020110221, 6.476521121763162}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 7.59081106630291}, {
                    4.3694478524670215`, 31.597910194383154`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {0, 19.594360630343033`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.632814538038453}, {
                    4.3694478524670215`, 19.594360630343033`}, {
                    4.3694478524670215`, 19.594360630343033`}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.632814538038453}}, {{
                    4.3694478524670215`, 19.594360630343033`}}, {{
                    4.3694478524670215`, 19.594360630343033`}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {
                    None, "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                    "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                    "SearchMethod" -> "SimulatedAnnealing", 
                    "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {0, 19.594360630343033`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 2.3372162396121454`}, {
                    4.3694478524670215`, 2.088048410886528}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    2.3372162396121454`}}, {{4.3694478524670215`, 
                    2.088048410886528}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 2.22698167217751}, {
                    2.70805020110221, 2.4364966852656718`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 1.886612998802071}, {
                    4.3694478524670215`, 2.2556315723876743`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 2.074205753735105}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {2.074205753735105, 2.3372162396121454`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.632814538038453}, {
                    4.3694478524670215`, 19.594360630343033`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    5.632814538038453}}, {{4.3694478524670215`, 
                    19.594360630343033`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 4.789107954313743}, {
                    2.70805020110221, 6.476521121763162}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.3694478524670215`, 7.59081106630291}, {
                    4.3694478524670215`, 31.597910194383154`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {0, 19.594360630343033`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 5.632814538038453}, {
                    4.3694478524670215`, 19.594360630343033`}, {
                    4.3694478524670215`, 19.594360630343033`}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 5.632814538038453}}, {{
                    4.3694478524670215`, 19.594360630343033`}}, {{
                    4.3694478524670215`, 19.594360630343033`}}}]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, Center]], {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["GaussianProcess", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    AssumeDeterministic -> False, 
                    "CovarianceType" -> {None, "Numerical" -> 
                    "SquaredExponential", "Nominal" -> "HammingDistance"}, 
                    "EstimationMethod" -> "MaximumPosterior", 
                    "OptimizationMethod" -> Automatic, "SearchMethod" -> 
                    "SimulatedAnnealing", "InputFeatures" -> {}], 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                    Association["ID" -> 173134597034864]]}, 
                    Center]], {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669538575611753, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669538575611753, 
                    Log[99]}, {0, 19.594360630343033`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{363., {134., 139.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              "DejaVu Sans", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.767914208141494*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"6e48ac9d-b9bb-462e-a29d-c28e22d128ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "predictPrices", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"predictPrices", "[", 
    RowBox[{
    "instrumentSymbol_String", ",", "\[IndentingNewLine]", 
     "closingPriceDateStart_", ",", "\[IndentingNewLine]", 
     "closingPriceDateEnd_", ",", "\[IndentingNewLine]", "predictionEnd_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"FinancialData", "[", 
         RowBox[{"instrumentSymbol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"closingPriceDateStart", ",", "closingPriceDateEnd"}], 
           "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"absEnd", "=", 
        RowBox[{"AbsoluteTime", "@", "predictionEnd"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"absTimes", "=", 
          RowBox[{
           RowBox[{"AbsoluteTime", "@*", "First"}], "/@", 
           RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"absPrices", "=", 
          RowBox[{"QuantityMagnitude", "/@", 
           RowBox[{"data", "[", "\"\<Values\>\"", "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"points", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"rules", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"{", 
               RowBox[{"absTimes", ",", "absPrices"}], "}"}]}], "]"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"nnp", "=", 
              RowBox[{"Predict", "[", 
               RowBox[{"rules", ",", 
                RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"gpp", "=", 
              RowBox[{"Predict", "[", 
               RowBox[{"rules", ",", 
                RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}], ",", 
                RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
               "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "   ", 
             RowBox[{"Show", "[", "   ", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nnp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"nnp", "[", "t", "]"}], "+", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"nnp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"nnp", "[", "t", "]"}], "-", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"nnp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"gpp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"gpp", "[", "t", "]"}], "+", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"gpp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"gpp", "[", "t", "]"}], "-", 
                    RowBox[{"StandardDeviation", "[", 
                    RowBox[{"gpp", "[", 
                    RowBox[{"t", ",", "\"\<Distribution\>\""}], "]"}], 
                    "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", 
                   RowBox[{"AbsoluteTime", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"data", "[", "\"\<DatePath\>\"", "]"}], "]"}], 
                    "]"}], "]"}], ",", "absEnd"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                   "Blue", ",", "Gray", ",", "Gray", ",", "Green", ",", 
                    "Pink", ",", "Pink"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Filling", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"{", "3", "}"}]}], ",", 
                    RowBox[{"5", "\[Rule]", 
                    RowBox[{"{", "6", "}"}]}]}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Exclusions", "\[Rule]", "False"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                   "\"\<Neural Network\>\"", ",", 
                    "\"\<NN Confidence Interval\>\"", ",", " ", "\"\<\>\"", 
                    ",", " ", "\[IndentingNewLine]", 
                    "\"\<Gaussian Process\>\"", ",", " ", 
                    "\"\<GP Confidence Interval\>\"", ",", "\"\<\>\""}], 
                   "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ListPlot", "[", 
                RowBox[{"points", ",", 
                 RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"{", "\"\<Data\>\"", "}"}]}]}], "]"}]}], "]"}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<GOOG\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.767909090521641*^9, 3.7679092814366503`*^9}, {
   3.7679093755686827`*^9, 3.767909524861071*^9}, {3.767909561200883*^9, 
   3.767909707138989*^9}, {3.767909741424943*^9, 3.767909898663289*^9}, {
   3.767909935571477*^9, 3.7679101288875847`*^9}, {3.767910172374905*^9, 
   3.7679101783813953`*^9}, {3.767910256837027*^9, 3.7679102579692163`*^9}, 
   3.767910576569868*^9, {3.7679107225807056`*^9, 3.767910760431864*^9}, {
   3.7679111886666822`*^9, 3.767911263271343*^9}, {3.767911330644758*^9, 
   3.767911349394684*^9}, {3.767911392293357*^9, 3.7679113966514893`*^9}, {
   3.7679114294743757`*^9, 3.767911453463373*^9}, {3.767911542981186*^9, 
   3.76791156252633*^9}, {3.767911687762051*^9, 3.767911693593628*^9}, {
   3.767911878536607*^9, 3.7679118811587257`*^9}, {3.767912084101158*^9, 
   3.767912110407009*^9}, {3.767912748808548*^9, 3.767912771801449*^9}, {
   3.767912830935419*^9, 3.7679128327852173`*^9}, {3.767913314822633*^9, 
   3.767913388295273*^9}, {3.7679134370020733`*^9, 3.76791354877419*^9}, {
   3.767913601392254*^9, 3.767913732309525*^9}, {3.767913775633802*^9, 
   3.767913818465026*^9}, {3.7679139638310337`*^9, 3.767914015296036*^9}, {
   3.7679140457787952`*^9, 3.767914060838937*^9}, {3.767914270152075*^9, 
   3.767914288579981*^9}, {3.76791444558613*^9, 3.7679144460051203`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"6c44f44b-5c39-4a70-810e-60a723c35e0e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1: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
pJSfGyG/bdgZ6CKAr/d/Gbzoiw==
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt0dVSVgEUgNH/x+7uBAW7OxATMDAwHsAH0Au7u7sVbMXu7u7u7u7uQNeM
Xqz5zt77zLk5oR07x3cKCQQCQR7xmDKGzMSSbH5CWc9Z+OO5jhamNU/N5TQr
TYP/PlSXIrThmVV5zUYzgkRSlHieu1fQ7DQnhHqE0pYX7hU1By1IQRRhtOOl
eyXNSRwpqU8x2vPKvbLmoiWpaEBxXrtV0dykpiHhvLGvqnloRRoaEcFbt2qa
l7Q0pgTv7KtrPtLRhJK8t6+h+UlPNKX4YF9TC5CBj+ZaWpCMfDJ/5gtf+cZ3
fvCTX9T2XiEyEUNpOvDbbcz//7mNyySykmOMZhQjGcFwhjGUIQwmgRUcZRCz
WM4RBrKVS8xkGYcZwBYuMoOlHKI/m7nAdJZwkH5s4jzTuE0SB+jLRs4xlcXs
pw8bOMsUbrGIffTmIes5w2RuspC99OIB6zjNJG6wgD305D5rOcVErjOf3fTg
Hms4yQSuMY9ddOcuqznBeK4yl5104w6rOM445rCDrozlCrPZThf+AoHgd3M=

                 
                 "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0.5, 0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwV0UVXFlAYhdEPDOzAFgxMROzuFgETsRs7wW6wMFFUbKw/Y3cXdqBiYidu
B3s960zewb0RSckJ84IDgUAQObQyFjKGrfQnjensozWLGMs2BrCGGeynDYsZ
RwYDWctMDtCWJYxnO4NYxywO0o6lTGAHg1nPbA7RnmVMJJMhbGAO2XRgOZPY
SQLpzOUwHVlBErsYykb+P8IROrGSyewmkU0kc5TOrGIKWQxjMykcowurmcoe
hrOF+RynK6lMYy8jWEA3RtKdUfSgJ73oTR/6EkM/YoljNPHc94FvyOEed7nD
bW5xkxtc5xp5XOU1VyjsxittqN+1nF7WllqIMF7aDfSbltVL2kKDqU6uXV+/
ahm9qM01iGq8sOvpFy2tF7SZBqjKc7uuftZSel6baoFW0WdaRz9pST2nTfSv
VtanGqH5WkLParT+0Ur6RGvrRy2uZ7Sx/taK+lhr6Qctpqc1Sn9pBX2kNfW9
hugpbaQ/NVQfag19p0X1pEbqDy2vDzRc32oRPaH/ALxaanU=
                 
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 71, 42, 100, 26, 2, 72, 43, 27, 87, 58, 108, 3, 73,
                 44, 101, 28, 88, 59, 109, 4, 74, 45, 102, 29, 89, 60, 110, 5,
                 75, 46, 103, 30, 90, 61, 111, 6, 76, 47, 104, 31, 91, 62, 
                112, 7, 77, 48, 105, 32, 92, 63, 113, 8, 78, 49, 106, 33, 93, 
                64, 9, 79, 50, 34, 94, 65, 10, 80, 51, 107, 35, 95, 66, 11, 
                81, 52, 36, 96, 67, 12, 82, 53, 37, 97, 68, 13, 83, 54, 38, 
                98, 69, 14, 84, 55, 39, 15, 85, 56, 40, 16, 17, 18, 19, 20, 
                21, 22, 23, 24, 86, 57, 41, 99, 70, 114, 25}]}, 
              Annotation[#, "Charting`Private`Tag$5478849#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               
               LineBox[{115, 185, 156, 214, 140, 116, 186, 157, 141, 201, 172,
                 222, 117, 187, 158, 215, 142, 202, 173, 223, 118, 188, 159, 
                216, 143, 203, 174, 224, 119, 189, 160, 217, 144, 204, 175, 
                225, 120, 190, 161, 218, 145, 205, 176, 226, 121, 191, 162, 
                219, 146, 206, 177, 227, 122, 192, 163, 220, 147, 207, 178, 
                123, 193, 164, 148, 208, 179, 124, 194, 165, 221, 149, 209, 
                180, 125, 195, 166, 150, 210, 181, 126, 196, 167, 151, 211, 
                182, 127, 197, 168, 152, 212, 183, 128, 198, 169, 153, 129, 
                199, 170, 154, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
                200, 171, 155, 213, 184, 228, 139}]}, 
              Annotation[#, "Charting`Private`Tag$5478849#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwVzFVSA1EQQNEJ7u4egru7e3CCLIAFQBV7xt1dDh+n7uvuqQnvH8YOQkEQ
HHFMqyGLJX7MJ7R5Z/PrPapVbHJqbtccov8/YYxqtjiz6tBclgkxTg0xzt07
NY8V4pggzDYX7l2azyrxTFLLDpfu3VrAGglMEWGXK/ceLWSdRKap49qtV4tI
YoZ6buz7tJgNkpmlgVu3fi0hhTkaubMf0FJSmaeJe/tBLSONBZp5sB/SctJ5
NA9rBRk8mZ954ZU33vngky9GfFdJJou0sMe32x8ZjSqg
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5478849#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 1, 0]], 
               LineBox[CompressedData["
1:eJwV0UVWQgEAQNHvUtySEwMT7ABbsbsbA7G7uzsX5nVwz3nzlx6OZUTTgiCI
kimW6OacWnYY55kskvRwQR27TPBCNsv0ckk9e0zySg4p+riigX2meCPECv1c
08gB07yTyyoD3NDEITN8kMcag9zSzBGzfJLPOkPc0cIxc3xRwAbD3NPKCQm+
KWSTER6Ic8o8PxSxxSiPtHHGAr+E2WaMJ9pZJEIHxXRSQilllFNBJVVUU8P/
tC5i/AEEYT9d
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5478849#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNx9VVA1AARMGX4B7cJbhbKZRAAaFKHIK7u7s783HP7MaHR4YSkRBCQqNG
WjSEG9Zwl4X8YDvHmM5b1nKPRfxkB8eZwTvWcZ/F/GInJ5jJe9bzgCX8Zhcn
mcUHNvCQpfxhN6eYzUfGecQy/rKH08zhExt5zHL+sZczzOUzm3jCCgb1adbP
4wubecpKRtSvpJ/PV7bwjFWMakBzfgHf2MpzVjNFg5r3Y3xnGy+YygVealFX
WtKyVrSqNa1rQ5va0rautaN/rTI71A==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5478849#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNwwNWhGEAAMCvbtIZsm1vdm3Wv9m2bR+1mfcmJZ6IRUkhhMjU5BAW7fHC
Oncd98U0l+z10nr3nPDVdJft88oG9530zQxX7PfaRg+c8t1MVx3wxiYPnfbD
LNcc9NZmj5zx02zXHfLOmMfO+mWOG8a9t8UTI7/NddNhH2z11IQ/5rnliI+2
eeacv+a77ahPtnvuvH8WuOOYz3a4YKGdFtllsSWWWma5FVZaZbU1dlvrP/h1
MFM=
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$5478849#6"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJw11F1IU2EYB/DTXM5tzk0RjD7WxC7SIiZG0YU2ozDqZlqSYdQomlSSq8tB
dMz0LtzUinV1SiMKkkVIphhHb8oUP0qSoOCsDwwUGpR9qZU+//8EOfx43r3n
f573OSf/ZEPVaZOiKKeW/1euy3/x8T+z5cvXQPBIxLd8NX7DRlhvXbFr04JY
me6TunYHDrQ+Ek+Mwrp7Uqz8hI3Ol2Jv/iJc+VQcOAirQ1fFyeGUq8Se77AW
mxL73UtiX+KjWN2/xLoluuL4RdZtheLQur/YL5d598FaxRjyNtCx58h7C9bn
7fL7yJp/zNsrdX0PHW5D3npYLTXLes/NVP2C2D8IK0qt2NitzEm+ksdi11lY
n58R+zpgdbYe+Z/BynSRWPvCeul6sbduFfazwYEobISbkb+f7lTF+mfY090i
TjpNc3j+IPrXa+L+YeT9YGLeOuR1pMGJAuTdmcb7HRVP9KRxv2qxYsCeZjyP
12bmfiHk3W5mnsvIe9zMfrxGP9+n1n9FPy2rUXdvbpPzL4a1UJ44XktXvEX/
zOnszwmpa9tgfbRLPFGTzvV3xUoT15e0iL0P09n/RrG+xcL94GQ1HAj2iz0q
64mN7ZL3AawUlonVKVp5I+tdhzJo5PFdymA/r4hD92A19zDyT2awP+XIv8B6
abU4ELYiT+99caTLyvWDyD9mZb+nkf+XlfdfRP4CG8/vHfp5G/YcGxcbIzau
70H+HzbO1wvk99iZ/xXyH0jZIs+vDNvZr1yx95ud87FVHNiQyftViiMVmfw9
7E+m6k3o51oHz2tIHN/rYD5NbJx38LwHxK6Yg/0xxFpeFvavdHdIP8uz+P5F
MQ/1qboP83Aji/NWhH7rdKwZ/SxzYv/W6+jnGTpYI/a3O3meuzC/A04+fyH6
PZOqF6OfQRfnPY55jsDqUCO+B30uzqcX8/CJ9dlzyO/MZn+wf+RaNvOM4Hvw
JJv3/4HvQYLuXsL7l5nDPHgf/TtyON89Ud9//tvMgQ==
              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 986.1756411390224}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 986.1756411390224}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {986.1756411390224, 
           1269.6990360047446`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{
              "\"Neural Network\"", "\"NN Confidence Interval\"", "\"\"", 
               "\"Gaussian Process\"", "\"GP Confidence Interval\"", "\"\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7679144666091413`*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"0b7364ac-0775-468d-9303-6d6692d361ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<MSFT\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767914520938518*^9, 3.767914521394689*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"2df54942-6dcb-4fa4-89fa-c3f604e5785e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1:eJxN22k0VW8bBnCpZMiUBkqZSQgVMsQ+GZKQKXFmESVTIiRDQmYqIUMooYQG
ipQhkYRCqTQoKtRBVIjwPv8P57nfT62zVsuy73099/6da5fUAW+bg5wcHBzl
izk4/vvTslPx5vOZH6TwhrRgWUFHwim/zlVj7gdpu/AXuYzTZCLUMe9Bx8IP
Uok548qCPpm4+nfPrC4ni+Sx4cO7ovdk4tWpnbw5S1ikPJ8whaD1VEJw4nSV
+jIWqUbgRJ+HC42wNUvZm8nDIt1tC91RVkYj8uIGozSXs0g5SumLzifSianb
sQnNAiySLv8+z9gBBuHQOBm8SZhFso20V99wiUE8qinjfSTCIp2JPLDdahmT
0MxWj1BZzSIpRMy9/WDIJCpcFp4miLJIHK0idcZeTEJ3legtiXUsklrFBZ6x
cCbRVjobHr2eRbq2PjTo2gkm4bZ5009JSRYpceyHSawLk+BLv6JaLs0i3ec+
2uW9i0lUDw7uF5ZjkURumqx9JMUkjkoGSBQpsEgfc2aPbexnEFtInc+FNrFI
dRV/Nv6NZRBzu49LlCmzSNwz7UoZexhEp46rgYEqi5R+x3dsQphBlItImRao
s0jOWq6bHXvpRPpL+Z9621ikNavWJF/NphO3N/fU5WuySHNDV+/IM+mEQ7Vf
POe/HyTxWL2buTWOhM9cuXDE/A9S4smSsTXnyMQ5xUnK0kUs0oS3cHBDIJl4
uONJhMdiFik8rzY/5gKFmNB2dhpcyiL5v5CZXqtAJdQ38C5x5WaRNITuZN87
TCNOfK9xH+Jlkcwc9Gzz+elE26XtsaH8LJK99sKOQQEmsVGXiJwWZJEufXv3
99AhBpFYZ2N4fAWL5FW0WOJzE4P4p+TTPLWSRbIYnq9JUWQS/uGi8rQ1LFJK
Q0n4bgqTmH4Qv6NHjEVSEaWvUwxmEpGfecRsxVmkkdMk3cgwJrF29FxV9wYW
6dCAvKjaUTTv/m+Ch6RYpKiZT9IR+5nEgbomw08yLNLzMJFzxhpMokutYOrd
RhZpcst9A79bDCKj6UoAQwn9PqtdytwPM4iCU/P7vTXQ/NttbnwJpRO2xs/X
H579Qbrb8lNX2dmROPRc68E7lGev5PX3tpWRiRjSnuXuHCzSQJSwvo8DmbiV
xWPwEuX5YPkUs1eGQnz50KWxE83vZdiWhel3FEKSe9fHZyjPfhHpMwcDaITr
WnkaCc2vjxn9+csHGnF3ZcqZXpTn0EM1qtv/0QmhKZcYBprfFy5V3flkBuHb
UMB4gfIcefLII/tyBtF3LHmIiub3pNEwMkOMSdgLyNk1oTx/36hU98GSSfSk
NJ1WR/Nz418SdtGfSTBnhQ5Wozyvkajlv4ny/MviibgKml/1fU+W23EmkRLD
Hf4Y5blvv4pKCg2dj5KK6l1ofgtv9Itj9JnE5eLEeBKan23ulEdlC4M4ePq+
TBXKr6Td8PJdQQxiQ8kK2R6Ux6Ze8od+dB6pKmv/ZqH8rXxe91hClEwEKG10
24jOf989hal8NTKRLZxfkofyp740bRtfAZl42hfZvASd/4iP0blWvFSCI+1X
QgIXi5Rt+3H79btUYue2dkUOdP4lcmQ7b0fQiMT71oHJfCzS1Tpy6Ft9OtG/
8XOcNDr/1hIX/pmrMQkibF34WSH08/c85rfwYBDFDzkUxNH5f1fbzfMcnT+x
L1YF51axSIY+e0rStJhE6gTf9G+UP/26yRN1B1G+hq2nTqxFeYwSeySP8lb8
hLOdhfKXNqTmFRKCfn4S3e6EBIv0Z1Ll2V93JtGv15TLh87/d04Fn2wrJsFZ
fd/5uCKL5HosPlgD7R8lh+/x3Oh89kqT1Yu86YRV/D9XcZQvMc7tWgbbHQmX
quCzMShfEXPvFV1LyMTpdn8XcZSvnztbmi+akYmS1k3rY1C+1l98+FBonky8
L+fNG0PzqtYxPJyxjEqIhhx8ForylS7xRbfWl0ZQt1B6RtC8+t/fvsX5hEaU
PK+JjkH5Wn9o/LzFIzqxZF8ArwjKl5Xpk7qWSnQ/H7V7hqB8NczeLay+yiBe
rMkNEkT52rwkeud9ISZhsk/pSBDKF3fKMElxN5NoOtEv34f25a7w+7eVfJmE
ZczKeA+Uryb3jUdGUb4+hXzueIv2ZeH+JWX3ApnESYpYlS/K15PLKmpSTkxC
UuqG3yyal8Lzu2bL0P6Nc4nY9xvtx4t7yN+jXjEI8/6mIBeUr58c5Fz9Uwyi
t048LhblS53/V+CeC3SCfGzXzr0oXxUqE1nKw46E30oPvVdov5mNrEx/d5hM
pOc8W2yL8iUT5fvtUwKZaBQoLKhC++0S3e/9enQe/7opTWmjfD38KlUu4k0l
dK79WH0H7bfeXYkbHLxpRGRX9LguylfNi9l+IXk68XpgedwLtN8iblFXlqN8
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
TPDlkreyfiJK0D9ei/7YqIi+j7J9qaCQR5rcSMe+vL/9k1+EHw37csur0Iv/
blKxLwtH7G8kCFOxL6921ou1FFGwL6snR+0KnSjYl0tGquS1DSjYl6TSqvot
mynYl2ZcaT+fKlCwL2NNd3Dfk6NgX7aH2B3gQp/ZvrzdFqj7TpaCfXnjVbkb
byn4Mn/R3W17uMGX3aHk/qPe4EtHlXDzeEHwZe8/1WH75eDLyrVVfAI64Etr
Q7VAO1Pw5Zb73nrj/+jYlzvpDnGpe8GXx6WbI6YOgy+1oh2vlO+B/rHcotUj
Y4GOfXnH5Hh2KXoesn1Z4nXUrvsFDftScveSaBchGvalUk9YVwuFin255vmL
X1avKdiXfgNzQglhFOzLdUUlgScsKNiXFg1/cru3UbAvZdZw5qpuomBf8r5N
mQmSp2BfxlHe3tiJ5s/2ZYw814dhNH+2L4nCrrny8+BLn+99GsnjjtiXmq/X
+sTagC+bosIfC3yC98c/fQ//1myE/jFn75S05DgV+3KfVzt3GA/4MnVxcEd8
L/SPhycTxaNI4MvokcXBcYfAl9QnHJL39oMvBwS2lLWvhv5xw8ea0TVX6diX
TTJZF4rnaNiXfmFm4Qo7adiXQYdXvpONomJffjZzi135i4J9STdXemx0joJ9
KWsuJVFjT8G+LE3m3RKgTcG+tKGExI0rUbAvB7WruvnQeWD7skrVLfMYmj/b
lwbSP57/QfNne/JJ7Nld1RL/9/8t3N+oOqaAJ5fLRWeeMgJPZknu+z0VDp7U
sPBsCggHTzY7pWVoi4Enx7IyM2vJ4El78d0iVm7gyT/f+1Z06UH/mDGSQnb+
Ssde3Hv36Wo1DSr2YpXLuVm9Wgr2YmJiEsndm4K9uHzH2fk7xhTsxfp/24ck
1CnYi5qlXAIvN1KwF8WID2O8KK9sLzYGrQmWQPNie/H0U/+9n9G82F707o4K
3BsNXjT/sK5A+Zsj9mLwwY0vrI3Bi9e5HhVTW6Fv/OOrLW6TB16ssWnV2dUG
faPmcfGXbYPwPnr/uZHyD83QN65ab/DMTBu8qHOS3r3bFbxI/PM7X0wFL7ZH
6KlYSEHf+Nv0AKfgPTr2YtTGwYIzInTsxVccIYvMKTTsxUj689TmTCr2on0h
VWdmERV7sUFxWO56NgV78c4C2X6aQsFetN/vZKSuR8Fe5DVdH8GhQsFeDJw4
UuaC8sr24qa5lqJzaP5sL3rpDHrOofmzfbistdzrgwj4sM56YsghDHw4E1uk
6KgIPiwPmeHpoYEPY1W/FRgfBB8OfX96op0PfHjKN0vz9D7w4RF3w1Lpw+DD
hL+Co1lG0De2qFaEfJygY//5FFq7S5pSsf/UN5HbjrZSsP/SxHmblAIo2H9J
mqdY7rsp2H9Kr1VCPm6hYP+JO1/yOY6uh+0/VdH5XH2UV7b/YqNvZquiebH9
d7rju/ZXNC+294R3sn7FMaFfpJ/od69UhH7xRU5sXwKLjv1Xn7J+esQU/Jeh
ffZ102HoG729CxUEbMCDlYLO28/xQb84XNO66Rz6/sn2nniUe8yQNQV7L3JS
t2CJFgV7rzGu15YT7S+290LbsxbVoutje2+9lp+CI7o+tvd4Nxg4jKHrY3sv
+dvnmb1y0C+2+9qtM2bA++WaL/zzcS7QN9rk6UpYbYM+sZt+fHTvTgr2nvsv
nf5zqhTsPclrH/8ao33B9l73+wDOj+j3YXuvYo/6e2H0me09Q47jnB/R7/c/
NhRVOg==
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt1FWUEAUUgOGlu0NaUrobBJQSBKQbaSSkQUIpBSkFpIRdapfu7pBGUjqk
lFRAuqT55sDDN/+5c+ZhzsydydCyS63OkUNCQiKRzyE/Q2jK50ymOxsowI80
YyFVCKUHGynIUJqziKqE0ZNNFGIYLVhMNabwDZspzHBasoQvmEovtlCEEbRi
KdWZRm9+oygjac0yajCdPmylGD/RhuXUZAZ92UZxfuYrVlCLcL5lOyUYRVtW
UpsIvmMHJRlNO1ZRh5n042PG0J7V1GUW/dlJKX6hA2uox2wGsIvSjOVr1lKf
OQxkN2UYR0fW0YC5DOITxtOJ9TRkHt+zh0+ZQGcaUZZyTKQLjZnPD/xOeX6l
K02oQEU+oxKT6MaXLGAwe6kcPNf3e3ZLEwX3rn/yhuUsYylL2MUZXrOYvK6/
qQmDZ6anecUiFrKDU7xkAXlcd0MTBO9P0+tJfcF8/iV+8O71Qz2hz5lHbvM/
Gi/YHU2nx/UZc8llvq5xg93TtHpM/2cOOc3XNI5u0TR6VJ8ym6vEdm6zptYj
+oRZ5DBf0Vi6SVPpYX3MTLKbL2tM3agp9Q99RATZzJc0hm7QFHpIHxJOVvPf
Gj3YB/1AD+oDZvCR+S+NFuySJtcDep/pZDFf1KjBLmoy3a/3mEZm8wWNEuyy
JtV9epepZDKf18jBt6BJgv3QO0who/lc8E8KviNNHOyd3iaMDOazIe9+Witl
D/8Rylt9yKNI
                 
                 "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0.5, 0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwV1GWUFQUAhuFLSUsICEpLSEsojTSC0t0hXUt3LLBLdyxLd3eH0imlNAhK
I92gtM/98cx7vjPnzo0zd9I1C6nWMWogEIhCGYdE0QKBDpQkK4npSCmyEU49
PiOE0kSSnaHUJwmdKEMOhtGApHSmLDlJRhfKkYvhNORzuvID0/iGETQiOd0o
z3RyM5LGLCYF3anADPIwiiYs4Qt68CMzyctomrKUL+nJT8wiH2NoxjJS0ouK
zOZbxvIzqehNJb4jNX2oTH7S0JcqFCAt/ahKQcbRnHT0pxqFGE8L0jOA6syh
MBNoyVcMpAZzKcJEWrGcDIRSk3kUZRKtWUFGBlGL+RRjMm1YSSYGU5sFfM8U
2rKKzAyhDgspTgTtWM3XhFGXRZRgKu1ZQ5bg692ICfU3/ZcZfGJv0GsMJoF9
WF8xnRj2er3KID61D+lLphHdXqdXCCW+fVBfEEk0e63+zUDi2Qf0OVOJGvx8
+hcDiGvv12dEECX4/fQy/dnHU6YE/1TB30Yv0Y+9PGEyK/mTvuzhMZNYwUX6
MJHlXKA3cVxvtz5iAh9Zxnl6Edv5XfqQ8XxgKefoSSznd+oDxvGeJZylBzu4
z1gWc4bu/Mo9xvCORZymG79wl9G8ZSGn6EpM77dd7zCKNyzgJF3Yxj+MZD5/
0Jmt3GYE8/idTgxnLicIYQu3GMYcjhN8mG3mJkN5zWyO0YFN3CCcWRylPRu5
Thj/MZMjtON/60eqtw==
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 84, 46, 26, 104, 66, 137, 2, 85, 47, 122, 27, 105, 
                67, 138, 3, 86, 48, 123, 28, 106, 68, 139, 4, 87, 49, 124, 29,
                 107, 69, 140, 5, 88, 50, 125, 30, 108, 70, 141, 6, 89, 51, 
                126, 31, 109, 71, 142, 7, 90, 52, 127, 32, 110, 72, 143, 8, 
                91, 53, 128, 33, 111, 73, 144, 9, 92, 54, 129, 34, 112, 74, 
                145, 10, 93, 55, 130, 35, 113, 75, 146, 11, 94, 56, 131, 36, 
                114, 76, 12, 95, 57, 132, 37, 115, 77, 147, 13, 96, 58, 133, 
                38, 116, 78, 148, 14, 97, 59, 134, 39, 117, 79, 149, 15, 98, 
                60, 135, 40, 118, 80, 16, 99, 61, 136, 41, 119, 81, 150, 17, 
                100, 62, 42, 18, 19, 101, 63, 43, 120, 82, 151, 20, 102, 64, 
                44, 21, 22, 23, 24, 103, 65, 45, 121, 83, 152, 25}]}, 
              Annotation[#, "Charting`Private`Tag$5554223#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwVyvc6F2AcxuFfVBRFVEqRPdJwLA6hA9DpVEZo2ClbVsumYUSkRIRKCkkR
tz8+13093/dNvHY9J/dAIBC4oZv6pm7VKuBhEom8xe/qUZRdt//MKSYxjyvq
VbRdzyC+ZzLz+UN9Omk3MJjTTGEBV9WvU3YjD/IDU1nInxrQabuJh/iRabzN
XxpUjN3Mw5xhOou4piGdsVsYwk/MYDHX9VJn7ccM5SwzWcINvVKs3cojnONF
3uFvvdY5u41H+Zl3tak3Ou/WzjDOM4v3+EfDirM7GM4FXuJ9bmlE8XYnj/EL
L7OUfzWqC/YTHuciy/RPY0pwe8oILvEKy7mtt3qmClVqR+N6rkj/lnmVVfyv
Cb1QtR6oRg+1q3fq0gn/vzKbj7gH5RxZKQ==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5554223#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwV0mk2FQAAgNFnKZagpEQiEsr0ypgioRBPSFFmhUoUlUJEFA0yJGUqpVpW
1497zreAL7w0FKwNCwQCo0SIHi6Sxij1fOMAdylmgdO8oIHvHOQeJbznDC9p
ZINIernEB9IZ4wabHKKPUj6SwThNbBFFP5f5RCYT3GSbw9ynjEWyeMUtdjjC
A8r5TDaTNPODaB5SwRJBpmjhJ0cZ4ArLnOU1t9klhkdcZYVzTHOHWAapZJUc
ZmjlF8cYooov5PKGNn4Tx2OqWSOPWdrZ4zhPuMZX8pmjg3iGqWGdAt7SyR8S
GGF/gkJOkMhTQpznHV38JYln1FHESZI5RQrPuc4F5unmH6n8B4dTTNA=
                "]]},
               Annotation[#, "Charting`Private`Tag$5554223#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 1, 0]], 
               LineBox[CompressedData["
1:eJwNx2c7lgEAhuHnJaHSEGkpEpWIBpUUySorKoQy2j7Uf+rfmFFSaYgiSiGV
0HB+OI/rvpM7HtU9DAVB8JguIy0sCJZ1nG4O+Cv6gXN2LD32Qf2jdfpRC3Qr
vfYh/asTFNpx9Nnp+k8n6eew/18/cd6O54mdoQFXmPKLdBsDdqaGuMq0f0ET
aGPQP6JhXOOzX6zbaeepn6XhfLFLdAfP7GxdQz0zfqnupIMh/6hG0MBXv0x3
cYvn/jFdSyPf/HLdzW2G/eMayaz9ghN2FHP2S3LsaObti5rIKztX1/HdvqR7
GLFP6nqus+BX6F5e26d0A0388Cs1iTu88U9rDM389Ks0mbu89fN0Iy388qt1
H/d455/RTdxg0a/RFO4z6ufrZm7y27+s+3nAe/+sbqGVJb9WU+lkzF8F0xdK
hg==
                "]]}, Annotation[#, "Charting`Private`Tag$5554223#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNzWdXyGEcx+F/g8rsLXhLvYSeopKkjAoNZCUaNIykrR2hkBWitFCyVzKK
KCmuB9f5nO/5nXPf62LjY+JCgiCoZH1oENyjhDkyeU0rG7hPKVm8oY2NPKCM
ebJ5Sztx9FFODu/oIJ6HnGIvCTziNPt4z0U20c8Z9vOBSyQywFn+kMtHOokI
C4LN+pgKFjjAJy6TxCDn+MtBJrnCFoao5BCfuUoyw5xnkcNM0UWk/7bqCFUs
cYQvdBPlnqKjVPOPPL5yjRXuqfqEGo6yjafUks83rrOdZ9RxjO/cYAdj1BN4
77hO08NOxmkgxK1AZ7jJSjtNn3OBULtQf3CLVXa6TtBImF2kP7nNajtDX9BE
uF2ss9xhjb1LX9LMMvuE/uIua+3d+ooWltsn9Te9RNt79D+Z6W2Y
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5554223#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNw4dWSAEAANDX8QVEUdqSQqVhl2S0lBZNITM0UKnMpkhWIe2lUPhF955z
45rbK9tCgiBYcOuWIGg13xS32eYZ9ztsvaG2e9YpDzhig9vt8JwHfW2jO3zo
eVMN85EFpjnqFcN9bKHfTfeNTe600yKnPeRbr7rmLrssdsYMx7zmuhF2W+Ks
mb7zuj+N9IkXnDPLcZv95W57LHXebN97wyh7LfOw0fZ50SPG+NRyjxrrMys8
5gdvGudzKz3uR28Z7wurXPCEn7xtgi+tdtGTfvaOv93jKy+5ZI4T3nXDRPu9
7LK5TtripnsdsMYVT/nFe/4xyUFrXTXPr973r/scss4fnvabD/xnsv8Bmmc/
0A==
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$5554223#6"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJxV1FtIFGEUB/BxW1133MtsGEamjOSLBKLYDdIaK9mol90k8LLpdFM0ya3H
rWBFpIeyNorKnqYsgkDZkMhuMvaUtdgI0T4FY2RFGix0M6+t/3PmoYVl+HG+
Od//u+wWHek8cNwmCMLR9Hflmf7E385NV6ef8qC/Xkk/zb9kra++bsVS8TzV
e86grt0hC8lu2EiQlYohWPhD1vy+hhWXFS3Aastn1NX9C/+NT41Zpn7yT7LZ
r+D9QOEiOVgHR/cuct7zcPw0WQt/h8P5S5z3BKzVLHF9ADY6yXriIizcIiuT
r+HY2mWqF9bA+i6yUPKc8nYsc56bqMs3lnm+fMo7So5OP6T93CnMoB7qRF1q
J0dzx2HlGnu6i/KPkDV/kPJ/JSuT7bSfrRlweiZYvULWfw1T/mdcTw5R/imy
1vcETnltPL+nEfs3bOP+Imx+tPH4McrrXkXjqxpQV7ayc0dg4xH75RQsmGRF
zAshr2i3+sPqJjuvNwOONVkuguUPZLNfggOOTFpfYgb9o+WZvP4U5W/M5PEa
HLZn0fjCzXhfKyXLg62wUZfF72uw0J3F+e9R3gF21Rysb3RQ/8ixQ9i/gw7e
nzZYjrL9h+HAA4e1v03I+46sVOxGXarN5v7tsHLOcgQO38/mfuWwNkGWe7bD
xjxZKDkLqxEnjx+FY3edXE/A+riT8yxR/lknn0+S8m8Q+f7MwvHbIs83D5tv
RD6fCcr/W+T+LqxPkXN4v9fA4X3sRCUsjOVY64fLfuRY64PVAhf7FBzzu/i8
knAg5eLzTdF+rnPz/KFm5N3j5roCmyfdPH+xirx9XI9Uwlqeh8dvg41qD+er
hYUOrgdn0a/sOlkL98Kq7uH+6zE+tcPLtsNym9e6DxgfuOrl+VQ4+sLL948c
/8L14CtYaZFm6P/yPe1njD1cirr2VOL+XbDxSeL7W0D5vT6+TzY41svOvYTx
+mOf9X8ApyZ9/Pv8Bsuu1Xz+Fyj/FnbocrPyD27ytT4=
              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 98.90248978255677}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 98.90248978255677}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {98.90248978255677, 
           133.36329132402287`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{
              "\"Neural Network\"", "\"NN Confidence Interval\"", "\"\"", 
               "\"Gaussian Process\"", "\"GP Confidence Interval\"", "\"\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.767914566806015*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"e7860af3-fdef-47f5-92e1-d82dc844362a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictPrices", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<Facebook\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", "2019", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "12", ",", "31"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767914580692541*^9, 3.7679145821410923`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"05cb6401-cb8d-46f2-9c57-fa5a99b17281"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{
          GraphicsComplexBox[CompressedData["
1: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
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               GrayLevel[0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwt0GdXjwEcx+G/kPUqvCUPs7NDQ1aRpNDQsFIRiqaMKCIilJRdZigzKSO7
olydenCdz/me37nvc+57emjEjPCgQCAwjtOcoZtH3KKKjzzmNt/pZLwHqrWH
J/zlDj94xQT3s9rLU/5xl5+8ZqL7Of3EM4a4xy/eEOxeo59pZ5j7/OYtk9zP
6xeeB0Y/4IH84R2T7Qv6lRcjZ7tV+3nPFLtW+3hJkN2mA3Qx1b6ol6jjMleo
5yrXuE4DjdygiZs0840OHjLIB6Z5Z4uuGvvXmRSykW3kEkUkEYSzkhUsJ4xl
LGUJi1nEQhZQSQYFbKCMreQQyinSOUwspSSxj/mcZAeHiKGERLKZxwnSOMh6
itnCXuZynFTyWUcRCexhDhWkcIC1HGUzu5nNMZLZzxqOEM8uZlHOdvJYzSZ2
MpNo4sgihP9ITHKR
                 
                 "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0.5, 0.5], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwV0lNwGFAQBdCktu3Utm0ztdvUTG381rZt27Zt27ZPP87ceXNn9mPfBoWE
BncNExAQEMg3wnlUJjttSE4DitKT8FQhB21JQUOK0YsIVCUn7UhJI4rTm4hU
IxftSUVjStCHSFQnNx0Iogkl6UtkapCHjqSmKaXoRxRqkpdOpKEZpelPVGqR
j86kpTllGEA0gslPF9LRgrIMJDq1KcD/xaWnJeUYRAzqUJBQMhBCeQYTk7oU
ohsZaUUFhhCLehSmO5loTUWGEpv6FKEHmalEHLIQl6zEIz4JSEgiEpOEpGQj
GfN8/HrmMofZzGImM5jONNYxlbVM4TRr+MJebjKZsGaeks9YzWf2cINJhNGf
lE9ZxSd2c52JBOpPyCes5CO7uMaE/0eqPy4fs4IP7OQq4/nLMR6xnPfs4Arj
+MNRHrKMd2znMmP5zREesJS3bOMSY/jFYe6zhDds5SKj+ckh7rGY12zhAqP4
wUHusohXbOY8I/nOAe6wkJds4hwj+MZ+brOAF2zkLMP5yj5uMZ/nbOAMw/gH
+px/ig==
                 "]]}]}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]], 
               
               LineBox[{1, 55, 36, 26, 2, 56, 37, 27, 65, 46, 81, 3, 57, 38, 
                74, 28, 66, 47, 82, 4, 58, 39, 75, 29, 67, 48, 83, 5, 59, 40, 
                76, 30, 68, 49, 84, 6, 60, 41, 77, 31, 69, 50, 85, 7, 61, 42, 
                78, 32, 70, 51, 86, 8, 62, 43, 79, 33, 71, 52, 87, 9, 63, 44, 
                80, 34, 72, 53, 88, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
                20, 21, 22, 23, 24, 64, 45, 35, 73, 54, 89, 25}]}, 
              Annotation[#, "Charting`Private`Tag$5647895#1"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               
               LineBox[{90, 144, 125, 115, 91, 145, 126, 116, 154, 135, 170, 
                92, 146, 127, 163, 117, 155, 136, 171, 93, 147, 128, 164, 118,
                 156, 137, 172, 94, 148, 129, 165, 119, 157, 138, 173, 95, 
                149, 130, 166, 120, 158, 139, 174, 96, 150, 131, 167, 121, 
                159, 140, 175, 97, 151, 132, 168, 122, 160, 141, 176, 98, 152,
                 133, 169, 123, 161, 142, 177, 99, 100, 101, 102, 103, 104, 
                105, 106, 107, 108, 109, 110, 111, 112, 113, 153, 134, 124, 
                162, 143, 178, 114}]}, 
              Annotation[#, "Charting`Private`Tag$5647895#2"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]], 
               LineBox[CompressedData["
1:eJwVzNk2gmEYhuFfGZKj6JTs2XUAHFwZSmYaTJE5JJkSQihjXG1c617Petf3
xUbHh8d6giAYIc4dB2yQoM4hm7xSIezBhN5zxA9bvHFBr/ukPnDMLwXeqdLn
PqWPlOiwTYtL+t2ntcEJf+zQ5ooB96Q+cUpgF+WDayJ2Sp85657tXf3khkF7
Rl8oE7L39ItbonZaZ5ljngUWWWKZFVbJkCVHnjWanLPPNzWG/Lmu/78oQ6A=

                "]]}, Annotation[#, "Charting`Private`Tag$5647895#3"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 1, 0]], 
               LineBox[CompressedData["
1:eJwVy1U3JAAAgNHxrrvtYHXHWs2ubqObsbq7rfa3XQ/3nO/lC4aPQocRgUDg
nkgR4hcH/GSVLu6IYoIGvqcC1ujmnmgm+c0RhYTp4YEYpmjkmCLW6eWRWKZp
4oRi/tHHf+KYoZlTStignyfimaWFM0rZZIBnEpijlXPK2GKQFxKZp40Lytlm
iFeSWKCdSyrYYZg3klmkgysq2WWEd1JYopNrqthjlA9SWeYPN1SzzxifpLHC
X26pYZx0asmgjkyyyCaHHwTJJY968vkCp8EmRg==
                "]]}, 
              Annotation[#, "Charting`Private`Tag$5647895#4"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwV0FVWlgEUhtHvx5EwJYbAAHACDIAGpRsJUaS7G6QUJSSku7t7c7HXc9Z6
70545MeIqFAQBNHEOH5Tzz5fWKKXW2KZpIEDilmmjzvi+EMjh5SwQj/3xPOX
Jo4oZZUBHkhgimaOKWONQR5JZJoWTvjKOkM8kcQMrZxSzgbDPJPMLG2c8Y1N
fvJCCv9o55zvbDHCK5+Yo4MLKthm9P2BYUHwWefp5JIf7DBGyJ6qC3RxRSW7
jBNmT9NFurmmij0m+GBP1//0cEM1v8ighkxqySKbHHLJI58CCqmjiDdExF5a

                "]]}, Annotation[#, "Charting`Private`Tag$5647895#5"]& ], 
             TagBox[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0.5]], 
               LineBox[CompressedData["
1:eJwNw4VSVAEAAMAHQ3dIl0d3Ix0qaRCHlJJHh3dKN7/O7syGIrFwNC4IgmcT
4oPgm+0eWuG6I16Z6Hc7PLLSDUe9Nskfdnpslb8d88Zkf9rliR/947i3pjhv
t6eG3HTCO1NdsMczq93ys/emuWiv59a47RcfTHfJPi+sdcevPpph2E/+tc5d
J30y02X7jVrvnlM+m+UvB4zZYMRpX8x2xUH/2ei+M76a46pD/rfJA2d9M9c1
h7202TnzbDHfVj9YYKFFFltiqWW2We47V3Ai4g==
                "]]}, 
              Annotation[#, 
               "Charting`Private`Tag$5647895#6"]& ]}}], {}}, {{}, {{{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             PointBox[CompressedData["
1:eJw1029IE3EYB/DTltPpvClSYSQn9UJLZGkUiNotEle9aBaBodSlOS2kLQkC
wTiqNwXhQklWEGcFQdGYLypLqtMXgbTqishXwhlFkUKDMjXNmt/n+Q3G8eH5
/Xl+399dcUvoQFu6JEmtqf/KM/WLv/0z7Us99bFZTU097QWyEjsLezYtwlqw
9tiKjVtkI+qDrQTZnLVgaY6sNDtbVuwtXuL5GbC2b4nnL2B8cpxsd5ehrvwS
42/CgaK/NL7+NKz72dFLcLxL1Efh8PplOk9NF2zULfP4LNgKkbXeKli6TrYb
DDiy7h+sukKwuYusF1D/yU6yEX5N/Q6I+sfj6HeUrA0/gu2d0owPSZe0Ic+T
ZLOoDVb7yUpsPxx+zuNLE5hvfCNrvd9hb3vaDJ33CaxdFR6EIyNkveY8bH4h
a8FzcFJO534CcHw4nefvoX4/kfXpBtjjXsX1NFjdQba7q2HrIVma6IMlm116
kfp1OXi9w9TvNgf3U079HiGbs35YmXTwetOUp3M17dfQgXz0rcIRON5EVisr
KT9Hhjg/bJSTjXAPbDVm8Pr3YemCqNfB3gdkpfkF5bfFSeu7ZMrvkJPXr6B+
dXZBjPq95+T7GoP1Dzx/6jLleTCT8xynPHvIqe8PDt/N5P5G6P7f8fjoEOW9
yOP5fdO6szjPNeg/ckf4JWy+yeL9huDkPNm+LQXR/0YXn2+O8hx0cT+TsP3K
xeepwHjPb67XVMGqks334YXDe7P5PlphaZxsJs7A3p/ZfL4mWNuQw/ffCEfq
hf1wIJkj8oX1QjfX5+H4bjf39x62T7m5n5IO9Bt18/f1ox15rs0V+6Fu+diJ
MljqFHUF9l4T9sCamct5heBkrczvezWsnJA532HsF+iTRf6w/kzm/frh+FdZ
vB+wGvSI8ZRnxMPv4wBsPPXw+n6Mtz5zPXYUluQ8fl9K4ciVPO53AvPNx3l8
f4WoJ6eEN8NKTj7fzw3Kf3s+f7+DQfU/u2q7Sg==
              "]]}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {3.755376*^9, 101.68840769369893`}, 
         FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {3.755376*^9, 101.68840769369893`}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{3755376000, 3786739200}, {101.68840769369893`, 
           196.08577926433856`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{
              "\"Neural Network\"", "\"NN Confidence Interval\"", "\"\"", 
               "\"Gaussian Process\"", "\"GP Confidence Interval\"", "\"\""}, 
              "LineLegend", DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7679146372148123`*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"a6c179f0-2743-4de7-bfcc-8fe06eae61f3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1012},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{
 "PaginationCache" -> {{2018, 2, 20, 19, 46, 39.675061`8.351092581673305}, {1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
     4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 
    9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 14, 14, 
    15, 15, 17, 17, 19, 19, 19, 20}, Automatic}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Creative"}, "PastelColor.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Text"], FontFamily -> "DejaVu Sans", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Title"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 30,
     FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Section"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    18, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subchapter"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    28, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Chapter"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    30, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Italic", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Item"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 13, 
    FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subitem"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 
    13, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubitem"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 
    13, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"]], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Input"]], 
   Cell[
    StyleData["Code"]], 
   Cell[
    StyleData["CodeText"], FontFamily -> "Source Sans Pro", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Output"]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Subsubtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Italic", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "12.0 for Linux x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 159, 3, 69, "Chapter",ExpressionUUID->"fc9086ca-7fae-4a8a-8e60-0556be041842"],
Cell[CellGroupData[{
Cell[764, 29, 351, 8, 49, "Input",ExpressionUUID->"96d2cba7-b7fd-4e91-9ac7-050a53c8c93b"],
Cell[1118, 39, 383, 12, 67, "Output",ExpressionUUID->"b00441cd-6464-4f8a-88b5-fec9c1501087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1538, 56, 235, 4, 49, "Input",ExpressionUUID->"d77a4997-fee9-47ea-9c20-7f8cdd3d159d"],
Cell[1776, 62, 556, 12, 51, "Output",ExpressionUUID->"247f037d-7c00-4443-898c-317bec00d124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2369, 79, 848, 21, 59, "Input",ExpressionUUID->"ec524109-dd15-4eae-b0cf-a6e89681bf2a"],
Cell[3220, 102, 34448, 603, 84, "Output",ExpressionUUID->"d8d04f44-638d-4e97-9be9-9a5f10fd4c6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37705, 710, 215, 4, 49, "Input",ExpressionUUID->"7be6ddb3-cfca-43ba-b985-9b13ad68f8bd"],
Cell[37923, 716, 25703, 443, 276, "Output",ExpressionUUID->"50b7623c-88b2-43ef-93ff-42642a8a6545"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63663, 1164, 520, 13, 49, "Input",ExpressionUUID->"f7d6f86e-8dcd-4e90-ac50-673e144fe5ff"],
Cell[64186, 1179, 13509, 271, 84, "Output",ExpressionUUID->"a6c1a501-a8ab-42f6-9b27-1bbe64d9b94d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77732, 1455, 216, 4, 49, "Input",ExpressionUUID->"1735185f-49f8-4cac-afd2-9b11fb557c26"],
Cell[77951, 1461, 2545, 62, 270, "Output",ExpressionUUID->"b1331fe0-404f-4cbf-9033-a1d5e067108c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80533, 1528, 1109, 24, 158, "Input",ExpressionUUID->"c3502bf7-b200-4623-a3dd-ba5c07961f5f"],
Cell[81645, 1554, 33303, 646, 84, "Output",ExpressionUUID->"003288e9-5a91-46ad-af55-bb2f408721cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114985, 2205, 214, 4, 49, "Input",ExpressionUUID->"2aa0257c-465e-40a9-ad0f-dada9a03a298"],
Cell[115202, 2211, 64944, 1290, 587, "Output",ExpressionUUID->"24ddf9ba-6105-4539-8b95-b95ffb7d759a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180183, 3506, 3369, 73, 509, "Input",ExpressionUUID->"a6df93cf-9ed8-4eee-a398-bcb5837e7668"],
Cell[183555, 3581, 28272, 555, 272, "Output",ExpressionUUID->"b17c2eee-c9f2-4d72-bf06-46e705f30b3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211864, 4141, 7188, 149, 1346, "Input",ExpressionUUID->"3024edc8-7629-4974-b948-0d5d6146b4a1"],
Cell[219055, 4292, 148308, 2989, 1001, "Output",ExpressionUUID->"1d19459a-4306-45d8-bdcc-152695e67284"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367400, 7286, 8696, 182, 1103, "Input",ExpressionUUID->"2161f685-ad96-4a3d-a672-3af5a1c1a71f"],
Cell[376099, 7470, 233347, 4655, 1551, "Output",ExpressionUUID->"21b630df-5c29-4db6-8397-603797b7a642"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609483, 12130, 566, 11, 158, "Input",ExpressionUUID->"4be81d7e-0cff-4b70-a123-4e7ee037bc46"],
Cell[610052, 12143, 228860, 4576, 1547, "Output",ExpressionUUID->"6e48ac9d-b9bb-462e-a29d-c28e22d128ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838949, 16724, 8506, 176, 1076, "Input",ExpressionUUID->"6c44f44b-5c39-4a70-810e-60a723c35e0e"],
Cell[847458, 16902, 47662, 934, 409, "Output",ExpressionUUID->"0b7364ac-0775-468d-9303-6d6692d361ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[895157, 17841, 564, 11, 158, "Input",ExpressionUUID->"2df54942-6dcb-4fa4-89fa-c3f604e5785e"],
Cell[895724, 17854, 52742, 1018, 414, "Output",ExpressionUUID->"e7860af3-fdef-47f5-92e1-d82dc844362a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[948503, 18877, 570, 11, 158, "Input",ExpressionUUID->"05cb6401-cb8d-46f2-9c57-fa5a99b17281"],
Cell[949076, 18890, 47160, 925, 445, "Output",ExpressionUUID->"a6c179f0-2743-4de7-bfcc-8fe06eae61f3"]
}, Open  ]]
}, Open  ]]
}
]
*)

